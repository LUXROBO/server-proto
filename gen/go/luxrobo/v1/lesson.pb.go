// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: v1/lesson.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LessonE 강의정보
type LessonE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auto No
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// lessonNo
	LessonNo int64 `protobuf:"varint,2,opt,name=lessonNo,proto3" json:"lessonNo,omitempty"`
	// 강의 제목
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 강의 소제목
	SubTitle string `protobuf:"bytes,4,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	// 강의 설명
	Describe string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
	// 색상
	Color string `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	// 텍스트 색상
	TextColor string `protobuf:"bytes,7,opt,name=textColor,proto3" json:"textColor,omitempty"`
	// 백그라운드 이미지
	BgImg *ImageInfoE `protobuf:"bytes,8,opt,name=bgImg,proto3" json:"bgImg,omitempty"`
	// 소개 비디오
	VideoUrl string `protobuf:"bytes,9,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`
	// 소개 비디오 타입
	VideoType VideoType `protobuf:"varint,10,opt,name=videoType,proto3,enum=v1.VideoType" json:"videoType,omitempty"`
	// 메인 이미지
	MainImgs []*ImageInfoE `protobuf:"bytes,11,rep,name=mainImgs,proto3" json:"mainImgs,omitempty"`
	// 수업 시간
	ClassTime int32 `protobuf:"varint,12,opt,name=classTime,proto3" json:"classTime,omitempty"`
	// 유저 Activity 정보
	UserActivity *UserActivityE `protobuf:"bytes,13,opt,name=userActivity,proto3" json:"userActivity,omitempty"`
	// 레벨 타입
	LevelType string `protobuf:"bytes,14,opt,name=levelType,proto3" json:"levelType,omitempty"`
	// 그룹 타입
	GroupType string `protobuf:"bytes,15,opt,name=groupType,proto3" json:"groupType,omitempty"`
	// 잠금 타입
	LockType string `protobuf:"bytes,16,opt,name=lockType,proto3" json:"lockType,omitempty"`
	// 코딩 생성자 타입
	CreationType string `protobuf:"bytes,17,opt,name=creationType,proto3" json:"creationType,omitempty"`
	// 서비스 타입
	ServiceType string `protobuf:"bytes,18,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	// 학습요소 JSON
	ElementJson string `protobuf:"bytes,19,opt,name=elementJson,proto3" json:"elementJson,omitempty"`
	// 학습정보
	Summary *LessonSummaryE `protobuf:"bytes,20,opt,name=summary,proto3" json:"summary,omitempty"`
	// 정답 코드
	AnswerCode string `protobuf:"bytes,21,opt,name=AnswerCode,proto3" json:"AnswerCode,omitempty"`
	// 강의 계획 Array
	LessonPlans []*LessonPlanE `protobuf:"bytes,22,rep,name=lessonPlans,proto3" json:"lessonPlans,omitempty"`
	// 태그 리스트
	Tags []string `protobuf:"bytes,23,rep,name=tags,proto3" json:"tags,omitempty"`
	// 오픈 여부
	OpenType string `protobuf:"bytes,24,opt,name=openType,proto3" json:"openType,omitempty"`
	// 메인 이미지
	Files []*FileInfoE `protobuf:"bytes,25,rep,name=files,proto3" json:"files,omitempty"`
	// 수업 등록자 No
	UserNo int64 `protobuf:"varint,26,opt,name=userNo,proto3" json:"userNo,omitempty"`
	// 작성자 User No
	OwnerNo int64 `protobuf:"varint,27,opt,name=ownerNo,proto3" json:"ownerNo,omitempty"`
	// 작성자 User 이름
	OwnerName string `protobuf:"bytes,28,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	// 진도율 퍼센트 정보
	ProgressRate int32 `protobuf:"varint,29,opt,name=progressRate,proto3" json:"progressRate,omitempty"`
	// 진행 정보
	Progress *LessonProgressE `protobuf:"bytes,30,opt,name=progress,proto3" json:"progress,omitempty"`
	// 수정가능 여부
	IsEdit bool `protobuf:"varint,31,opt,name=isEdit,proto3" json:"isEdit,omitempty"`
	// 순서 idx
	Idx int32 `protobuf:"varint,32,opt,name=idx,proto3" json:"idx,omitempty"`
	// 강의시작
	StartTime int64 `protobuf:"varint,33,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// 강의 시작 타입
	StartType string `protobuf:"bytes,34,opt,name=startType,proto3" json:"startType,omitempty"`
	// 강의 시작 여부
	IsStart bool `protobuf:"varint,35,opt,name=isStart,proto3" json:"isStart,omitempty"`
	// Epub URL
	EpubUrl string `protobuf:"bytes,36,opt,name=epubUrl,proto3" json:"epubUrl,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,37,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,38,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// 삭제 날짜
	DeletedAt int64 `protobuf:"varint,39,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *LessonE) Reset() {
	*x = LessonE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonE) ProtoMessage() {}

func (x *LessonE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonE.ProtoReflect.Descriptor instead.
func (*LessonE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{0}
}

func (x *LessonE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonE) GetLessonNo() int64 {
	if x != nil {
		return x.LessonNo
	}
	return 0
}

func (x *LessonE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonE) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *LessonE) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *LessonE) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *LessonE) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *LessonE) GetBgImg() *ImageInfoE {
	if x != nil {
		return x.BgImg
	}
	return nil
}

func (x *LessonE) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *LessonE) GetVideoType() VideoType {
	if x != nil {
		return x.VideoType
	}
	return VideoType_HLS
}

func (x *LessonE) GetMainImgs() []*ImageInfoE {
	if x != nil {
		return x.MainImgs
	}
	return nil
}

func (x *LessonE) GetClassTime() int32 {
	if x != nil {
		return x.ClassTime
	}
	return 0
}

func (x *LessonE) GetUserActivity() *UserActivityE {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

func (x *LessonE) GetLevelType() string {
	if x != nil {
		return x.LevelType
	}
	return ""
}

func (x *LessonE) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *LessonE) GetLockType() string {
	if x != nil {
		return x.LockType
	}
	return ""
}

func (x *LessonE) GetCreationType() string {
	if x != nil {
		return x.CreationType
	}
	return ""
}

func (x *LessonE) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *LessonE) GetElementJson() string {
	if x != nil {
		return x.ElementJson
	}
	return ""
}

func (x *LessonE) GetSummary() *LessonSummaryE {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *LessonE) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *LessonE) GetLessonPlans() []*LessonPlanE {
	if x != nil {
		return x.LessonPlans
	}
	return nil
}

func (x *LessonE) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LessonE) GetOpenType() string {
	if x != nil {
		return x.OpenType
	}
	return ""
}

func (x *LessonE) GetFiles() []*FileInfoE {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *LessonE) GetUserNo() int64 {
	if x != nil {
		return x.UserNo
	}
	return 0
}

func (x *LessonE) GetOwnerNo() int64 {
	if x != nil {
		return x.OwnerNo
	}
	return 0
}

func (x *LessonE) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *LessonE) GetProgressRate() int32 {
	if x != nil {
		return x.ProgressRate
	}
	return 0
}

func (x *LessonE) GetProgress() *LessonProgressE {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *LessonE) GetIsEdit() bool {
	if x != nil {
		return x.IsEdit
	}
	return false
}

func (x *LessonE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonE) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *LessonE) GetStartType() string {
	if x != nil {
		return x.StartType
	}
	return ""
}

func (x *LessonE) GetIsStart() bool {
	if x != nil {
		return x.IsStart
	}
	return false
}

func (x *LessonE) GetEpubUrl() string {
	if x != nil {
		return x.EpubUrl
	}
	return ""
}

func (x *LessonE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *LessonE) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// LessonLevelE 레벨정보
type LessonLevelE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LessonLevelE) Reset() {
	*x = LessonLevelE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonLevelE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonLevelE) ProtoMessage() {}

func (x *LessonLevelE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonLevelE.ProtoReflect.Descriptor instead.
func (*LessonLevelE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{1}
}

func (x *LessonLevelE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonLevelE) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// LessonGroupE 그룹정보
type LessonGroupE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LessonGroupE) Reset() {
	*x = LessonGroupE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonGroupE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonGroupE) ProtoMessage() {}

func (x *LessonGroupE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonGroupE.ProtoReflect.Descriptor instead.
func (*LessonGroupE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{2}
}

func (x *LessonGroupE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonGroupE) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// LessonBookE 강의책 정보
type LessonBookE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auto No
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// bookNo
	BookNo int64 `protobuf:"varint,2,opt,name=bookNo,proto3" json:"bookNo,omitempty"`
	// 제목
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 소제목
	SubTitle string `protobuf:"bytes,4,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	// 설명
	Describe string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
	// 색상
	Color string `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	// 텍스트 색상
	TextColor string `protobuf:"bytes,7,opt,name=textColor,proto3" json:"textColor,omitempty"`
	// 백그라운드 이미지
	BgImg *ImageInfoE `protobuf:"bytes,8,opt,name=bgImg,proto3" json:"bgImg,omitempty"`
	// 서비스 타입
	ServiceType string `protobuf:"bytes,9,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	// 메인 이미지
	MainImgs []*ImageInfoE `protobuf:"bytes,10,rep,name=mainImgs,proto3" json:"mainImgs,omitempty"`
	// 태그 리스트
	Tags []string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	// 커리큘럼 Array
	LessonCurriculums []*LessonCurriculumE `protobuf:"bytes,12,rep,name=lessonCurriculums,proto3" json:"lessonCurriculums,omitempty"`
	// 순서 idx
	Idx int32 `protobuf:"varint,13,opt,name=idx,proto3" json:"idx,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LessonBookE) Reset() {
	*x = LessonBookE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonBookE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonBookE) ProtoMessage() {}

func (x *LessonBookE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonBookE.ProtoReflect.Descriptor instead.
func (*LessonBookE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{3}
}

func (x *LessonBookE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonBookE) GetBookNo() int64 {
	if x != nil {
		return x.BookNo
	}
	return 0
}

func (x *LessonBookE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonBookE) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *LessonBookE) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *LessonBookE) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *LessonBookE) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *LessonBookE) GetBgImg() *ImageInfoE {
	if x != nil {
		return x.BgImg
	}
	return nil
}

func (x *LessonBookE) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *LessonBookE) GetMainImgs() []*ImageInfoE {
	if x != nil {
		return x.MainImgs
	}
	return nil
}

func (x *LessonBookE) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LessonBookE) GetLessonCurriculums() []*LessonCurriculumE {
	if x != nil {
		return x.LessonCurriculums
	}
	return nil
}

func (x *LessonBookE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonBookE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonBookE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// LessonCurriculumE 커리큘럼 정보
type LessonCurriculumE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auto No
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// curriculumNo
	CurriculumNo int64 `protobuf:"varint,2,opt,name=curriculumNo,proto3" json:"curriculumNo,omitempty"`
	// 커리큘럼 제목
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//
	Label string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	//
	LabelColor string `protobuf:"bytes,5,opt,name=labelColor,proto3" json:"labelColor,omitempty"`
	// 커리큘럼 소제목
	SubTitle string `protobuf:"bytes,6,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	// 커리큘럼 설명
	Describe string `protobuf:"bytes,7,opt,name=describe,proto3" json:"describe,omitempty"`
	// 색상
	Color string `protobuf:"bytes,8,opt,name=color,proto3" json:"color,omitempty"`
	// 텍스트 색상
	TextColor string `protobuf:"bytes,9,opt,name=textColor,proto3" json:"textColor,omitempty"`
	// 백그라운드 이미지
	BgImg *ImageInfoE `protobuf:"bytes,10,opt,name=bgImg,proto3" json:"bgImg,omitempty"`
	// 서비스 타입
	ServiceType string `protobuf:"bytes,11,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	// 커리큘럼 뷰타입
	ViewType string `protobuf:"bytes,12,opt,name=viewType,proto3" json:"viewType,omitempty"`
	// 메인 이미지
	MainImgs []*ImageInfoE `protobuf:"bytes,13,rep,name=mainImgs,proto3" json:"mainImgs,omitempty"`
	// 유저 Activity 정보
	UserActivity *UserActivityE `protobuf:"bytes,14,opt,name=userActivity,proto3" json:"userActivity,omitempty"`
	// 태그 리스트
	Tags []string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	// 강의 Array
	Lessons []*LessonE `protobuf:"bytes,16,rep,name=lessons,proto3" json:"lessons,omitempty"`
	// 수업 등록자 No
	UserNo int64 `protobuf:"varint,17,opt,name=userNo,proto3" json:"userNo,omitempty"`
	// 순서 idx
	Idx int32 `protobuf:"varint,18,opt,name=idx,proto3" json:"idx,omitempty"`
	// 오픈 여부
	OpenType string `protobuf:"bytes,19,opt,name=openType,proto3" json:"openType,omitempty"`
	// 레벨 타입
	LevelType string `protobuf:"bytes,20,opt,name=levelType,proto3" json:"levelType,omitempty"`
	// 그룹 타입
	GroupType string `protobuf:"bytes,21,opt,name=groupType,proto3" json:"groupType,omitempty"`
	// 작성자 User No
	OwnerNo int64 `protobuf:"varint,22,opt,name=ownerNo,proto3" json:"ownerNo,omitempty"`
	// 작성자 User 이름
	OwnerName string `protobuf:"bytes,23,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	// 학습요소 JSON
	ElementJson string `protobuf:"bytes,24,opt,name=elementJson,proto3" json:"elementJson,omitempty"`
	// 학습정보
	Summary *LessonSummaryE `protobuf:"bytes,25,opt,name=summary,proto3" json:"summary,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,26,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,27,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// 삭제 날짜
	DeletedAt int64 `protobuf:"varint,28,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *LessonCurriculumE) Reset() {
	*x = LessonCurriculumE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonCurriculumE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonCurriculumE) ProtoMessage() {}

func (x *LessonCurriculumE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonCurriculumE.ProtoReflect.Descriptor instead.
func (*LessonCurriculumE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{4}
}

func (x *LessonCurriculumE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonCurriculumE) GetCurriculumNo() int64 {
	if x != nil {
		return x.CurriculumNo
	}
	return 0
}

func (x *LessonCurriculumE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonCurriculumE) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LessonCurriculumE) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

func (x *LessonCurriculumE) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *LessonCurriculumE) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *LessonCurriculumE) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *LessonCurriculumE) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *LessonCurriculumE) GetBgImg() *ImageInfoE {
	if x != nil {
		return x.BgImg
	}
	return nil
}

func (x *LessonCurriculumE) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *LessonCurriculumE) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

func (x *LessonCurriculumE) GetMainImgs() []*ImageInfoE {
	if x != nil {
		return x.MainImgs
	}
	return nil
}

func (x *LessonCurriculumE) GetUserActivity() *UserActivityE {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

func (x *LessonCurriculumE) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LessonCurriculumE) GetLessons() []*LessonE {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *LessonCurriculumE) GetUserNo() int64 {
	if x != nil {
		return x.UserNo
	}
	return 0
}

func (x *LessonCurriculumE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonCurriculumE) GetOpenType() string {
	if x != nil {
		return x.OpenType
	}
	return ""
}

func (x *LessonCurriculumE) GetLevelType() string {
	if x != nil {
		return x.LevelType
	}
	return ""
}

func (x *LessonCurriculumE) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *LessonCurriculumE) GetOwnerNo() int64 {
	if x != nil {
		return x.OwnerNo
	}
	return 0
}

func (x *LessonCurriculumE) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *LessonCurriculumE) GetElementJson() string {
	if x != nil {
		return x.ElementJson
	}
	return ""
}

func (x *LessonCurriculumE) GetSummary() *LessonSummaryE {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *LessonCurriculumE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonCurriculumE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *LessonCurriculumE) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// LessonPlanE 강의계획
type LessonPlanE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auto No
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// planNo
	PlanNo int64 `protobuf:"varint,2,opt,name=planNo,proto3" json:"planNo,omitempty"`
	// 강의 ID
	LessonNo int64 `protobuf:"varint,3,opt,name=lessonNo,proto3" json:"lessonNo,omitempty"`
	// 계획 제목
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	//소제목
	SubTitle string `protobuf:"bytes,5,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	// 순서 idx
	Idx int32 `protobuf:"varint,6,opt,name=idx,proto3" json:"idx,omitempty"`
	// 수업계획 그룹
	Contents []*LessonPlanContentE `protobuf:"bytes,7,rep,name=contents,proto3" json:"contents,omitempty"`
	// 뷰타입
	ViewType string `protobuf:"bytes,8,opt,name=viewType,proto3" json:"viewType,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LessonPlanE) Reset() {
	*x = LessonPlanE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanE) ProtoMessage() {}

func (x *LessonPlanE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanE.ProtoReflect.Descriptor instead.
func (*LessonPlanE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{5}
}

func (x *LessonPlanE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonPlanE) GetPlanNo() int64 {
	if x != nil {
		return x.PlanNo
	}
	return 0
}

func (x *LessonPlanE) GetLessonNo() int64 {
	if x != nil {
		return x.LessonNo
	}
	return 0
}

func (x *LessonPlanE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonPlanE) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *LessonPlanE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanE) GetContents() []*LessonPlanContentE {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *LessonPlanE) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

func (x *LessonPlanE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonPlanE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type LessonPlanLayoutE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No    int64       `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	Title string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Idx   int32       `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Type  string      `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Image *ImageInfoE `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *LessonPlanLayoutE) Reset() {
	*x = LessonPlanLayoutE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanLayoutE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanLayoutE) ProtoMessage() {}

func (x *LessonPlanLayoutE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanLayoutE.ProtoReflect.Descriptor instead.
func (*LessonPlanLayoutE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{6}
}

func (x *LessonPlanLayoutE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonPlanLayoutE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonPlanLayoutE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanLayoutE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanLayoutE) GetImage() *ImageInfoE {
	if x != nil {
		return x.Image
	}
	return nil
}

// LessonPlanContentE 컨텐츠
type LessonPlanContentE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 컨텐츠 ID
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// 강의 ID
	LessonNo int64 `protobuf:"varint,2,opt,name=lessonNo,proto3" json:"lessonNo,omitempty"`
	// 강의 계획 ID
	LessonPlanNo int64 `protobuf:"varint,3,opt,name=lessonPlanNo,proto3" json:"lessonPlanNo,omitempty"`
	// 계획 컨텐츠 제목
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 컨텐츠 타입
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// 뷰 타입
	ViewType string `protobuf:"bytes,6,opt,name=viewType,proto3" json:"viewType,omitempty"`
	// 템플릿 정보
	Templates []*LessonPlanContentTemplateE `protobuf:"bytes,7,rep,name=templates,proto3" json:"templates,omitempty"`
	// base 컨텐츠 정보
	Base *LessonPlanContentTemplateBaseE `protobuf:"bytes,8,opt,name=base,proto3" json:"base,omitempty"`
	// 텍스트 컨텐츠 정보
	Text *LessonPlanContentTemplateTextE `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
	// 이미지 컨텐츠 정보
	Image *LessonPlanContentTemplateImageE `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	// 비디오 컨텐츠 정보
	Video *LessonPlanContentTemplateVideoE `protobuf:"bytes,11,opt,name=video,proto3" json:"video,omitempty"`
	// 코딩 컨텐츠 정보
	Coding *LessonPlanContentTemplateCodingE `protobuf:"bytes,12,opt,name=coding,proto3" json:"coding,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,13,opt,name=idx,proto3" json:"idx,omitempty"`
	// 학습 완료 여부
	IsDone bool `protobuf:"varint,14,opt,name=isDone,proto3" json:"isDone,omitempty"`
	// 완료 날짜
	DoneDate string `protobuf:"bytes,15,opt,name=doneDate,proto3" json:"doneDate,omitempty"`
}

func (x *LessonPlanContentE) Reset() {
	*x = LessonPlanContentE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentE) ProtoMessage() {}

func (x *LessonPlanContentE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{7}
}

func (x *LessonPlanContentE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonPlanContentE) GetLessonNo() int64 {
	if x != nil {
		return x.LessonNo
	}
	return 0
}

func (x *LessonPlanContentE) GetLessonPlanNo() int64 {
	if x != nil {
		return x.LessonPlanNo
	}
	return 0
}

func (x *LessonPlanContentE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonPlanContentE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanContentE) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

func (x *LessonPlanContentE) GetTemplates() []*LessonPlanContentTemplateE {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *LessonPlanContentE) GetBase() *LessonPlanContentTemplateBaseE {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LessonPlanContentE) GetText() *LessonPlanContentTemplateTextE {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *LessonPlanContentE) GetImage() *LessonPlanContentTemplateImageE {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *LessonPlanContentE) GetVideo() *LessonPlanContentTemplateVideoE {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *LessonPlanContentE) GetCoding() *LessonPlanContentTemplateCodingE {
	if x != nil {
		return x.Coding
	}
	return nil
}

func (x *LessonPlanContentE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanContentE) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *LessonPlanContentE) GetDoneDate() string {
	if x != nil {
		return x.DoneDate
	}
	return ""
}

// LessonPlanContentSubscribeE 컨텐츠 진행정보 subscribe
type LessonPlanContentSubscribeE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 컨텐츠 ID
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// 강의 ID
	LessonNo int64 `protobuf:"varint,2,opt,name=lessonNo,proto3" json:"lessonNo,omitempty"`
	// 강의 계획 ID
	LessonPlanNo int64 `protobuf:"varint,3,opt,name=lessonPlanNo,proto3" json:"lessonPlanNo,omitempty"`
	// 학습 완료 여부
	IsDone bool `protobuf:"varint,4,opt,name=isDone,proto3" json:"isDone,omitempty"`
	// 완료 날짜
	DoneDate string `protobuf:"bytes,5,opt,name=doneDate,proto3" json:"doneDate,omitempty"`
	// 진행 정보
	Progress *LessonProgressE `protobuf:"bytes,6,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *LessonPlanContentSubscribeE) Reset() {
	*x = LessonPlanContentSubscribeE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentSubscribeE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentSubscribeE) ProtoMessage() {}

func (x *LessonPlanContentSubscribeE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentSubscribeE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentSubscribeE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{8}
}

func (x *LessonPlanContentSubscribeE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonPlanContentSubscribeE) GetLessonNo() int64 {
	if x != nil {
		return x.LessonNo
	}
	return 0
}

func (x *LessonPlanContentSubscribeE) GetLessonPlanNo() int64 {
	if x != nil {
		return x.LessonPlanNo
	}
	return 0
}

func (x *LessonPlanContentSubscribeE) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *LessonPlanContentSubscribeE) GetDoneDate() string {
	if x != nil {
		return x.DoneDate
	}
	return ""
}

func (x *LessonPlanContentSubscribeE) GetProgress() *LessonProgressE {
	if x != nil {
		return x.Progress
	}
	return nil
}

type LessonPlanContentTemplateE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base 컨텐츠 정보
	Base *LessonPlanContentTemplateBaseE `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 텍스트 컨텐츠 정보
	Text *LessonPlanContentTemplateTextE `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 이미지 컨텐츠 정보
	Image *LessonPlanContentTemplateImageE `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 비디오 컨텐츠 정보
	Video *LessonPlanContentTemplateVideoE `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	// 코딩 컨텐츠 정보
	Coding *LessonPlanContentTemplateCodingE `protobuf:"bytes,5,opt,name=coding,proto3" json:"coding,omitempty"`
}

func (x *LessonPlanContentTemplateE) Reset() {
	*x = LessonPlanContentTemplateE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentTemplateE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentTemplateE) ProtoMessage() {}

func (x *LessonPlanContentTemplateE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentTemplateE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentTemplateE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{9}
}

func (x *LessonPlanContentTemplateE) GetBase() *LessonPlanContentTemplateBaseE {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LessonPlanContentTemplateE) GetText() *LessonPlanContentTemplateTextE {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *LessonPlanContentTemplateE) GetImage() *LessonPlanContentTemplateImageE {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *LessonPlanContentTemplateE) GetVideo() *LessonPlanContentTemplateVideoE {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *LessonPlanContentTemplateE) GetCoding() *LessonPlanContentTemplateCodingE {
	if x != nil {
		return x.Coding
	}
	return nil
}

// 컨텐츠 BASE타입
type LessonPlanContentTemplateBaseE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 데이타  타입
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// 이미지 정보
	Img *ImageInfoE `protobuf:"bytes,3,opt,name=img,proto3" json:"img,omitempty"`
	// 내용
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,5,opt,name=idx,proto3" json:"idx,omitempty"`
	// 좌표정보
	Coordinate *CoordinateE `protobuf:"bytes,6,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
}

func (x *LessonPlanContentTemplateBaseE) Reset() {
	*x = LessonPlanContentTemplateBaseE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentTemplateBaseE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentTemplateBaseE) ProtoMessage() {}

func (x *LessonPlanContentTemplateBaseE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentTemplateBaseE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentTemplateBaseE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{10}
}

func (x *LessonPlanContentTemplateBaseE) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LessonPlanContentTemplateBaseE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanContentTemplateBaseE) GetImg() *ImageInfoE {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *LessonPlanContentTemplateBaseE) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LessonPlanContentTemplateBaseE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanContentTemplateBaseE) GetCoordinate() *CoordinateE {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

// 컨텐츠 텍스트타입
type LessonPlanContentTemplateTextE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 데이타  타입
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// 내용
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,4,opt,name=idx,proto3" json:"idx,omitempty"`
	// 좌표정보
	Coordinate *CoordinateE `protobuf:"bytes,5,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
}

func (x *LessonPlanContentTemplateTextE) Reset() {
	*x = LessonPlanContentTemplateTextE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentTemplateTextE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentTemplateTextE) ProtoMessage() {}

func (x *LessonPlanContentTemplateTextE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentTemplateTextE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentTemplateTextE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{11}
}

func (x *LessonPlanContentTemplateTextE) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LessonPlanContentTemplateTextE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanContentTemplateTextE) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LessonPlanContentTemplateTextE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanContentTemplateTextE) GetCoordinate() *CoordinateE {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

// 컨텐츠 이미지타입
type LessonPlanContentTemplateImageE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 데이타  타입
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// 이미지
	Img *ImageInfoE `protobuf:"bytes,3,opt,name=img,proto3" json:"img,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,4,opt,name=idx,proto3" json:"idx,omitempty"`
	// 좌표정보
	Coordinate *CoordinateE `protobuf:"bytes,5,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	// 전환 이미지 여부
	IsReverse bool `protobuf:"varint,6,opt,name=isReverse,proto3" json:"isReverse,omitempty"`
}

func (x *LessonPlanContentTemplateImageE) Reset() {
	*x = LessonPlanContentTemplateImageE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentTemplateImageE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentTemplateImageE) ProtoMessage() {}

func (x *LessonPlanContentTemplateImageE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentTemplateImageE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentTemplateImageE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{12}
}

func (x *LessonPlanContentTemplateImageE) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LessonPlanContentTemplateImageE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanContentTemplateImageE) GetImg() *ImageInfoE {
	if x != nil {
		return x.Img
	}
	return nil
}

func (x *LessonPlanContentTemplateImageE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanContentTemplateImageE) GetCoordinate() *CoordinateE {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *LessonPlanContentTemplateImageE) GetIsReverse() bool {
	if x != nil {
		return x.IsReverse
	}
	return false
}

// 컨텐츠 비디오타입
type LessonPlanContentTemplateVideoE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 비디오 No
	VideoNo int64 `protobuf:"varint,2,opt,name=videoNo,proto3" json:"videoNo,omitempty"`
	// 비디오
	VideoUrl string `protobuf:"bytes,3,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`
	// 비디오 타입
	VideoType string `protobuf:"bytes,4,opt,name=videoType,proto3" json:"videoType,omitempty"`
	// 썸네일 이미지
	ThumbImg *ImageInfoE `protobuf:"bytes,5,opt,name=thumbImg,proto3" json:"thumbImg,omitempty"`
	// 데이타  타입
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,7,opt,name=idx,proto3" json:"idx,omitempty"`
	// 좌표정보
	Coordinate *CoordinateE `protobuf:"bytes,8,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
}

func (x *LessonPlanContentTemplateVideoE) Reset() {
	*x = LessonPlanContentTemplateVideoE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentTemplateVideoE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentTemplateVideoE) ProtoMessage() {}

func (x *LessonPlanContentTemplateVideoE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentTemplateVideoE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentTemplateVideoE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{13}
}

func (x *LessonPlanContentTemplateVideoE) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LessonPlanContentTemplateVideoE) GetVideoNo() int64 {
	if x != nil {
		return x.VideoNo
	}
	return 0
}

func (x *LessonPlanContentTemplateVideoE) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *LessonPlanContentTemplateVideoE) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *LessonPlanContentTemplateVideoE) GetThumbImg() *ImageInfoE {
	if x != nil {
		return x.ThumbImg
	}
	return nil
}

func (x *LessonPlanContentTemplateVideoE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanContentTemplateVideoE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanContentTemplateVideoE) GetCoordinate() *CoordinateE {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

// 컨텐츠 코딩타입
type LessonPlanContentTemplateCodingE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 데이타  타입
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// 코딩 타입
	CodingType string `protobuf:"bytes,3,opt,name=codingType,proto3" json:"codingType,omitempty"`
	// 정답 코드
	AnswerCode string `protobuf:"bytes,4,opt,name=answerCode,proto3" json:"answerCode,omitempty"`
	// 정답 이미지
	AnswerImgs []*ImageInfoE `protobuf:"bytes,5,rep,name=answerImgs,proto3" json:"answerImgs,omitempty"`
	// 사전 코드
	InitCode string `protobuf:"bytes,6,opt,name=initCode,proto3" json:"initCode,omitempty"`
	// 코딩 문제들
	Questions []string `protobuf:"bytes,7,rep,name=questions,proto3" json:"questions,omitempty"`
	// 실습 목표
	Purpose string `protobuf:"bytes,8,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,9,opt,name=idx,proto3" json:"idx,omitempty"`
	// 코딩 생성자 타입
	CreationType string `protobuf:"bytes,10,opt,name=creationType,proto3" json:"creationType,omitempty"`
	// 하드웨어 타입
	HardwareTypes []*LessonHardwareE `protobuf:"bytes,11,rep,name=hardwareTypes,proto3" json:"hardwareTypes,omitempty"`
	// 좌표정보
	Coordinate *CoordinateE `protobuf:"bytes,12,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
}

func (x *LessonPlanContentTemplateCodingE) Reset() {
	*x = LessonPlanContentTemplateCodingE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPlanContentTemplateCodingE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPlanContentTemplateCodingE) ProtoMessage() {}

func (x *LessonPlanContentTemplateCodingE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPlanContentTemplateCodingE.ProtoReflect.Descriptor instead.
func (*LessonPlanContentTemplateCodingE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{14}
}

func (x *LessonPlanContentTemplateCodingE) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetCodingType() string {
	if x != nil {
		return x.CodingType
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetAnswerImgs() []*ImageInfoE {
	if x != nil {
		return x.AnswerImgs
	}
	return nil
}

func (x *LessonPlanContentTemplateCodingE) GetInitCode() string {
	if x != nil {
		return x.InitCode
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *LessonPlanContentTemplateCodingE) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonPlanContentTemplateCodingE) GetCreationType() string {
	if x != nil {
		return x.CreationType
	}
	return ""
}

func (x *LessonPlanContentTemplateCodingE) GetHardwareTypes() []*LessonHardwareE {
	if x != nil {
		return x.HardwareTypes
	}
	return nil
}

func (x *LessonPlanContentTemplateCodingE) GetCoordinate() *CoordinateE {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

type LessonImageE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// serviceNo
	ServiceNo int64 `protobuf:"varint,2,opt,name=serviceNo,proto3" json:"serviceNo,omitempty"`
	// 서비스 타입
	ServiceType string `protobuf:"bytes,3,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	// 영어타입
	ImageKey string `protobuf:"bytes,4,opt,name=imageKey,proto3" json:"imageKey,omitempty"`
	// 비디오 정보
	Image *ImageInfoE `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,6,opt,name=idx,proto3" json:"idx,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LessonImageE) Reset() {
	*x = LessonImageE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonImageE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonImageE) ProtoMessage() {}

func (x *LessonImageE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonImageE.ProtoReflect.Descriptor instead.
func (*LessonImageE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{15}
}

func (x *LessonImageE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonImageE) GetServiceNo() int64 {
	if x != nil {
		return x.ServiceNo
	}
	return 0
}

func (x *LessonImageE) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *LessonImageE) GetImageKey() string {
	if x != nil {
		return x.ImageKey
	}
	return ""
}

func (x *LessonImageE) GetImage() *ImageInfoE {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *LessonImageE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonImageE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonImageE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type LessonVideoE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// serviceNo
	ServiceNo int64 `protobuf:"varint,2,opt,name=serviceNo,proto3" json:"serviceNo,omitempty"`
	// 서비스 타입
	ServiceType string `protobuf:"bytes,3,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	// 영어타입
	Lang string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	// 비디오 정보
	Video *VideoInfoE `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
	// 순서
	Idx int32 `protobuf:"varint,6,opt,name=idx,proto3" json:"idx,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LessonVideoE) Reset() {
	*x = LessonVideoE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonVideoE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonVideoE) ProtoMessage() {}

func (x *LessonVideoE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonVideoE.ProtoReflect.Descriptor instead.
func (*LessonVideoE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{16}
}

func (x *LessonVideoE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonVideoE) GetServiceNo() int64 {
	if x != nil {
		return x.ServiceNo
	}
	return 0
}

func (x *LessonVideoE) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *LessonVideoE) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LessonVideoE) GetVideo() *VideoInfoE {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *LessonVideoE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonVideoE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonVideoE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type LessonSummaryE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 강의 소개
	Intro string `protobuf:"bytes,1,opt,name=intro,proto3" json:"intro,omitempty"`
	// 목표 정리 여러줄
	Goals []string `protobuf:"bytes,2,rep,name=goals,proto3" json:"goals,omitempty"`
	// 결과물 셜명 여러줄
	Outputs []string `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// 멀티 요소 String
	Elements []string `protobuf:"bytes,4,rep,name=elements,proto3" json:"elements,omitempty"`
	// 하드웨어 타입
	HardwareTypes []*LessonHardwareE `protobuf:"bytes,5,rep,name=hardwareTypes,proto3" json:"hardwareTypes,omitempty"`
	// 코딩툴 String
	CodingTypes []string `protobuf:"bytes,6,rep,name=codingTypes,proto3" json:"codingTypes,omitempty"`
}

func (x *LessonSummaryE) Reset() {
	*x = LessonSummaryE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonSummaryE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonSummaryE) ProtoMessage() {}

func (x *LessonSummaryE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonSummaryE.ProtoReflect.Descriptor instead.
func (*LessonSummaryE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{17}
}

func (x *LessonSummaryE) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *LessonSummaryE) GetGoals() []string {
	if x != nil {
		return x.Goals
	}
	return nil
}

func (x *LessonSummaryE) GetOutputs() []string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *LessonSummaryE) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *LessonSummaryE) GetHardwareTypes() []*LessonHardwareE {
	if x != nil {
		return x.HardwareTypes
	}
	return nil
}

func (x *LessonSummaryE) GetCodingTypes() []string {
	if x != nil {
		return x.CodingTypes
	}
	return nil
}

type LessonHardwareE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// 하드웨어 타입
	HardwareType string `protobuf:"bytes,2,opt,name=hardwareType,proto3" json:"hardwareType,omitempty"`
	//
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//
	SubTitle string `protobuf:"bytes,4,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	// 메인 이미지
	MainImg *ImageInfoE `protobuf:"bytes,5,opt,name=mainImg,proto3" json:"mainImg,omitempty"`
	// 순서 idx
	Idx int32 `protobuf:"varint,6,opt,name=idx,proto3" json:"idx,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LessonHardwareE) Reset() {
	*x = LessonHardwareE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonHardwareE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonHardwareE) ProtoMessage() {}

func (x *LessonHardwareE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonHardwareE.ProtoReflect.Descriptor instead.
func (*LessonHardwareE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{18}
}

func (x *LessonHardwareE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *LessonHardwareE) GetHardwareType() string {
	if x != nil {
		return x.HardwareType
	}
	return ""
}

func (x *LessonHardwareE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonHardwareE) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *LessonHardwareE) GetMainImg() *ImageInfoE {
	if x != nil {
		return x.MainImg
	}
	return nil
}

func (x *LessonHardwareE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *LessonHardwareE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LessonHardwareE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 언어변환필요한 데이타 정의
type LessonLanguageE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 제목
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 라벨
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// 커리큘럼 소제목
	SubTitle string `protobuf:"bytes,3,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	// 커리큘럼 설명
	Describe string `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *LessonLanguageE) Reset() {
	*x = LessonLanguageE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_lesson_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonLanguageE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonLanguageE) ProtoMessage() {}

func (x *LessonLanguageE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_lesson_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonLanguageE.ProtoReflect.Descriptor instead.
func (*LessonLanguageE) Descriptor() ([]byte, []int) {
	return file_v1_lesson_proto_rawDescGZIP(), []int{19}
}

func (x *LessonLanguageE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonLanguageE) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LessonLanguageE) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *LessonLanguageE) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

var File_v1_lesson_proto protoreflect.FileDescriptor

var file_v1_lesson_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x09, 0x0a, 0x07, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x12,
	0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a,
	0x05, 0x62, 0x67, 0x49, 0x6d, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x05, 0x62, 0x67,
	0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x2b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x08,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x45, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x45, 0x52, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x45, 0x64,
	0x69, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x45, 0x64, 0x69, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69,
	0x64, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x75, 0x62,
	0x55, 0x72, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x70, 0x75, 0x62, 0x55,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x0c,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x38, 0x0a, 0x0c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0xd2, 0x03, 0x0a, 0x0b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x45,
	0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x67,
	0x49, 0x6d, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x05, 0x62, 0x67, 0x49, 0x6d, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x43, 0x0a, 0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x45, 0x52, 0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe5, 0x06, 0x0a, 0x11, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x67, 0x49, 0x6d, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x05, 0x62, 0x67, 0x49, 0x6d, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x08, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x45,
	0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x69, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x45, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa1, 0x02,
	0x0a, 0x0b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xd2, 0x04, 0x0a, 0x12, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45,
	0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x45, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x45, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x45, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x44, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xd2,
	0x01, 0x0a, 0x1b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x12, 0x0e,
	0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xc0, 0x02, 0x0a, 0x1a, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x45, 0x12, 0x36, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x45, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x45, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x45, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x52, 0x06,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xc3, 0x01, 0x0a, 0x1e, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x03, 0x69, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x2f, 0x0a, 0x0a, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45,
	0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x22, 0xa1, 0x01, 0x0a,
	0x1e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x45, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12,
	0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x45, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x22, 0xc8, 0x01, 0x0a, 0x1f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x2f, 0x0a, 0x0a,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x45, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x1f,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x20, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x45, 0x52, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x69, 0x64, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xcf, 0x01, 0x0a, 0x0e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6f, 0x61, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x45,
	0x52, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0xef, 0x01, 0x0a, 0x0f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x07, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x6d, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x75, 0x0a, 0x0f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x4b, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x6c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02, 0x0a,
	0x4c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_lesson_proto_rawDescOnce sync.Once
	file_v1_lesson_proto_rawDescData = file_v1_lesson_proto_rawDesc
)

func file_v1_lesson_proto_rawDescGZIP() []byte {
	file_v1_lesson_proto_rawDescOnce.Do(func() {
		file_v1_lesson_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_lesson_proto_rawDescData)
	})
	return file_v1_lesson_proto_rawDescData
}

var file_v1_lesson_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_v1_lesson_proto_goTypes = []interface{}{
	(*LessonE)(nil),                          // 0: v1.LessonE
	(*LessonLevelE)(nil),                     // 1: v1.LessonLevelE
	(*LessonGroupE)(nil),                     // 2: v1.LessonGroupE
	(*LessonBookE)(nil),                      // 3: v1.LessonBookE
	(*LessonCurriculumE)(nil),                // 4: v1.LessonCurriculumE
	(*LessonPlanE)(nil),                      // 5: v1.LessonPlanE
	(*LessonPlanLayoutE)(nil),                // 6: v1.LessonPlanLayoutE
	(*LessonPlanContentE)(nil),               // 7: v1.LessonPlanContentE
	(*LessonPlanContentSubscribeE)(nil),      // 8: v1.LessonPlanContentSubscribeE
	(*LessonPlanContentTemplateE)(nil),       // 9: v1.LessonPlanContentTemplateE
	(*LessonPlanContentTemplateBaseE)(nil),   // 10: v1.LessonPlanContentTemplateBaseE
	(*LessonPlanContentTemplateTextE)(nil),   // 11: v1.LessonPlanContentTemplateTextE
	(*LessonPlanContentTemplateImageE)(nil),  // 12: v1.LessonPlanContentTemplateImageE
	(*LessonPlanContentTemplateVideoE)(nil),  // 13: v1.LessonPlanContentTemplateVideoE
	(*LessonPlanContentTemplateCodingE)(nil), // 14: v1.LessonPlanContentTemplateCodingE
	(*LessonImageE)(nil),                     // 15: v1.LessonImageE
	(*LessonVideoE)(nil),                     // 16: v1.LessonVideoE
	(*LessonSummaryE)(nil),                   // 17: v1.LessonSummaryE
	(*LessonHardwareE)(nil),                  // 18: v1.LessonHardwareE
	(*LessonLanguageE)(nil),                  // 19: v1.LessonLanguageE
	(*ImageInfoE)(nil),                       // 20: v1.ImageInfoE
	(VideoType)(0),                           // 21: v1.VideoType
	(*UserActivityE)(nil),                    // 22: v1.UserActivityE
	(*FileInfoE)(nil),                        // 23: v1.FileInfoE
	(*LessonProgressE)(nil),                  // 24: v1.LessonProgressE
	(*CoordinateE)(nil),                      // 25: v1.CoordinateE
	(*VideoInfoE)(nil),                       // 26: v1.VideoInfoE
}
var file_v1_lesson_proto_depIdxs = []int32{
	20, // 0: v1.LessonE.bgImg:type_name -> v1.ImageInfoE
	21, // 1: v1.LessonE.videoType:type_name -> v1.VideoType
	20, // 2: v1.LessonE.mainImgs:type_name -> v1.ImageInfoE
	22, // 3: v1.LessonE.userActivity:type_name -> v1.UserActivityE
	17, // 4: v1.LessonE.summary:type_name -> v1.LessonSummaryE
	5,  // 5: v1.LessonE.lessonPlans:type_name -> v1.LessonPlanE
	23, // 6: v1.LessonE.files:type_name -> v1.FileInfoE
	24, // 7: v1.LessonE.progress:type_name -> v1.LessonProgressE
	20, // 8: v1.LessonBookE.bgImg:type_name -> v1.ImageInfoE
	20, // 9: v1.LessonBookE.mainImgs:type_name -> v1.ImageInfoE
	4,  // 10: v1.LessonBookE.lessonCurriculums:type_name -> v1.LessonCurriculumE
	20, // 11: v1.LessonCurriculumE.bgImg:type_name -> v1.ImageInfoE
	20, // 12: v1.LessonCurriculumE.mainImgs:type_name -> v1.ImageInfoE
	22, // 13: v1.LessonCurriculumE.userActivity:type_name -> v1.UserActivityE
	0,  // 14: v1.LessonCurriculumE.lessons:type_name -> v1.LessonE
	17, // 15: v1.LessonCurriculumE.summary:type_name -> v1.LessonSummaryE
	7,  // 16: v1.LessonPlanE.contents:type_name -> v1.LessonPlanContentE
	20, // 17: v1.LessonPlanLayoutE.image:type_name -> v1.ImageInfoE
	9,  // 18: v1.LessonPlanContentE.templates:type_name -> v1.LessonPlanContentTemplateE
	10, // 19: v1.LessonPlanContentE.base:type_name -> v1.LessonPlanContentTemplateBaseE
	11, // 20: v1.LessonPlanContentE.text:type_name -> v1.LessonPlanContentTemplateTextE
	12, // 21: v1.LessonPlanContentE.image:type_name -> v1.LessonPlanContentTemplateImageE
	13, // 22: v1.LessonPlanContentE.video:type_name -> v1.LessonPlanContentTemplateVideoE
	14, // 23: v1.LessonPlanContentE.coding:type_name -> v1.LessonPlanContentTemplateCodingE
	24, // 24: v1.LessonPlanContentSubscribeE.progress:type_name -> v1.LessonProgressE
	10, // 25: v1.LessonPlanContentTemplateE.base:type_name -> v1.LessonPlanContentTemplateBaseE
	11, // 26: v1.LessonPlanContentTemplateE.text:type_name -> v1.LessonPlanContentTemplateTextE
	12, // 27: v1.LessonPlanContentTemplateE.image:type_name -> v1.LessonPlanContentTemplateImageE
	13, // 28: v1.LessonPlanContentTemplateE.video:type_name -> v1.LessonPlanContentTemplateVideoE
	14, // 29: v1.LessonPlanContentTemplateE.coding:type_name -> v1.LessonPlanContentTemplateCodingE
	20, // 30: v1.LessonPlanContentTemplateBaseE.img:type_name -> v1.ImageInfoE
	25, // 31: v1.LessonPlanContentTemplateBaseE.coordinate:type_name -> v1.CoordinateE
	25, // 32: v1.LessonPlanContentTemplateTextE.coordinate:type_name -> v1.CoordinateE
	20, // 33: v1.LessonPlanContentTemplateImageE.img:type_name -> v1.ImageInfoE
	25, // 34: v1.LessonPlanContentTemplateImageE.coordinate:type_name -> v1.CoordinateE
	20, // 35: v1.LessonPlanContentTemplateVideoE.thumbImg:type_name -> v1.ImageInfoE
	25, // 36: v1.LessonPlanContentTemplateVideoE.coordinate:type_name -> v1.CoordinateE
	20, // 37: v1.LessonPlanContentTemplateCodingE.answerImgs:type_name -> v1.ImageInfoE
	18, // 38: v1.LessonPlanContentTemplateCodingE.hardwareTypes:type_name -> v1.LessonHardwareE
	25, // 39: v1.LessonPlanContentTemplateCodingE.coordinate:type_name -> v1.CoordinateE
	20, // 40: v1.LessonImageE.image:type_name -> v1.ImageInfoE
	26, // 41: v1.LessonVideoE.video:type_name -> v1.VideoInfoE
	18, // 42: v1.LessonSummaryE.hardwareTypes:type_name -> v1.LessonHardwareE
	20, // 43: v1.LessonHardwareE.mainImg:type_name -> v1.ImageInfoE
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_v1_lesson_proto_init() }
func file_v1_lesson_proto_init() {
	if File_v1_lesson_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_enum_proto_init()
	file_v1_video_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_lesson_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonLevelE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonGroupE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonBookE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonCurriculumE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanLayoutE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentSubscribeE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentTemplateE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentTemplateBaseE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentTemplateTextE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentTemplateImageE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentTemplateVideoE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPlanContentTemplateCodingE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonImageE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonVideoE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonSummaryE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonHardwareE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_lesson_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonLanguageE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_lesson_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_lesson_proto_goTypes,
		DependencyIndexes: file_v1_lesson_proto_depIdxs,
		MessageInfos:      file_v1_lesson_proto_msgTypes,
	}.Build()
	File_v1_lesson_proto = out.File
	file_v1_lesson_proto_rawDesc = nil
	file_v1_lesson_proto_goTypes = nil
	file_v1_lesson_proto_depIdxs = nil
}
