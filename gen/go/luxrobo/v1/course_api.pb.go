// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: v1/course_api.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CourseHealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CourseHealthRequest) Reset() {
	*x = CourseHealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_course_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseHealthRequest) ProtoMessage() {}

func (x *CourseHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_course_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseHealthRequest.ProtoReflect.Descriptor instead.
func (*CourseHealthRequest) Descriptor() ([]byte, []int) {
	return file_v1_course_api_proto_rawDescGZIP(), []int{0}
}

type CourseHealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    *Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CourseHealthResponse) Reset() {
	*x = CourseHealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_course_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseHealthResponse) ProtoMessage() {}

func (x *CourseHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_course_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseHealthResponse.ProtoReflect.Descriptor instead.
func (*CourseHealthResponse) Descriptor() ([]byte, []int) {
	return file_v1_course_api_proto_rawDescGZIP(), []int{1}
}

func (x *CourseHealthResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *CourseHealthResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CourseProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIds []string `protobuf:"bytes,1,rep,name=productIds,proto3" json:"productIds,omitempty"`
}

func (x *CourseProductListRequest) Reset() {
	*x = CourseProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_course_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseProductListRequest) ProtoMessage() {}

func (x *CourseProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_course_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseProductListRequest.ProtoReflect.Descriptor instead.
func (*CourseProductListRequest) Descriptor() ([]byte, []int) {
	return file_v1_course_api_proto_rawDescGZIP(), []int{2}
}

func (x *CourseProductListRequest) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type CourseProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err      *Error            `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Products []*CourseProductE `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *CourseProductListResponse) Reset() {
	*x = CourseProductListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_course_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseProductListResponse) ProtoMessage() {}

func (x *CourseProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_course_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseProductListResponse.ProtoReflect.Descriptor instead.
func (*CourseProductListResponse) Descriptor() ([]byte, []int) {
	return file_v1_course_api_proto_rawDescGZIP(), []int{3}
}

func (x *CourseProductListResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *CourseProductListResponse) GetProducts() []*CourseProductE {
	if x != nil {
		return x.Products
	}
	return nil
}

var File_v1_course_api_proto protoreflect.FileDescriptor

var file_v1_course_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4b, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a,
	0x18, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x68, 0x0a, 0x19, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x32, 0xa0, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x41, 0x50,
	0x49, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4e, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x75,
	0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x6c, 0x75, 0x78, 0x72,
	0x6f, 0x62, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02, 0x0a, 0x4c,
	0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x75, 0x78, 0x72,
	0x6f, 0x62, 0x6f, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_course_api_proto_rawDescOnce sync.Once
	file_v1_course_api_proto_rawDescData = file_v1_course_api_proto_rawDesc
)

func file_v1_course_api_proto_rawDescGZIP() []byte {
	file_v1_course_api_proto_rawDescOnce.Do(func() {
		file_v1_course_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_course_api_proto_rawDescData)
	})
	return file_v1_course_api_proto_rawDescData
}

var file_v1_course_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_course_api_proto_goTypes = []interface{}{
	(*CourseHealthRequest)(nil),       // 0: v1.CourseHealthRequest
	(*CourseHealthResponse)(nil),      // 1: v1.CourseHealthResponse
	(*CourseProductListRequest)(nil),  // 2: v1.CourseProductListRequest
	(*CourseProductListResponse)(nil), // 3: v1.CourseProductListResponse
	(*Error)(nil),                     // 4: v1.Error
	(*CourseProductE)(nil),            // 5: v1.CourseProductE
}
var file_v1_course_api_proto_depIdxs = []int32{
	4, // 0: v1.CourseHealthResponse.err:type_name -> v1.Error
	4, // 1: v1.CourseProductListResponse.err:type_name -> v1.Error
	5, // 2: v1.CourseProductListResponse.products:type_name -> v1.CourseProductE
	0, // 3: v1.CourseAPI.CourseHealth:input_type -> v1.CourseHealthRequest
	2, // 4: v1.CourseAPI.CourseProductList:input_type -> v1.CourseProductListRequest
	1, // 5: v1.CourseAPI.CourseHealth:output_type -> v1.CourseHealthResponse
	3, // 6: v1.CourseAPI.CourseProductList:output_type -> v1.CourseProductListResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_course_api_proto_init() }
func file_v1_course_api_proto_init() {
	if File_v1_course_api_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_course_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_course_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseHealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_course_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseHealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_course_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_course_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseProductListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_course_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_course_api_proto_goTypes,
		DependencyIndexes: file_v1_course_api_proto_depIdxs,
		MessageInfos:      file_v1_course_api_proto_msgTypes,
	}.Build()
	File_v1_course_api_proto = out.File
	file_v1_course_api_proto_rawDesc = nil
	file_v1_course_api_proto_goTypes = nil
	file_v1_course_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CourseAPIClient is the client API for CourseAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CourseAPIClient interface {
	CourseHealth(ctx context.Context, in *CourseHealthRequest, opts ...grpc.CallOption) (*CourseHealthResponse, error)
	CourseProductList(ctx context.Context, in *CourseProductListRequest, opts ...grpc.CallOption) (*CourseProductListResponse, error)
}

type courseAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewCourseAPIClient(cc grpc.ClientConnInterface) CourseAPIClient {
	return &courseAPIClient{cc}
}

func (c *courseAPIClient) CourseHealth(ctx context.Context, in *CourseHealthRequest, opts ...grpc.CallOption) (*CourseHealthResponse, error) {
	out := new(CourseHealthResponse)
	err := c.cc.Invoke(ctx, "/v1.CourseAPI/CourseHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courseAPIClient) CourseProductList(ctx context.Context, in *CourseProductListRequest, opts ...grpc.CallOption) (*CourseProductListResponse, error) {
	out := new(CourseProductListResponse)
	err := c.cc.Invoke(ctx, "/v1.CourseAPI/CourseProductList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CourseAPIServer is the server API for CourseAPI service.
type CourseAPIServer interface {
	CourseHealth(context.Context, *CourseHealthRequest) (*CourseHealthResponse, error)
	CourseProductList(context.Context, *CourseProductListRequest) (*CourseProductListResponse, error)
}

// UnimplementedCourseAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCourseAPIServer struct {
}

func (*UnimplementedCourseAPIServer) CourseHealth(context.Context, *CourseHealthRequest) (*CourseHealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourseHealth not implemented")
}
func (*UnimplementedCourseAPIServer) CourseProductList(context.Context, *CourseProductListRequest) (*CourseProductListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CourseProductList not implemented")
}

func RegisterCourseAPIServer(s *grpc.Server, srv CourseAPIServer) {
	s.RegisterService(&_CourseAPI_serviceDesc, srv)
}

func _CourseAPI_CourseHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourseHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseAPIServer).CourseHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CourseAPI/CourseHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseAPIServer).CourseHealth(ctx, req.(*CourseHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourseAPI_CourseProductList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourseProductListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourseAPIServer).CourseProductList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CourseAPI/CourseProductList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourseAPIServer).CourseProductList(ctx, req.(*CourseProductListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CourseAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.CourseAPI",
	HandlerType: (*CourseAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CourseHealth",
			Handler:    _CourseAPI_CourseHealth_Handler,
		},
		{
			MethodName: "CourseProductList",
			Handler:    _CourseAPI_CourseProductList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/course_api.proto",
}
