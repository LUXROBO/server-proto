// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: v1/runnercli_api.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RunnerCLIContainerListRequest 컨테이너 query
type RunnerCLIContainerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *RunnerCLIContainerListRequest) Reset() {
	*x = RunnerCLIContainerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerListRequest) ProtoMessage() {}

func (x *RunnerCLIContainerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerListRequest.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerListRequest) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{0}
}

func (x *RunnerCLIContainerListRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// RunnerCLIContainerListResponse 컨테이너 response
type RunnerCLIContainerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *Error                 `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Containers []*RunnercliContainerE `protobuf:"bytes,2,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *RunnerCLIContainerListResponse) Reset() {
	*x = RunnerCLIContainerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerListResponse) ProtoMessage() {}

func (x *RunnerCLIContainerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerListResponse.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerListResponse) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{1}
}

func (x *RunnerCLIContainerListResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *RunnerCLIContainerListResponse) GetContainers() []*RunnercliContainerE {
	if x != nil {
		return x.Containers
	}
	return nil
}

// RunnerCLIContainerCreateRequest 컨테이너 생성 요청
type RunnerCLIContainerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImageName string `protobuf:"bytes,2,opt,name=imageName,proto3" json:"imageName,omitempty"`
}

func (x *RunnerCLIContainerCreateRequest) Reset() {
	*x = RunnerCLIContainerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerCreateRequest) ProtoMessage() {}

func (x *RunnerCLIContainerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerCreateRequest.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerCreateRequest) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{2}
}

func (x *RunnerCLIContainerCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerCLIContainerCreateRequest) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

// RunnerCLIContainerCreateResponse 컨테이너 생성 완료 응답값
type RunnerCLIContainerCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       *Error               `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Container *RunnercliContainerE `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
}

func (x *RunnerCLIContainerCreateResponse) Reset() {
	*x = RunnerCLIContainerCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerCreateResponse) ProtoMessage() {}

func (x *RunnerCLIContainerCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerCreateResponse.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerCreateResponse) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{3}
}

func (x *RunnerCLIContainerCreateResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *RunnerCLIContainerCreateResponse) GetContainer() *RunnercliContainerE {
	if x != nil {
		return x.Container
	}
	return nil
}

// RunnerCLIContainerStartRequest 컨테이너 시작 요청
type RunnerCLIContainerStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace           string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AccessLinkWorkspace string `protobuf:"bytes,3,opt,name=accessLinkWorkspace,proto3" json:"accessLinkWorkspace,omitempty"`
}

func (x *RunnerCLIContainerStartRequest) Reset() {
	*x = RunnerCLIContainerStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerStartRequest) ProtoMessage() {}

func (x *RunnerCLIContainerStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerStartRequest.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerStartRequest) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{4}
}

func (x *RunnerCLIContainerStartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RunnerCLIContainerStartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerCLIContainerStartRequest) GetAccessLinkWorkspace() string {
	if x != nil {
		return x.AccessLinkWorkspace
	}
	return ""
}

// RunnerCLIContainerStartResponse 컨테이너 시작 완료 응답값
type RunnerCLIContainerStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       *Error               `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Container *RunnercliContainerE `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
}

func (x *RunnerCLIContainerStartResponse) Reset() {
	*x = RunnerCLIContainerStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerStartResponse) ProtoMessage() {}

func (x *RunnerCLIContainerStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerStartResponse.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerStartResponse) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{5}
}

func (x *RunnerCLIContainerStartResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *RunnerCLIContainerStartResponse) GetContainer() *RunnercliContainerE {
	if x != nil {
		return x.Container
	}
	return nil
}

// RunnerCLIContainerDeleteRequest 컨테이너 삭제 요청
type RunnerCLIContainerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RunnerCLIContainerDeleteRequest) Reset() {
	*x = RunnerCLIContainerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerDeleteRequest) ProtoMessage() {}

func (x *RunnerCLIContainerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerDeleteRequest.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{6}
}

func (x *RunnerCLIContainerDeleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RunnerCLIContainerDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// RunnerCLIContainerDeleteResponse 컨테이너 삭제 완료 응답값
type RunnerCLIContainerDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *RunnerCLIContainerDeleteResponse) Reset() {
	*x = RunnerCLIContainerDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLIContainerDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLIContainerDeleteResponse) ProtoMessage() {}

func (x *RunnerCLIContainerDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLIContainerDeleteResponse.ProtoReflect.Descriptor instead.
func (*RunnerCLIContainerDeleteResponse) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{7}
}

func (x *RunnerCLIContainerDeleteResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

// RunnerCLITerminalSessionIDRequest 터미널 접근 sesison id 요청
type RunnerCLITerminalSessionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string `protobuf:"bytes,2,opt,name=podName,proto3" json:"podName,omitempty"`
	ContainerName string `protobuf:"bytes,3,opt,name=containerName,proto3" json:"containerName,omitempty"`
}

func (x *RunnerCLITerminalSessionIDRequest) Reset() {
	*x = RunnerCLITerminalSessionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLITerminalSessionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLITerminalSessionIDRequest) ProtoMessage() {}

func (x *RunnerCLITerminalSessionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLITerminalSessionIDRequest.ProtoReflect.Descriptor instead.
func (*RunnerCLITerminalSessionIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{8}
}

func (x *RunnerCLITerminalSessionIDRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RunnerCLITerminalSessionIDRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *RunnerCLITerminalSessionIDRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

// RunnerCLITerminalSessionIDResponse ....
type RunnerCLITerminalSessionIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       *Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Domain    string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *RunnerCLITerminalSessionIDResponse) Reset() {
	*x = RunnerCLITerminalSessionIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_runnercli_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerCLITerminalSessionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerCLITerminalSessionIDResponse) ProtoMessage() {}

func (x *RunnerCLITerminalSessionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_runnercli_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerCLITerminalSessionIDResponse.ProtoReflect.Descriptor instead.
func (*RunnerCLITerminalSessionIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_runnercli_api_proto_rawDescGZIP(), []int{9}
}

func (x *RunnerCLITerminalSessionIDResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *RunnerCLITerminalSessionIDResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RunnerCLITerminalSessionIDResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

var File_v1_runnercli_api_proto protoreflect.FileDescriptor

var file_v1_runnercli_api_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x76, 0x31, 0x2f,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x3d, 0x0a, 0x1d, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x76,
	0x0a, 0x1e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x37, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x53, 0x0a, 0x1f, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x20, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x35, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c,
	0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x75, 0x0a, 0x1f, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x22, 0x53, 0x0a, 0x1f, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x20, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x21, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x43, 0x4c, 0x49, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x22, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x32, 0x8e, 0x04, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43,
	0x4c, 0x49, 0x41, 0x50, 0x49, 0x12, 0x5f, 0x0a, 0x16, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43,
	0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c,
	0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c,
	0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x17, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x65, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c,
	0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x1a, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x43, 0x4c, 0x49, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x43, 0x4c, 0x49, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x4c, 0x49, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x63,
	0x6c, 0x69, 0x41, 0x50, 0x49, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x6c, 0x75,
	0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02,
	0x0a, 0x4c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x75,
	0x78, 0x72, 0x6f, 0x62, 0x6f, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_runnercli_api_proto_rawDescOnce sync.Once
	file_v1_runnercli_api_proto_rawDescData = file_v1_runnercli_api_proto_rawDesc
)

func file_v1_runnercli_api_proto_rawDescGZIP() []byte {
	file_v1_runnercli_api_proto_rawDescOnce.Do(func() {
		file_v1_runnercli_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_runnercli_api_proto_rawDescData)
	})
	return file_v1_runnercli_api_proto_rawDescData
}

var file_v1_runnercli_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_runnercli_api_proto_goTypes = []interface{}{
	(*RunnerCLIContainerListRequest)(nil),      // 0: v1.RunnerCLIContainerListRequest
	(*RunnerCLIContainerListResponse)(nil),     // 1: v1.RunnerCLIContainerListResponse
	(*RunnerCLIContainerCreateRequest)(nil),    // 2: v1.RunnerCLIContainerCreateRequest
	(*RunnerCLIContainerCreateResponse)(nil),   // 3: v1.RunnerCLIContainerCreateResponse
	(*RunnerCLIContainerStartRequest)(nil),     // 4: v1.RunnerCLIContainerStartRequest
	(*RunnerCLIContainerStartResponse)(nil),    // 5: v1.RunnerCLIContainerStartResponse
	(*RunnerCLIContainerDeleteRequest)(nil),    // 6: v1.RunnerCLIContainerDeleteRequest
	(*RunnerCLIContainerDeleteResponse)(nil),   // 7: v1.RunnerCLIContainerDeleteResponse
	(*RunnerCLITerminalSessionIDRequest)(nil),  // 8: v1.RunnerCLITerminalSessionIDRequest
	(*RunnerCLITerminalSessionIDResponse)(nil), // 9: v1.RunnerCLITerminalSessionIDResponse
	(*Error)(nil),               // 10: v1.Error
	(*RunnercliContainerE)(nil), // 11: v1.RunnercliContainerE
}
var file_v1_runnercli_api_proto_depIdxs = []int32{
	10, // 0: v1.RunnerCLIContainerListResponse.err:type_name -> v1.Error
	11, // 1: v1.RunnerCLIContainerListResponse.containers:type_name -> v1.RunnercliContainerE
	10, // 2: v1.RunnerCLIContainerCreateResponse.err:type_name -> v1.Error
	11, // 3: v1.RunnerCLIContainerCreateResponse.container:type_name -> v1.RunnercliContainerE
	10, // 4: v1.RunnerCLIContainerStartResponse.err:type_name -> v1.Error
	11, // 5: v1.RunnerCLIContainerStartResponse.container:type_name -> v1.RunnercliContainerE
	10, // 6: v1.RunnerCLIContainerDeleteResponse.err:type_name -> v1.Error
	10, // 7: v1.RunnerCLITerminalSessionIDResponse.err:type_name -> v1.Error
	0,  // 8: v1.RunnerCLIAPI.RunnerCLIContainerList:input_type -> v1.RunnerCLIContainerListRequest
	2,  // 9: v1.RunnerCLIAPI.RunnerCLIContainerCreate:input_type -> v1.RunnerCLIContainerCreateRequest
	4,  // 10: v1.RunnerCLIAPI.RunnerCLIContainerStart:input_type -> v1.RunnerCLIContainerStartRequest
	6,  // 11: v1.RunnerCLIAPI.RunnerCLIContainerDelete:input_type -> v1.RunnerCLIContainerDeleteRequest
	8,  // 12: v1.RunnerCLIAPI.RunnerCLITerminalSessionID:input_type -> v1.RunnerCLITerminalSessionIDRequest
	1,  // 13: v1.RunnerCLIAPI.RunnerCLIContainerList:output_type -> v1.RunnerCLIContainerListResponse
	3,  // 14: v1.RunnerCLIAPI.RunnerCLIContainerCreate:output_type -> v1.RunnerCLIContainerCreateResponse
	5,  // 15: v1.RunnerCLIAPI.RunnerCLIContainerStart:output_type -> v1.RunnerCLIContainerStartResponse
	7,  // 16: v1.RunnerCLIAPI.RunnerCLIContainerDelete:output_type -> v1.RunnerCLIContainerDeleteResponse
	9,  // 17: v1.RunnerCLIAPI.RunnerCLITerminalSessionID:output_type -> v1.RunnerCLITerminalSessionIDResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_v1_runnercli_api_proto_init() }
func file_v1_runnercli_api_proto_init() {
	if File_v1_runnercli_api_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_runnercli_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_runnercli_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLIContainerDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLITerminalSessionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_runnercli_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerCLITerminalSessionIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_runnercli_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_runnercli_api_proto_goTypes,
		DependencyIndexes: file_v1_runnercli_api_proto_depIdxs,
		MessageInfos:      file_v1_runnercli_api_proto_msgTypes,
	}.Build()
	File_v1_runnercli_api_proto = out.File
	file_v1_runnercli_api_proto_rawDesc = nil
	file_v1_runnercli_api_proto_goTypes = nil
	file_v1_runnercli_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RunnerCLIAPIClient is the client API for RunnerCLIAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RunnerCLIAPIClient interface {
	// RunnerCLIContainerList 리스트
	RunnerCLIContainerList(ctx context.Context, in *RunnerCLIContainerListRequest, opts ...grpc.CallOption) (*RunnerCLIContainerListResponse, error)
	// RunnerCLIContainerCreate 컨테이너 생성
	RunnerCLIContainerCreate(ctx context.Context, in *RunnerCLIContainerCreateRequest, opts ...grpc.CallOption) (*RunnerCLIContainerCreateResponse, error)
	// RunnerCLIContainerStart 컨테이너 시작
	RunnerCLIContainerStart(ctx context.Context, in *RunnerCLIContainerStartRequest, opts ...grpc.CallOption) (*RunnerCLIContainerStartResponse, error)
	// RunnerCLIContainerDelete 컨테이너 삭제
	RunnerCLIContainerDelete(ctx context.Context, in *RunnerCLIContainerDeleteRequest, opts ...grpc.CallOption) (*RunnerCLIContainerDeleteResponse, error)
	// RunnerCLITerminalSessionId container 터미널 접근
	RunnerCLITerminalSessionID(ctx context.Context, in *RunnerCLITerminalSessionIDRequest, opts ...grpc.CallOption) (*RunnerCLITerminalSessionIDResponse, error)
}

type runnerCLIAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewRunnerCLIAPIClient(cc grpc.ClientConnInterface) RunnerCLIAPIClient {
	return &runnerCLIAPIClient{cc}
}

func (c *runnerCLIAPIClient) RunnerCLIContainerList(ctx context.Context, in *RunnerCLIContainerListRequest, opts ...grpc.CallOption) (*RunnerCLIContainerListResponse, error) {
	out := new(RunnerCLIContainerListResponse)
	err := c.cc.Invoke(ctx, "/v1.RunnerCLIAPI/RunnerCLIContainerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runnerCLIAPIClient) RunnerCLIContainerCreate(ctx context.Context, in *RunnerCLIContainerCreateRequest, opts ...grpc.CallOption) (*RunnerCLIContainerCreateResponse, error) {
	out := new(RunnerCLIContainerCreateResponse)
	err := c.cc.Invoke(ctx, "/v1.RunnerCLIAPI/RunnerCLIContainerCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runnerCLIAPIClient) RunnerCLIContainerStart(ctx context.Context, in *RunnerCLIContainerStartRequest, opts ...grpc.CallOption) (*RunnerCLIContainerStartResponse, error) {
	out := new(RunnerCLIContainerStartResponse)
	err := c.cc.Invoke(ctx, "/v1.RunnerCLIAPI/RunnerCLIContainerStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runnerCLIAPIClient) RunnerCLIContainerDelete(ctx context.Context, in *RunnerCLIContainerDeleteRequest, opts ...grpc.CallOption) (*RunnerCLIContainerDeleteResponse, error) {
	out := new(RunnerCLIContainerDeleteResponse)
	err := c.cc.Invoke(ctx, "/v1.RunnerCLIAPI/RunnerCLIContainerDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runnerCLIAPIClient) RunnerCLITerminalSessionID(ctx context.Context, in *RunnerCLITerminalSessionIDRequest, opts ...grpc.CallOption) (*RunnerCLITerminalSessionIDResponse, error) {
	out := new(RunnerCLITerminalSessionIDResponse)
	err := c.cc.Invoke(ctx, "/v1.RunnerCLIAPI/RunnerCLITerminalSessionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RunnerCLIAPIServer is the server API for RunnerCLIAPI service.
type RunnerCLIAPIServer interface {
	// RunnerCLIContainerList 리스트
	RunnerCLIContainerList(context.Context, *RunnerCLIContainerListRequest) (*RunnerCLIContainerListResponse, error)
	// RunnerCLIContainerCreate 컨테이너 생성
	RunnerCLIContainerCreate(context.Context, *RunnerCLIContainerCreateRequest) (*RunnerCLIContainerCreateResponse, error)
	// RunnerCLIContainerStart 컨테이너 시작
	RunnerCLIContainerStart(context.Context, *RunnerCLIContainerStartRequest) (*RunnerCLIContainerStartResponse, error)
	// RunnerCLIContainerDelete 컨테이너 삭제
	RunnerCLIContainerDelete(context.Context, *RunnerCLIContainerDeleteRequest) (*RunnerCLIContainerDeleteResponse, error)
	// RunnerCLITerminalSessionId container 터미널 접근
	RunnerCLITerminalSessionID(context.Context, *RunnerCLITerminalSessionIDRequest) (*RunnerCLITerminalSessionIDResponse, error)
}

// UnimplementedRunnerCLIAPIServer can be embedded to have forward compatible implementations.
type UnimplementedRunnerCLIAPIServer struct {
}

func (*UnimplementedRunnerCLIAPIServer) RunnerCLIContainerList(context.Context, *RunnerCLIContainerListRequest) (*RunnerCLIContainerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunnerCLIContainerList not implemented")
}
func (*UnimplementedRunnerCLIAPIServer) RunnerCLIContainerCreate(context.Context, *RunnerCLIContainerCreateRequest) (*RunnerCLIContainerCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunnerCLIContainerCreate not implemented")
}
func (*UnimplementedRunnerCLIAPIServer) RunnerCLIContainerStart(context.Context, *RunnerCLIContainerStartRequest) (*RunnerCLIContainerStartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunnerCLIContainerStart not implemented")
}
func (*UnimplementedRunnerCLIAPIServer) RunnerCLIContainerDelete(context.Context, *RunnerCLIContainerDeleteRequest) (*RunnerCLIContainerDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunnerCLIContainerDelete not implemented")
}
func (*UnimplementedRunnerCLIAPIServer) RunnerCLITerminalSessionID(context.Context, *RunnerCLITerminalSessionIDRequest) (*RunnerCLITerminalSessionIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunnerCLITerminalSessionID not implemented")
}

func RegisterRunnerCLIAPIServer(s *grpc.Server, srv RunnerCLIAPIServer) {
	s.RegisterService(&_RunnerCLIAPI_serviceDesc, srv)
}

func _RunnerCLIAPI_RunnerCLIContainerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunnerCLIContainerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RunnerCLIAPI/RunnerCLIContainerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerList(ctx, req.(*RunnerCLIContainerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunnerCLIAPI_RunnerCLIContainerCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunnerCLIContainerCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RunnerCLIAPI/RunnerCLIContainerCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerCreate(ctx, req.(*RunnerCLIContainerCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunnerCLIAPI_RunnerCLIContainerStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunnerCLIContainerStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RunnerCLIAPI/RunnerCLIContainerStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerStart(ctx, req.(*RunnerCLIContainerStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunnerCLIAPI_RunnerCLIContainerDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunnerCLIContainerDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RunnerCLIAPI/RunnerCLIContainerDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerCLIAPIServer).RunnerCLIContainerDelete(ctx, req.(*RunnerCLIContainerDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunnerCLIAPI_RunnerCLITerminalSessionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunnerCLITerminalSessionIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerCLIAPIServer).RunnerCLITerminalSessionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RunnerCLIAPI/RunnerCLITerminalSessionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerCLIAPIServer).RunnerCLITerminalSessionID(ctx, req.(*RunnerCLITerminalSessionIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RunnerCLIAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.RunnerCLIAPI",
	HandlerType: (*RunnerCLIAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunnerCLIContainerList",
			Handler:    _RunnerCLIAPI_RunnerCLIContainerList_Handler,
		},
		{
			MethodName: "RunnerCLIContainerCreate",
			Handler:    _RunnerCLIAPI_RunnerCLIContainerCreate_Handler,
		},
		{
			MethodName: "RunnerCLIContainerStart",
			Handler:    _RunnerCLIAPI_RunnerCLIContainerStart_Handler,
		},
		{
			MethodName: "RunnerCLIContainerDelete",
			Handler:    _RunnerCLIAPI_RunnerCLIContainerDelete_Handler,
		},
		{
			MethodName: "RunnerCLITerminalSessionID",
			Handler:    _RunnerCLIAPI_RunnerCLITerminalSessionID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/runnercli_api.proto",
}
