// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: v1/stat.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatLessonActivityE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 강의 ID
	LessonId string `protobuf:"bytes,1,opt,name=lessonId,proto3" json:"lessonId,omitempty"`
	// 북마크수
	CBookmark int32 `protobuf:"varint,2,opt,name=cBookmark,proto3" json:"cBookmark,omitempty"`
	// 좋아요수
	CLike int32 `protobuf:"varint,3,opt,name=cLike,proto3" json:"cLike,omitempty"`
	// 진도율
	Progress int32 `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
	// 강의 컨텐츠 활동 정보
	LessonPlanContentActivities []*StatLessonPlanContentActivityE `protobuf:"bytes,5,rep,name=lessonPlanContentActivities,proto3" json:"lessonPlanContentActivities,omitempty"`
}

func (x *StatLessonActivityE) Reset() {
	*x = StatLessonActivityE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatLessonActivityE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatLessonActivityE) ProtoMessage() {}

func (x *StatLessonActivityE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatLessonActivityE.ProtoReflect.Descriptor instead.
func (*StatLessonActivityE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{0}
}

func (x *StatLessonActivityE) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *StatLessonActivityE) GetCBookmark() int32 {
	if x != nil {
		return x.CBookmark
	}
	return 0
}

func (x *StatLessonActivityE) GetCLike() int32 {
	if x != nil {
		return x.CLike
	}
	return 0
}

func (x *StatLessonActivityE) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *StatLessonActivityE) GetLessonPlanContentActivities() []*StatLessonPlanContentActivityE {
	if x != nil {
		return x.LessonPlanContentActivities
	}
	return nil
}

type StatLessonPlanContentActivityE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId            string `protobuf:"bytes,1,opt,name=lessonId,proto3" json:"lessonId,omitempty"`
	LessonPlanContentId string `protobuf:"bytes,2,opt,name=lessonPlanContentId,proto3" json:"lessonPlanContentId,omitempty"`
	Seconds             int32  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	IsDone              bool   `protobuf:"varint,4,opt,name=isDone,proto3" json:"isDone,omitempty"`
	DoneDate            string `protobuf:"bytes,5,opt,name=doneDate,proto3" json:"doneDate,omitempty"`
}

func (x *StatLessonPlanContentActivityE) Reset() {
	*x = StatLessonPlanContentActivityE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatLessonPlanContentActivityE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatLessonPlanContentActivityE) ProtoMessage() {}

func (x *StatLessonPlanContentActivityE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatLessonPlanContentActivityE.ProtoReflect.Descriptor instead.
func (*StatLessonPlanContentActivityE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{1}
}

func (x *StatLessonPlanContentActivityE) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *StatLessonPlanContentActivityE) GetLessonPlanContentId() string {
	if x != nil {
		return x.LessonPlanContentId
	}
	return ""
}

func (x *StatLessonPlanContentActivityE) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *StatLessonPlanContentActivityE) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *StatLessonPlanContentActivityE) GetDoneDate() string {
	if x != nil {
		return x.DoneDate
	}
	return ""
}

// StatUserSummary 통계 사용자 Summary
type StatUserSummaryE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No             int64                 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	UserNo         int64                 `protobuf:"varint,2,opt,name=userNo,proto3" json:"userNo,omitempty"`
	UserName       string                `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	Provider       string                `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	CRetry         int32                 `protobuf:"varint,5,opt,name=cRetry,proto3" json:"cRetry,omitempty"`
	CSuccess       int32                 `protobuf:"varint,6,opt,name=cSuccess,proto3" json:"cSuccess,omitempty"`
	STime          string                `protobuf:"bytes,7,opt,name=sTime,proto3" json:"sTime,omitempty"`
	ETime          string                `protobuf:"bytes,8,opt,name=eTime,proto3" json:"eTime,omitempty"`
	StudyTime      *StatStudyTimeE       `protobuf:"bytes,9,opt,name=studyTime,proto3" json:"studyTime,omitempty"`
	Rate           *StatRateE            `protobuf:"bytes,10,opt,name=rate,proto3" json:"rate,omitempty"`
	CapacityMean   *StatCapacityMeanE    `protobuf:"bytes,11,opt,name=capacityMean,proto3" json:"capacityMean,omitempty"`
	CapacityWeekly *StatCapacityWeeklyE  `protobuf:"bytes,12,opt,name=capacityWeekly,proto3" json:"capacityWeekly,omitempty"`
	LessonCount    *StatUserLessonCountE `protobuf:"bytes,13,opt,name=lessonCount,proto3" json:"lessonCount,omitempty"`
}

func (x *StatUserSummaryE) Reset() {
	*x = StatUserSummaryE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatUserSummaryE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatUserSummaryE) ProtoMessage() {}

func (x *StatUserSummaryE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatUserSummaryE.ProtoReflect.Descriptor instead.
func (*StatUserSummaryE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{2}
}

func (x *StatUserSummaryE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *StatUserSummaryE) GetUserNo() int64 {
	if x != nil {
		return x.UserNo
	}
	return 0
}

func (x *StatUserSummaryE) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *StatUserSummaryE) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *StatUserSummaryE) GetCRetry() int32 {
	if x != nil {
		return x.CRetry
	}
	return 0
}

func (x *StatUserSummaryE) GetCSuccess() int32 {
	if x != nil {
		return x.CSuccess
	}
	return 0
}

func (x *StatUserSummaryE) GetSTime() string {
	if x != nil {
		return x.STime
	}
	return ""
}

func (x *StatUserSummaryE) GetETime() string {
	if x != nil {
		return x.ETime
	}
	return ""
}

func (x *StatUserSummaryE) GetStudyTime() *StatStudyTimeE {
	if x != nil {
		return x.StudyTime
	}
	return nil
}

func (x *StatUserSummaryE) GetRate() *StatRateE {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *StatUserSummaryE) GetCapacityMean() *StatCapacityMeanE {
	if x != nil {
		return x.CapacityMean
	}
	return nil
}

func (x *StatUserSummaryE) GetCapacityWeekly() *StatCapacityWeeklyE {
	if x != nil {
		return x.CapacityWeekly
	}
	return nil
}

func (x *StatUserSummaryE) GetLessonCount() *StatUserLessonCountE {
	if x != nil {
		return x.LessonCount
	}
	return nil
}

type StatUserLessonCountE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 수업 수강 숫자
	LessonRegisterCount int32 `protobuf:"varint,1,opt,name=lessonRegisterCount,proto3" json:"lessonRegisterCount,omitempty"`
	// 내가 생성한  수업
	LessonOwnerCount int32 `protobuf:"varint,2,opt,name=lessonOwnerCount,proto3" json:"lessonOwnerCount,omitempty"`
	// 내가 생성한 수업의 수강생
	LessonOwnerStudentCount int32 `protobuf:"varint,3,opt,name=lessonOwnerStudentCount,proto3" json:"lessonOwnerStudentCount,omitempty"`
	// 내가 생성한 수업의 평균 수강생
	LessonOwnerStudentMeanCount int32 `protobuf:"varint,4,opt,name=lessonOwnerStudentMeanCount,proto3" json:"lessonOwnerStudentMeanCount,omitempty"`
	// 수강 완료 숫자
	LessonDoneCount int32 `protobuf:"varint,5,opt,name=lessonDoneCount,proto3" json:"lessonDoneCount,omitempty"`
}

func (x *StatUserLessonCountE) Reset() {
	*x = StatUserLessonCountE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatUserLessonCountE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatUserLessonCountE) ProtoMessage() {}

func (x *StatUserLessonCountE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatUserLessonCountE.ProtoReflect.Descriptor instead.
func (*StatUserLessonCountE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{3}
}

func (x *StatUserLessonCountE) GetLessonRegisterCount() int32 {
	if x != nil {
		return x.LessonRegisterCount
	}
	return 0
}

func (x *StatUserLessonCountE) GetLessonOwnerCount() int32 {
	if x != nil {
		return x.LessonOwnerCount
	}
	return 0
}

func (x *StatUserLessonCountE) GetLessonOwnerStudentCount() int32 {
	if x != nil {
		return x.LessonOwnerStudentCount
	}
	return 0
}

func (x *StatUserLessonCountE) GetLessonOwnerStudentMeanCount() int32 {
	if x != nil {
		return x.LessonOwnerStudentMeanCount
	}
	return 0
}

func (x *StatUserLessonCountE) GetLessonDoneCount() int32 {
	if x != nil {
		return x.LessonDoneCount
	}
	return 0
}

type StatRateE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 정답율
	Success int32 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 정확도 비율
	Accuracy int32 `protobuf:"varint,2,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	// 진도율
	Progress int32 `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *StatRateE) Reset() {
	*x = StatRateE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRateE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRateE) ProtoMessage() {}

func (x *StatRateE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRateE.ProtoReflect.Descriptor instead.
func (*StatRateE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{4}
}

func (x *StatRateE) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *StatRateE) GetAccuracy() int32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *StatRateE) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

// StatStudyE
type StatStudyTimeE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 코딩
	Coding string `protobuf:"bytes,1,opt,name=coding,proto3" json:"coding,omitempty"`
	// 게임
	Game string `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	// 영어
	English string `protobuf:"bytes,3,opt,name=english,proto3" json:"english,omitempty"`
	// 일반
	Normal string `protobuf:"bytes,4,opt,name=normal,proto3" json:"normal,omitempty"`
	// 기간
	Days string `protobuf:"bytes,5,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *StatStudyTimeE) Reset() {
	*x = StatStudyTimeE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatStudyTimeE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatStudyTimeE) ProtoMessage() {}

func (x *StatStudyTimeE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatStudyTimeE.ProtoReflect.Descriptor instead.
func (*StatStudyTimeE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{5}
}

func (x *StatStudyTimeE) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *StatStudyTimeE) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *StatStudyTimeE) GetEnglish() string {
	if x != nil {
		return x.English
	}
	return ""
}

func (x *StatStudyTimeE) GetNormal() string {
	if x != nil {
		return x.Normal
	}
	return ""
}

func (x *StatStudyTimeE) GetDays() string {
	if x != nil {
		return x.Days
	}
	return ""
}

// StatCapacityMeanE 능력치 평균
type StatCapacityMeanE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 기억력
	Memory *StatCapacityInfoE `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// 집중력
	Concentration *StatCapacityInfoE `protobuf:"bytes,2,opt,name=concentration,proto3" json:"concentration,omitempty"`
	// 순발력
	ChangingSituation *StatCapacityInfoE `protobuf:"bytes,3,opt,name=changingSituation,proto3" json:"changingSituation,omitempty"`
	// 사고력
	ThinkingSkill *StatCapacityInfoE `protobuf:"bytes,4,opt,name=thinkingSkill,proto3" json:"thinkingSkill,omitempty"`
	// 언어능력
	Language *StatCapacityInfoE `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *StatCapacityMeanE) Reset() {
	*x = StatCapacityMeanE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatCapacityMeanE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatCapacityMeanE) ProtoMessage() {}

func (x *StatCapacityMeanE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatCapacityMeanE.ProtoReflect.Descriptor instead.
func (*StatCapacityMeanE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{6}
}

func (x *StatCapacityMeanE) GetMemory() *StatCapacityInfoE {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *StatCapacityMeanE) GetConcentration() *StatCapacityInfoE {
	if x != nil {
		return x.Concentration
	}
	return nil
}

func (x *StatCapacityMeanE) GetChangingSituation() *StatCapacityInfoE {
	if x != nil {
		return x.ChangingSituation
	}
	return nil
}

func (x *StatCapacityMeanE) GetThinkingSkill() *StatCapacityInfoE {
	if x != nil {
		return x.ThinkingSkill
	}
	return nil
}

func (x *StatCapacityMeanE) GetLanguage() *StatCapacityInfoE {
	if x != nil {
		return x.Language
	}
	return nil
}

// StatCapacityWeeklyE 능력치 주간 리스트
type StatCapacityWeeklyE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 기억력
	Memories []*StatCapacityE `protobuf:"bytes,1,rep,name=memories,proto3" json:"memories,omitempty"`
	// 집중력
	Concentrations []*StatCapacityE `protobuf:"bytes,2,rep,name=concentrations,proto3" json:"concentrations,omitempty"`
	// 순발력
	ChangingSituations []*StatCapacityE `protobuf:"bytes,3,rep,name=changingSituations,proto3" json:"changingSituations,omitempty"`
	// 사고력
	ThinkingSkills []*StatCapacityE `protobuf:"bytes,4,rep,name=thinkingSkills,proto3" json:"thinkingSkills,omitempty"`
	// 언어능력
	Languages []*StatCapacityE `protobuf:"bytes,5,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *StatCapacityWeeklyE) Reset() {
	*x = StatCapacityWeeklyE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatCapacityWeeklyE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatCapacityWeeklyE) ProtoMessage() {}

func (x *StatCapacityWeeklyE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatCapacityWeeklyE.ProtoReflect.Descriptor instead.
func (*StatCapacityWeeklyE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{7}
}

func (x *StatCapacityWeeklyE) GetMemories() []*StatCapacityE {
	if x != nil {
		return x.Memories
	}
	return nil
}

func (x *StatCapacityWeeklyE) GetConcentrations() []*StatCapacityE {
	if x != nil {
		return x.Concentrations
	}
	return nil
}

func (x *StatCapacityWeeklyE) GetChangingSituations() []*StatCapacityE {
	if x != nil {
		return x.ChangingSituations
	}
	return nil
}

func (x *StatCapacityWeeklyE) GetThinkingSkills() []*StatCapacityE {
	if x != nil {
		return x.ThinkingSkills
	}
	return nil
}

func (x *StatCapacityWeeklyE) GetLanguages() []*StatCapacityE {
	if x != nil {
		return x.Languages
	}
	return nil
}

// StatCapacityE 능력지 정보
type StatCapacityInfoE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 평균점수
	Mean int32 `protobuf:"varint,1,opt,name=mean,proto3" json:"mean,omitempty"`
	// 설명
	Describe string `protobuf:"bytes,2,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *StatCapacityInfoE) Reset() {
	*x = StatCapacityInfoE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatCapacityInfoE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatCapacityInfoE) ProtoMessage() {}

func (x *StatCapacityInfoE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatCapacityInfoE.ProtoReflect.Descriptor instead.
func (*StatCapacityInfoE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{8}
}

func (x *StatCapacityInfoE) GetMean() int32 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *StatCapacityInfoE) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

// StatCapacityE 능력지 정보
type StatCapacityE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 점수
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// 날짜
	Date string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *StatCapacityE) Reset() {
	*x = StatCapacityE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatCapacityE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatCapacityE) ProtoMessage() {}

func (x *StatCapacityE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatCapacityE.ProtoReflect.Descriptor instead.
func (*StatCapacityE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{9}
}

func (x *StatCapacityE) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *StatCapacityE) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type StatUserViewE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// 강의 No
	LessonNo int64 `protobuf:"varint,2,opt,name=lessonNo,proto3" json:"lessonNo,omitempty"`
	// 커리큘럼 No
	CurriculumNo int64 `protobuf:"varint,3,opt,name=curriculumNo,proto3" json:"curriculumNo,omitempty"`
	// 뷰수
	CView int32 `protobuf:"varint,4,opt,name=cView,proto3" json:"cView,omitempty"`
	// 북마크수
	CBookmark int32 `protobuf:"varint,5,opt,name=cBookmark,proto3" json:"cBookmark,omitempty"`
	// 좋아요수
	CLike int32 `protobuf:"varint,6,opt,name=cLike,proto3" json:"cLike,omitempty"`
	// 참여자수
	CLessonMember int32 `protobuf:"varint,7,opt,name=cLessonMember,proto3" json:"cLessonMember,omitempty"`
	// 리뷰수
	CReview int32 `protobuf:"varint,8,opt,name=cReview,proto3" json:"cReview,omitempty"`
	// 진행정보
	Progress *LessonProgressE `protobuf:"bytes,9,opt,name=progress,proto3" json:"progress,omitempty"`
	// 유저 좋아요 여부
	IsLike bool `protobuf:"varint,10,opt,name=isLike,proto3" json:"isLike,omitempty"`
	// 유저 뷰 여부
	IsView bool `protobuf:"varint,11,opt,name=isView,proto3" json:"isView,omitempty"`
	// 유저 북마크 여부
	IsBookmark bool `protobuf:"varint,12,opt,name=isBookmark,proto3" json:"isBookmark,omitempty"`
}

func (x *StatUserViewE) Reset() {
	*x = StatUserViewE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatUserViewE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatUserViewE) ProtoMessage() {}

func (x *StatUserViewE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatUserViewE.ProtoReflect.Descriptor instead.
func (*StatUserViewE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{10}
}

func (x *StatUserViewE) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *StatUserViewE) GetLessonNo() int64 {
	if x != nil {
		return x.LessonNo
	}
	return 0
}

func (x *StatUserViewE) GetCurriculumNo() int64 {
	if x != nil {
		return x.CurriculumNo
	}
	return 0
}

func (x *StatUserViewE) GetCView() int32 {
	if x != nil {
		return x.CView
	}
	return 0
}

func (x *StatUserViewE) GetCBookmark() int32 {
	if x != nil {
		return x.CBookmark
	}
	return 0
}

func (x *StatUserViewE) GetCLike() int32 {
	if x != nil {
		return x.CLike
	}
	return 0
}

func (x *StatUserViewE) GetCLessonMember() int32 {
	if x != nil {
		return x.CLessonMember
	}
	return 0
}

func (x *StatUserViewE) GetCReview() int32 {
	if x != nil {
		return x.CReview
	}
	return 0
}

func (x *StatUserViewE) GetProgress() *LessonProgressE {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *StatUserViewE) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *StatUserViewE) GetIsView() bool {
	if x != nil {
		return x.IsView
	}
	return false
}

func (x *StatUserViewE) GetIsBookmark() bool {
	if x != nil {
		return x.IsBookmark
	}
	return false
}

// 강의 컨텐츠 정보
type StatLessonContentE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId        string `protobuf:"bytes,1,opt,name=lessonId,proto3" json:"lessonId,omitempty"`
	LessonContentId string `protobuf:"bytes,2,opt,name=lessonContentId,proto3" json:"lessonContentId,omitempty"`
	IsDone          bool   `protobuf:"varint,3,opt,name=isDone,proto3" json:"isDone,omitempty"`
	DoneDate        string `protobuf:"bytes,4,opt,name=doneDate,proto3" json:"doneDate,omitempty"`
	Idx             int32  `protobuf:"varint,5,opt,name=idx,proto3" json:"idx,omitempty"`
	UserHashKey     string `protobuf:"bytes,6,opt,name=userHashKey,proto3" json:"userHashKey,omitempty"`
}

func (x *StatLessonContentE) Reset() {
	*x = StatLessonContentE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_stat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatLessonContentE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatLessonContentE) ProtoMessage() {}

func (x *StatLessonContentE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_stat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatLessonContentE.ProtoReflect.Descriptor instead.
func (*StatLessonContentE) Descriptor() ([]byte, []int) {
	return file_v1_stat_proto_rawDescGZIP(), []int{11}
}

func (x *StatLessonContentE) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *StatLessonContentE) GetLessonContentId() string {
	if x != nil {
		return x.LessonContentId
	}
	return ""
}

func (x *StatLessonContentE) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *StatLessonContentE) GetDoneDate() string {
	if x != nil {
		return x.DoneDate
	}
	return ""
}

func (x *StatLessonContentE) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *StatLessonContentE) GetUserHashKey() string {
	if x != nil {
		return x.UserHashKey
	}
	return ""
}

var File_v1_stat_proto protoreflect.FileDescriptor

var file_v1_stat_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x64, 0x0a, 0x1b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x52,
	0x1b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x1e, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xdf, 0x03, 0x0a, 0x10,
	0x53, 0x74, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x45,
	0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x52, 0x65, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x45, 0x52,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x4d, 0x65, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x61,
	0x6e, 0x45, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x61, 0x6e,
	0x12, 0x3f, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x57, 0x65, 0x65, 0x6b,
	0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79,
	0x45, 0x52, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x52, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9a, 0x02,
	0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x1b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x74,
	0x61, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x67, 0x6c,
	0x69, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x67, 0x6c, 0x69,
	0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0xb4,
	0x02, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d,
	0x65, 0x61, 0x6e, 0x45, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x43, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x52, 0x0d, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x45, 0x12, 0x2d, 0x0a,
	0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x45, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x45, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x45, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x74, 0x68,
	0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x45, 0x52, 0x0e, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x45, 0x52, 0x09, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x45, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xee, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x45, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x56, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x42,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x42, 0x49, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x09,
	0x53, 0x74, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x6c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02, 0x0a,
	0x4c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_stat_proto_rawDescOnce sync.Once
	file_v1_stat_proto_rawDescData = file_v1_stat_proto_rawDesc
)

func file_v1_stat_proto_rawDescGZIP() []byte {
	file_v1_stat_proto_rawDescOnce.Do(func() {
		file_v1_stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_stat_proto_rawDescData)
	})
	return file_v1_stat_proto_rawDescData
}

var file_v1_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_stat_proto_goTypes = []interface{}{
	(*StatLessonActivityE)(nil),            // 0: v1.StatLessonActivityE
	(*StatLessonPlanContentActivityE)(nil), // 1: v1.StatLessonPlanContentActivityE
	(*StatUserSummaryE)(nil),               // 2: v1.StatUserSummaryE
	(*StatUserLessonCountE)(nil),           // 3: v1.StatUserLessonCountE
	(*StatRateE)(nil),                      // 4: v1.StatRateE
	(*StatStudyTimeE)(nil),                 // 5: v1.StatStudyTimeE
	(*StatCapacityMeanE)(nil),              // 6: v1.StatCapacityMeanE
	(*StatCapacityWeeklyE)(nil),            // 7: v1.StatCapacityWeeklyE
	(*StatCapacityInfoE)(nil),              // 8: v1.StatCapacityInfoE
	(*StatCapacityE)(nil),                  // 9: v1.StatCapacityE
	(*StatUserViewE)(nil),                  // 10: v1.StatUserViewE
	(*StatLessonContentE)(nil),             // 11: v1.StatLessonContentE
	(*LessonProgressE)(nil),                // 12: v1.LessonProgressE
}
var file_v1_stat_proto_depIdxs = []int32{
	1,  // 0: v1.StatLessonActivityE.lessonPlanContentActivities:type_name -> v1.StatLessonPlanContentActivityE
	5,  // 1: v1.StatUserSummaryE.studyTime:type_name -> v1.StatStudyTimeE
	4,  // 2: v1.StatUserSummaryE.rate:type_name -> v1.StatRateE
	6,  // 3: v1.StatUserSummaryE.capacityMean:type_name -> v1.StatCapacityMeanE
	7,  // 4: v1.StatUserSummaryE.capacityWeekly:type_name -> v1.StatCapacityWeeklyE
	3,  // 5: v1.StatUserSummaryE.lessonCount:type_name -> v1.StatUserLessonCountE
	8,  // 6: v1.StatCapacityMeanE.memory:type_name -> v1.StatCapacityInfoE
	8,  // 7: v1.StatCapacityMeanE.concentration:type_name -> v1.StatCapacityInfoE
	8,  // 8: v1.StatCapacityMeanE.changingSituation:type_name -> v1.StatCapacityInfoE
	8,  // 9: v1.StatCapacityMeanE.thinkingSkill:type_name -> v1.StatCapacityInfoE
	8,  // 10: v1.StatCapacityMeanE.language:type_name -> v1.StatCapacityInfoE
	9,  // 11: v1.StatCapacityWeeklyE.memories:type_name -> v1.StatCapacityE
	9,  // 12: v1.StatCapacityWeeklyE.concentrations:type_name -> v1.StatCapacityE
	9,  // 13: v1.StatCapacityWeeklyE.changingSituations:type_name -> v1.StatCapacityE
	9,  // 14: v1.StatCapacityWeeklyE.thinkingSkills:type_name -> v1.StatCapacityE
	9,  // 15: v1.StatCapacityWeeklyE.languages:type_name -> v1.StatCapacityE
	12, // 16: v1.StatUserViewE.progress:type_name -> v1.LessonProgressE
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_v1_stat_proto_init() }
func file_v1_stat_proto_init() {
	if File_v1_stat_proto != nil {
		return
	}
	file_v1_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_stat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatLessonActivityE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatLessonPlanContentActivityE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatUserSummaryE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatUserLessonCountE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRateE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatStudyTimeE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatCapacityMeanE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatCapacityWeeklyE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatCapacityInfoE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatCapacityE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatUserViewE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_stat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatLessonContentE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_stat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_stat_proto_goTypes,
		DependencyIndexes: file_v1_stat_proto_depIdxs,
		MessageInfos:      file_v1_stat_proto_msgTypes,
	}.Build()
	File_v1_stat_proto = out.File
	file_v1_stat_proto_rawDesc = nil
	file_v1_stat_proto_goTypes = nil
	file_v1_stat_proto_depIdxs = nil
}
