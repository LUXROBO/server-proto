// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: v1/product_api.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProductGraphqlQueryRequest graphql query
type ProductGraphqlQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query         string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	OperationName string `protobuf:"bytes,2,opt,name=operationName,proto3" json:"operationName,omitempty"`
}

func (x *ProductGraphqlQueryRequest) Reset() {
	*x = ProductGraphqlQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_product_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGraphqlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGraphqlQueryRequest) ProtoMessage() {}

func (x *ProductGraphqlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGraphqlQueryRequest.ProtoReflect.Descriptor instead.
func (*ProductGraphqlQueryRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_api_proto_rawDescGZIP(), []int{0}
}

func (x *ProductGraphqlQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ProductGraphqlQueryRequest) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

// ProductGraphqlQueryResponse graphql query response
type ProductGraphqlQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    *Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProductGraphqlQueryResponse) Reset() {
	*x = ProductGraphqlQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_product_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGraphqlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGraphqlQueryResponse) ProtoMessage() {}

func (x *ProductGraphqlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGraphqlQueryResponse.ProtoReflect.Descriptor instead.
func (*ProductGraphqlQueryResponse) Descriptor() ([]byte, []int) {
	return file_v1_product_api_proto_rawDescGZIP(), []int{1}
}

func (x *ProductGraphqlQueryResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ProductGraphqlQueryResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// ProductHealthRequest health request
type ProductHealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First     int32    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	After     string   `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	LessonIds []string `protobuf:"bytes,3,rep,name=lessonIds,proto3" json:"lessonIds,omitempty"`
}

func (x *ProductHealthRequest) Reset() {
	*x = ProductHealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_product_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductHealthRequest) ProtoMessage() {}

func (x *ProductHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductHealthRequest.ProtoReflect.Descriptor instead.
func (*ProductHealthRequest) Descriptor() ([]byte, []int) {
	return file_v1_product_api_proto_rawDescGZIP(), []int{2}
}

func (x *ProductHealthRequest) GetFirst() int32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *ProductHealthRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ProductHealthRequest) GetLessonIds() []string {
	if x != nil {
		return x.LessonIds
	}
	return nil
}

// ProductHealthResponse health response
type ProductHealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    *Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProductHealthResponse) Reset() {
	*x = ProductHealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_product_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductHealthResponse) ProtoMessage() {}

func (x *ProductHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_product_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductHealthResponse.ProtoReflect.Descriptor instead.
func (*ProductHealthResponse) Descriptor() ([]byte, []int) {
	return file_v1_product_api_proto_rawDescGZIP(), []int{3}
}

func (x *ProductHealthResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ProductHealthResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_v1_product_api_proto protoreflect.FileDescriptor

var file_v1_product_api_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x1a, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x60, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xac, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x50, 0x49, 0x12, 0x56, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x18, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4f, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x75,
	0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x6c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02, 0x0a,
	0x4c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_product_api_proto_rawDescOnce sync.Once
	file_v1_product_api_proto_rawDescData = file_v1_product_api_proto_rawDesc
)

func file_v1_product_api_proto_rawDescGZIP() []byte {
	file_v1_product_api_proto_rawDescOnce.Do(func() {
		file_v1_product_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_product_api_proto_rawDescData)
	})
	return file_v1_product_api_proto_rawDescData
}

var file_v1_product_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_product_api_proto_goTypes = []interface{}{
	(*ProductGraphqlQueryRequest)(nil),  // 0: v1.ProductGraphqlQueryRequest
	(*ProductGraphqlQueryResponse)(nil), // 1: v1.ProductGraphqlQueryResponse
	(*ProductHealthRequest)(nil),        // 2: v1.ProductHealthRequest
	(*ProductHealthResponse)(nil),       // 3: v1.ProductHealthResponse
	(*Error)(nil),                       // 4: v1.Error
}
var file_v1_product_api_proto_depIdxs = []int32{
	4, // 0: v1.ProductGraphqlQueryResponse.err:type_name -> v1.Error
	4, // 1: v1.ProductHealthResponse.err:type_name -> v1.Error
	0, // 2: v1.ProductAPI.ProductGraphqlQuery:input_type -> v1.ProductGraphqlQueryRequest
	2, // 3: v1.ProductAPI.ProductHealth:input_type -> v1.ProductHealthRequest
	1, // 4: v1.ProductAPI.ProductGraphqlQuery:output_type -> v1.ProductGraphqlQueryResponse
	3, // 5: v1.ProductAPI.ProductHealth:output_type -> v1.ProductHealthResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_product_api_proto_init() }
func file_v1_product_api_proto_init() {
	if File_v1_product_api_proto != nil {
		return
	}
	file_v1_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_product_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductGraphqlQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_product_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductGraphqlQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_product_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductHealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_product_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductHealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_product_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_product_api_proto_goTypes,
		DependencyIndexes: file_v1_product_api_proto_depIdxs,
		MessageInfos:      file_v1_product_api_proto_msgTypes,
	}.Build()
	File_v1_product_api_proto = out.File
	file_v1_product_api_proto_rawDesc = nil
	file_v1_product_api_proto_goTypes = nil
	file_v1_product_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductAPIClient is the client API for ProductAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductAPIClient interface {
	// ProductGraphqlQuery graphql query helper method.
	ProductGraphqlQuery(ctx context.Context, in *ProductGraphqlQueryRequest, opts ...grpc.CallOption) (*ProductGraphqlQueryResponse, error)
	// ProductHealth check method.
	ProductHealth(ctx context.Context, in *ProductHealthRequest, opts ...grpc.CallOption) (*ProductHealthResponse, error)
}

type productAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewProductAPIClient(cc grpc.ClientConnInterface) ProductAPIClient {
	return &productAPIClient{cc}
}

func (c *productAPIClient) ProductGraphqlQuery(ctx context.Context, in *ProductGraphqlQueryRequest, opts ...grpc.CallOption) (*ProductGraphqlQueryResponse, error) {
	out := new(ProductGraphqlQueryResponse)
	err := c.cc.Invoke(ctx, "/v1.ProductAPI/ProductGraphqlQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productAPIClient) ProductHealth(ctx context.Context, in *ProductHealthRequest, opts ...grpc.CallOption) (*ProductHealthResponse, error) {
	out := new(ProductHealthResponse)
	err := c.cc.Invoke(ctx, "/v1.ProductAPI/ProductHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductAPIServer is the server API for ProductAPI service.
type ProductAPIServer interface {
	// ProductGraphqlQuery graphql query helper method.
	ProductGraphqlQuery(context.Context, *ProductGraphqlQueryRequest) (*ProductGraphqlQueryResponse, error)
	// ProductHealth check method.
	ProductHealth(context.Context, *ProductHealthRequest) (*ProductHealthResponse, error)
}

// UnimplementedProductAPIServer can be embedded to have forward compatible implementations.
type UnimplementedProductAPIServer struct {
}

func (*UnimplementedProductAPIServer) ProductGraphqlQuery(context.Context, *ProductGraphqlQueryRequest) (*ProductGraphqlQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductGraphqlQuery not implemented")
}
func (*UnimplementedProductAPIServer) ProductHealth(context.Context, *ProductHealthRequest) (*ProductHealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductHealth not implemented")
}

func RegisterProductAPIServer(s *grpc.Server, srv ProductAPIServer) {
	s.RegisterService(&_ProductAPI_serviceDesc, srv)
}

func _ProductAPI_ProductGraphqlQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductGraphqlQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).ProductGraphqlQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ProductAPI/ProductGraphqlQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).ProductGraphqlQuery(ctx, req.(*ProductGraphqlQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductAPI_ProductHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductAPIServer).ProductHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ProductAPI/ProductHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductAPIServer).ProductHealth(ctx, req.(*ProductHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ProductAPI",
	HandlerType: (*ProductAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProductGraphqlQuery",
			Handler:    _ProductAPI_ProductGraphqlQuery_Handler,
		},
		{
			MethodName: "ProductHealth",
			Handler:    _ProductAPI_ProductHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/product_api.proto",
}
