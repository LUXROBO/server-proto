// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: v1/question.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QuestionE 문제정보
type QuestionE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auto No
	No int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	// 문제 제목
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 문제설명정보
	Infos []*QuestionInfoE `protobuf:"bytes,3,rep,name=infos,proto3" json:"infos,omitempty"`
	// 예시 테스트케이스
	ExampleTestcases []*QuestionTestcaseE `protobuf:"bytes,4,rep,name=exampleTestcases,proto3" json:"exampleTestcases,omitempty"`
	// 채점용 테스트케이스
	Testcases []*QuestionTestcaseE `protobuf:"bytes,5,rep,name=testcases,proto3" json:"testcases,omitempty"`
	// 사전코드
	InitCode string `protobuf:"bytes,6,opt,name=initCode,proto3" json:"initCode,omitempty"`
	// 정답코드
	AnswerCode string `protobuf:"bytes,7,opt,name=answerCode,proto3" json:"answerCode,omitempty"`
	// 태그
	Tags []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	// 공개유무
	OpenType string `protobuf:"bytes,9,opt,name=openType,proto3" json:"openType,omitempty"`
	// 문제유형
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// 난이도
	LevelType string `protobuf:"bytes,11,opt,name=levelType,proto3" json:"levelType,omitempty"`
	// 권장시간 (분단위)
	LimitTime string `protobuf:"bytes,12,opt,name=limitTime,proto3" json:"limitTime,omitempty"`
	// 생성자
	OwnerNo int64 `protobuf:"varint,13,opt,name=ownerNo,proto3" json:"ownerNo,omitempty"`
	// 작성 날짜
	CreatedAt int64 `protobuf:"varint,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// 수정 날짜
	UpdatedAt int64 `protobuf:"varint,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// 삭제 날짜
	DeletedAt int64 `protobuf:"varint,16,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *QuestionE) Reset() {
	*x = QuestionE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionE) ProtoMessage() {}

func (x *QuestionE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionE.ProtoReflect.Descriptor instead.
func (*QuestionE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{0}
}

func (x *QuestionE) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *QuestionE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionE) GetInfos() []*QuestionInfoE {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *QuestionE) GetExampleTestcases() []*QuestionTestcaseE {
	if x != nil {
		return x.ExampleTestcases
	}
	return nil
}

func (x *QuestionE) GetTestcases() []*QuestionTestcaseE {
	if x != nil {
		return x.Testcases
	}
	return nil
}

func (x *QuestionE) GetInitCode() string {
	if x != nil {
		return x.InitCode
	}
	return ""
}

func (x *QuestionE) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *QuestionE) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *QuestionE) GetOpenType() string {
	if x != nil {
		return x.OpenType
	}
	return ""
}

func (x *QuestionE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QuestionE) GetLevelType() string {
	if x != nil {
		return x.LevelType
	}
	return ""
}

func (x *QuestionE) GetLimitTime() string {
	if x != nil {
		return x.LimitTime
	}
	return ""
}

func (x *QuestionE) GetOwnerNo() int64 {
	if x != nil {
		return x.OwnerNo
	}
	return 0
}

func (x *QuestionE) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *QuestionE) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *QuestionE) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// QuestionInfoE 문제설명정보
type QuestionInfoE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 필드명
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 필드 내용
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *QuestionInfoE) Reset() {
	*x = QuestionInfoE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionInfoE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionInfoE) ProtoMessage() {}

func (x *QuestionInfoE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionInfoE.ProtoReflect.Descriptor instead.
func (*QuestionInfoE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionInfoE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionInfoE) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// QuestionTestcaseE 테스트케이스
type QuestionTestcaseE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 입력값
	Input []*QuestionTestcaseParamE `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty"`
	// 출력값
	Output *QuestionTestcaseParamE `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// 배점
	Score int64 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *QuestionTestcaseE) Reset() {
	*x = QuestionTestcaseE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseE) ProtoMessage() {}

func (x *QuestionTestcaseE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionTestcaseE) GetInput() []*QuestionTestcaseParamE {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *QuestionTestcaseE) GetOutput() *QuestionTestcaseParamE {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *QuestionTestcaseE) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// QuestionTestcaseParamE 매개변수
type QuestionTestcaseParamE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 타입
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// 값
	Value *QuestionTestcaseParamValueE `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QuestionTestcaseParamE) Reset() {
	*x = QuestionTestcaseParamE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseParamE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseParamE) ProtoMessage() {}

func (x *QuestionTestcaseParamE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseParamE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseParamE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{3}
}

func (x *QuestionTestcaseParamE) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QuestionTestcaseParamE) GetValue() *QuestionTestcaseParamValueE {
	if x != nil {
		return x.Value
	}
	return nil
}

// QuestionTestcaseParamValueE 매개변수 값
type QuestionTestcaseParamValueE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueInt      *QuestionTestcaseParamValueIntE      `protobuf:"bytes,1,opt,name=valueInt,proto3" json:"valueInt,omitempty"`
	ValueIntArray *QuestionTestcaseParamValueIntArrayE `protobuf:"bytes,2,opt,name=valueIntArray,proto3" json:"valueIntArray,omitempty"`
	ValueString   *QuestionTestcaseParamValueStringE   `protobuf:"bytes,3,opt,name=valueString,proto3" json:"valueString,omitempty"`
	ValueBoolean  *QuestionTestcaseParamValueBooleanE  `protobuf:"bytes,4,opt,name=valueBoolean,proto3" json:"valueBoolean,omitempty"`
}

func (x *QuestionTestcaseParamValueE) Reset() {
	*x = QuestionTestcaseParamValueE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseParamValueE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseParamValueE) ProtoMessage() {}

func (x *QuestionTestcaseParamValueE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseParamValueE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseParamValueE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{4}
}

func (x *QuestionTestcaseParamValueE) GetValueInt() *QuestionTestcaseParamValueIntE {
	if x != nil {
		return x.ValueInt
	}
	return nil
}

func (x *QuestionTestcaseParamValueE) GetValueIntArray() *QuestionTestcaseParamValueIntArrayE {
	if x != nil {
		return x.ValueIntArray
	}
	return nil
}

func (x *QuestionTestcaseParamValueE) GetValueString() *QuestionTestcaseParamValueStringE {
	if x != nil {
		return x.ValueString
	}
	return nil
}

func (x *QuestionTestcaseParamValueE) GetValueBoolean() *QuestionTestcaseParamValueBooleanE {
	if x != nil {
		return x.ValueBoolean
	}
	return nil
}

// QuestionTestcaseParamValueIntE 숫자
type QuestionTestcaseParamValueIntE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QuestionTestcaseParamValueIntE) Reset() {
	*x = QuestionTestcaseParamValueIntE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseParamValueIntE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseParamValueIntE) ProtoMessage() {}

func (x *QuestionTestcaseParamValueIntE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseParamValueIntE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseParamValueIntE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{5}
}

func (x *QuestionTestcaseParamValueIntE) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// QuestionTestcaseParamValueIntArrayE 숫자 배열
type QuestionTestcaseParamValueIntArrayE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *QuestionTestcaseParamValueIntArrayE) Reset() {
	*x = QuestionTestcaseParamValueIntArrayE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseParamValueIntArrayE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseParamValueIntArrayE) ProtoMessage() {}

func (x *QuestionTestcaseParamValueIntArrayE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseParamValueIntArrayE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseParamValueIntArrayE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{6}
}

func (x *QuestionTestcaseParamValueIntArrayE) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

// QuestionTestcaseParamValueStringE 문자열
type QuestionTestcaseParamValueStringE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QuestionTestcaseParamValueStringE) Reset() {
	*x = QuestionTestcaseParamValueStringE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseParamValueStringE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseParamValueStringE) ProtoMessage() {}

func (x *QuestionTestcaseParamValueStringE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseParamValueStringE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseParamValueStringE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{7}
}

func (x *QuestionTestcaseParamValueStringE) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// QuestionTestcaseParamValueBooleanE 불리언
type QuestionTestcaseParamValueBooleanE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QuestionTestcaseParamValueBooleanE) Reset() {
	*x = QuestionTestcaseParamValueBooleanE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionTestcaseParamValueBooleanE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTestcaseParamValueBooleanE) ProtoMessage() {}

func (x *QuestionTestcaseParamValueBooleanE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTestcaseParamValueBooleanE.ProtoReflect.Descriptor instead.
func (*QuestionTestcaseParamValueBooleanE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionTestcaseParamValueBooleanE) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// QuestionLevelTypeE 난이도 유형
type QuestionLevelTypeE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *QuestionLevelTypeE) Reset() {
	*x = QuestionLevelTypeE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_question_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionLevelTypeE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionLevelTypeE) ProtoMessage() {}

func (x *QuestionLevelTypeE) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionLevelTypeE.ProtoReflect.Descriptor instead.
func (*QuestionLevelTypeE) Descriptor() ([]byte, []int) {
	return file_v1_question_proto_rawDescGZIP(), []int{9}
}

func (x *QuestionLevelTypeE) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

var File_v1_question_proto protoreflect.FileDescriptor

var file_v1_question_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x82, 0x04, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x52, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x45, 0x52, 0x10, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x45, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x47, 0x0a, 0x0d,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x45, 0x12, 0x30, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x45, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x32, 0x0a,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x45, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x63, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x45, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc1, 0x02, 0x0a,
	0x1b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x12, 0x3e, 0x0a, 0x08,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e,
	0x74, 0x45, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0d,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x45, 0x52, 0x0d, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x47, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x45, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x22, 0x36, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e,
	0x74, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x45, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x12,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x42, 0x4d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x6c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x50, 0x58, 0xaa, 0x02, 0x0a,
	0x4c, 0x75, 0x78, 0x72, 0x6f, 0x62, 0x6f, 0x2e, 0x76, 0x31, 0xca, 0x02, 0x0a, 0x4c, 0x75, 0x78,
	0x72, 0x6f, 0x62, 0x6f, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_question_proto_rawDescOnce sync.Once
	file_v1_question_proto_rawDescData = file_v1_question_proto_rawDesc
)

func file_v1_question_proto_rawDescGZIP() []byte {
	file_v1_question_proto_rawDescOnce.Do(func() {
		file_v1_question_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_question_proto_rawDescData)
	})
	return file_v1_question_proto_rawDescData
}

var file_v1_question_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_question_proto_goTypes = []interface{}{
	(*QuestionE)(nil),                           // 0: v1.QuestionE
	(*QuestionInfoE)(nil),                       // 1: v1.QuestionInfoE
	(*QuestionTestcaseE)(nil),                   // 2: v1.QuestionTestcaseE
	(*QuestionTestcaseParamE)(nil),              // 3: v1.QuestionTestcaseParamE
	(*QuestionTestcaseParamValueE)(nil),         // 4: v1.QuestionTestcaseParamValueE
	(*QuestionTestcaseParamValueIntE)(nil),      // 5: v1.QuestionTestcaseParamValueIntE
	(*QuestionTestcaseParamValueIntArrayE)(nil), // 6: v1.QuestionTestcaseParamValueIntArrayE
	(*QuestionTestcaseParamValueStringE)(nil),   // 7: v1.QuestionTestcaseParamValueStringE
	(*QuestionTestcaseParamValueBooleanE)(nil),  // 8: v1.QuestionTestcaseParamValueBooleanE
	(*QuestionLevelTypeE)(nil),                  // 9: v1.QuestionLevelTypeE
}
var file_v1_question_proto_depIdxs = []int32{
	1,  // 0: v1.QuestionE.infos:type_name -> v1.QuestionInfoE
	2,  // 1: v1.QuestionE.exampleTestcases:type_name -> v1.QuestionTestcaseE
	2,  // 2: v1.QuestionE.testcases:type_name -> v1.QuestionTestcaseE
	3,  // 3: v1.QuestionTestcaseE.input:type_name -> v1.QuestionTestcaseParamE
	3,  // 4: v1.QuestionTestcaseE.output:type_name -> v1.QuestionTestcaseParamE
	4,  // 5: v1.QuestionTestcaseParamE.value:type_name -> v1.QuestionTestcaseParamValueE
	5,  // 6: v1.QuestionTestcaseParamValueE.valueInt:type_name -> v1.QuestionTestcaseParamValueIntE
	6,  // 7: v1.QuestionTestcaseParamValueE.valueIntArray:type_name -> v1.QuestionTestcaseParamValueIntArrayE
	7,  // 8: v1.QuestionTestcaseParamValueE.valueString:type_name -> v1.QuestionTestcaseParamValueStringE
	8,  // 9: v1.QuestionTestcaseParamValueE.valueBoolean:type_name -> v1.QuestionTestcaseParamValueBooleanE
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_v1_question_proto_init() }
func file_v1_question_proto_init() {
	if File_v1_question_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_question_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionInfoE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseParamE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseParamValueE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseParamValueIntE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseParamValueIntArrayE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseParamValueStringE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionTestcaseParamValueBooleanE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_question_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionLevelTypeE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_question_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_question_proto_goTypes,
		DependencyIndexes: file_v1_question_proto_depIdxs,
		MessageInfos:      file_v1_question_proto_msgTypes,
	}.Build()
	File_v1_question_proto = out.File
	file_v1_question_proto_rawDesc = nil
	file_v1_question_proto_goTypes = nil
	file_v1_question_proto_depIdxs = nil
}
