/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var v1_base_pb = require('../v1/base_pb.js');
goog.object.extend(proto, v1_base_pb);
var v1_enum_pb = require('../v1/enum_pb.js');
goog.object.extend(proto, v1_enum_pb);
var v1_lesson_pb = require('../v1/lesson_pb.js');
goog.object.extend(proto, v1_lesson_pb);
goog.exportSymbol('proto.v1.ClassroomActivityE', null, global);
goog.exportSymbol('proto.v1.ClassroomE', null, global);
goog.exportSymbol('proto.v1.ClassroomHomeworkE', null, global);
goog.exportSymbol('proto.v1.ClassroomLessonE', null, global);
goog.exportSymbol('proto.v1.ClassroomLoginE', null, global);
goog.exportSymbol('proto.v1.ClassroomNoticeE', null, global);
goog.exportSymbol('proto.v1.ClassroomStudentE', null, global);
goog.exportSymbol('proto.v1.ClassroomStudentHomeworkE', null, global);
goog.exportSymbol('proto.v1.ClassroomStudentLessonDashboardE', null, global);
goog.exportSymbol('proto.v1.ClassroomWorkE', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomE.displayName = 'proto.v1.ClassroomE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomActivityE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomActivityE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomActivityE.displayName = 'proto.v1.ClassroomActivityE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomNoticeE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomNoticeE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomNoticeE.displayName = 'proto.v1.ClassroomNoticeE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomHomeworkE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomHomeworkE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomHomeworkE.displayName = 'proto.v1.ClassroomHomeworkE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomStudentHomeworkE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomStudentHomeworkE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomStudentHomeworkE.displayName = 'proto.v1.ClassroomStudentHomeworkE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomStudentE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomStudentE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomStudentE.displayName = 'proto.v1.ClassroomStudentE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomStudentLessonDashboardE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.ClassroomStudentLessonDashboardE.repeatedFields_, null);
};
goog.inherits(proto.v1.ClassroomStudentLessonDashboardE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomStudentLessonDashboardE.displayName = 'proto.v1.ClassroomStudentLessonDashboardE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomLoginE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomLoginE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomLoginE.displayName = 'proto.v1.ClassroomLoginE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomLessonE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomLessonE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomLessonE.displayName = 'proto.v1.ClassroomLessonE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ClassroomWorkE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ClassroomWorkE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ClassroomWorkE.displayName = 'proto.v1.ClassroomWorkE';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ownerno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ownername: jspb.Message.getFieldWithDefault(msg, 4, ""),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 6, ""),
    mainimg: (f = msg.getMainimg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    activity: (f = msg.getActivity()) && proto.v1.ClassroomActivityE.toObject(includeInstance, f),
    idx: jspb.Message.getFieldWithDefault(msg, 9, 0),
    opentype: jspb.Message.getFieldWithDefault(msg, 10, 0),
    gradetype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    clesson: jspb.Message.getFieldWithDefault(msg, 12, 0),
    clessondoing: jspb.Message.getFieldWithDefault(msg, 13, 0),
    createdat: jspb.Message.getFieldWithDefault(msg, 14, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomE}
 */
proto.v1.ClassroomE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomE;
  return proto.v1.ClassroomE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomE}
 */
proto.v1.ClassroomE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOwnerno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 7:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setMainimg(value);
      break;
    case 8:
      var value = new proto.v1.ClassroomActivityE;
      reader.readMessage(value,proto.v1.ClassroomActivityE.deserializeBinaryFromReader);
      msg.setActivity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 10:
      var value = /** @type {!proto.v1.ClassroomOpenType} */ (reader.readEnum());
      msg.setOpentype(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGradetype(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClesson(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClessondoing(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOwnerno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOwnername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMainimg();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getActivity();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.v1.ClassroomActivityE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getOpentype();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getGradetype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getClesson();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getClessondoing();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 classroomNo = 2;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ownerNo = 3;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getOwnerno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setOwnerno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ownerName = 4;
 * @return {string}
 */
proto.v1.ClassroomE.prototype.getOwnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.ClassroomE.prototype.setOwnername = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.v1.ClassroomE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.ClassroomE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string summary = 6;
 * @return {string}
 */
proto.v1.ClassroomE.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ClassroomE.prototype.setSummary = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ImageInfoE mainImg = 7;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.ClassroomE.prototype.getMainimg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 7));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.ClassroomE.prototype.setMainimg = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ClassroomE.prototype.clearMainimg = function() {
  this.setMainimg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ClassroomE.prototype.hasMainimg = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ClassroomActivityE activity = 8;
 * @return {?proto.v1.ClassroomActivityE}
 */
proto.v1.ClassroomE.prototype.getActivity = function() {
  return /** @type{?proto.v1.ClassroomActivityE} */ (
    jspb.Message.getWrapperField(this, proto.v1.ClassroomActivityE, 8));
};


/** @param {?proto.v1.ClassroomActivityE|undefined} value */
proto.v1.ClassroomE.prototype.setActivity = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ClassroomE.prototype.clearActivity = function() {
  this.setActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ClassroomE.prototype.hasActivity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 idx = 9;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional ClassroomOpenType openType = 10;
 * @return {!proto.v1.ClassroomOpenType}
 */
proto.v1.ClassroomE.prototype.getOpentype = function() {
  return /** @type {!proto.v1.ClassroomOpenType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.v1.ClassroomOpenType} value */
proto.v1.ClassroomE.prototype.setOpentype = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string gradeType = 11;
 * @return {string}
 */
proto.v1.ClassroomE.prototype.getGradetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.v1.ClassroomE.prototype.setGradetype = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 cLesson = 12;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getClesson = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setClesson = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 cLessonDoing = 13;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getClessondoing = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setClessondoing = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 createdAt = 14;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 updatedAt = 15;
 * @return {number}
 */
proto.v1.ClassroomE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.v1.ClassroomE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomActivityE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomActivityE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomActivityE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomActivityE.toObject = function(includeInstance, msg) {
  var f, obj = {
    calarm: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cstudent: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomActivityE}
 */
proto.v1.ClassroomActivityE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomActivityE;
  return proto.v1.ClassroomActivityE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomActivityE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomActivityE}
 */
proto.v1.ClassroomActivityE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCalarm(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCstudent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomActivityE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomActivityE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomActivityE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomActivityE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCalarm();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCstudent();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 cAlarm = 1;
 * @return {number}
 */
proto.v1.ClassroomActivityE.prototype.getCalarm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomActivityE.prototype.setCalarm = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 cStudent = 2;
 * @return {number}
 */
proto.v1.ClassroomActivityE.prototype.getCstudent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomActivityE.prototype.setCstudent = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomNoticeE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomNoticeE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomNoticeE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomNoticeE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isnew: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    createdat: jspb.Message.getFieldWithDefault(msg, 6, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomNoticeE}
 */
proto.v1.ClassroomNoticeE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomNoticeE;
  return proto.v1.ClassroomNoticeE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomNoticeE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomNoticeE}
 */
proto.v1.ClassroomNoticeE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnew(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomNoticeE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomNoticeE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomNoticeE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomNoticeE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsnew();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomNoticeE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomNoticeE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 classroomNo = 2;
 * @return {number}
 */
proto.v1.ClassroomNoticeE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomNoticeE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.ClassroomNoticeE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.ClassroomNoticeE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.v1.ClassroomNoticeE.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.ClassroomNoticeE.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool isNew = 5;
 * @return {boolean}
 */
proto.v1.ClassroomNoticeE.prototype.getIsnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.v1.ClassroomNoticeE.prototype.setIsnew = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 createdAt = 6;
 * @return {number}
 */
proto.v1.ClassroomNoticeE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.v1.ClassroomNoticeE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 updatedAt = 7;
 * @return {number}
 */
proto.v1.ClassroomNoticeE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.v1.ClassroomNoticeE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomHomeworkE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomHomeworkE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomHomeworkE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomHomeworkE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: jspb.Message.getFieldWithDefault(msg, 5, ""),
    expiredate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isnew: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    userno: jspb.Message.getFieldWithDefault(msg, 8, 0),
    username: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lessonname: jspb.Message.getFieldWithDefault(msg, 10, ""),
    issubmission: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    lessonprogress: (f = msg.getLessonprogress()) && v1_base_pb.LessonProgressE.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomHomeworkE}
 */
proto.v1.ClassroomHomeworkE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomHomeworkE;
  return proto.v1.ClassroomHomeworkE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomHomeworkE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomHomeworkE}
 */
proto.v1.ClassroomHomeworkE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiredate(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnew(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLessonname(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssubmission(value);
      break;
    case 12:
      var value = new v1_base_pb.LessonProgressE;
      reader.readMessage(value,v1_base_pb.LessonProgressE.deserializeBinaryFromReader);
      msg.setLessonprogress(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomHomeworkE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomHomeworkE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomHomeworkE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomHomeworkE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExpiredate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsnew();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLessonname();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIssubmission();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getLessonprogress();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      v1_base_pb.LessonProgressE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomHomeworkE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomHomeworkE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 classroomNo = 2;
 * @return {number}
 */
proto.v1.ClassroomHomeworkE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomHomeworkE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonNo = 3;
 * @return {number}
 */
proto.v1.ClassroomHomeworkE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ClassroomHomeworkE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.v1.ClassroomHomeworkE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.ClassroomHomeworkE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.v1.ClassroomHomeworkE.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.ClassroomHomeworkE.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string expireDate = 6;
 * @return {string}
 */
proto.v1.ClassroomHomeworkE.prototype.getExpiredate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ClassroomHomeworkE.prototype.setExpiredate = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool isNew = 7;
 * @return {boolean}
 */
proto.v1.ClassroomHomeworkE.prototype.getIsnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.v1.ClassroomHomeworkE.prototype.setIsnew = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int64 userNo = 8;
 * @return {number}
 */
proto.v1.ClassroomHomeworkE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.ClassroomHomeworkE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string userName = 9;
 * @return {string}
 */
proto.v1.ClassroomHomeworkE.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.v1.ClassroomHomeworkE.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string lessonName = 10;
 * @return {string}
 */
proto.v1.ClassroomHomeworkE.prototype.getLessonname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.v1.ClassroomHomeworkE.prototype.setLessonname = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool isSubmission = 11;
 * @return {boolean}
 */
proto.v1.ClassroomHomeworkE.prototype.getIssubmission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.v1.ClassroomHomeworkE.prototype.setIssubmission = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional LessonProgressE lessonProgress = 12;
 * @return {?proto.v1.LessonProgressE}
 */
proto.v1.ClassroomHomeworkE.prototype.getLessonprogress = function() {
  return /** @type{?proto.v1.LessonProgressE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.LessonProgressE, 12));
};


/** @param {?proto.v1.LessonProgressE|undefined} value */
proto.v1.ClassroomHomeworkE.prototype.setLessonprogress = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ClassroomHomeworkE.prototype.clearLessonprogress = function() {
  this.setLessonprogress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ClassroomHomeworkE.prototype.hasLessonprogress = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 createdAt = 13;
 * @return {number}
 */
proto.v1.ClassroomHomeworkE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.v1.ClassroomHomeworkE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 updatedAt = 14;
 * @return {number}
 */
proto.v1.ClassroomHomeworkE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.v1.ClassroomHomeworkE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomStudentHomeworkE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomStudentHomeworkE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomStudentHomeworkE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    homeworkno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    file: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomStudentHomeworkE}
 */
proto.v1.ClassroomStudentHomeworkE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomStudentHomeworkE;
  return proto.v1.ClassroomStudentHomeworkE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomStudentHomeworkE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomStudentHomeworkE}
 */
proto.v1.ClassroomStudentHomeworkE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHomeworkno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomStudentHomeworkE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomStudentHomeworkE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomStudentHomeworkE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getHomeworkno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 homeworkNo = 2;
 * @return {number}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getHomeworkno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setHomeworkno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 userNo = 4;
 * @return {number}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string userName = 5;
 * @return {string}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string file = 6;
 * @return {string}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setFile = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 createdAt = 7;
 * @return {number}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 updatedAt = 8;
 * @return {number}
 */
proto.v1.ClassroomStudentHomeworkE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentHomeworkE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomStudentE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomStudentE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomStudentE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomStudentE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cattendance: jspb.Message.getFieldWithDefault(msg, 5, 0),
    shortword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    password: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lastaccesstime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    lessondashboard: (f = msg.getLessondashboard()) && proto.v1.ClassroomStudentLessonDashboardE.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomStudentE}
 */
proto.v1.ClassroomStudentE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomStudentE;
  return proto.v1.ClassroomStudentE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomStudentE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomStudentE}
 */
proto.v1.ClassroomStudentE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCattendance(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastaccesstime(value);
      break;
    case 9:
      var value = new proto.v1.ClassroomStudentLessonDashboardE;
      reader.readMessage(value,proto.v1.ClassroomStudentLessonDashboardE.deserializeBinaryFromReader);
      msg.setLessondashboard(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomStudentE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomStudentE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomStudentE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomStudentE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCattendance();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getShortword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLastaccesstime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getLessondashboard();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.v1.ClassroomStudentLessonDashboardE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomStudentE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 classroomNo = 2;
 * @return {number}
 */
proto.v1.ClassroomStudentE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.v1.ClassroomStudentE.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentE.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string userId = 4;
 * @return {string}
 */
proto.v1.ClassroomStudentE.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentE.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 cAttendance = 5;
 * @return {number}
 */
proto.v1.ClassroomStudentE.prototype.getCattendance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentE.prototype.setCattendance = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string shortWord = 6;
 * @return {string}
 */
proto.v1.ClassroomStudentE.prototype.getShortword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentE.prototype.setShortword = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Password = 7;
 * @return {string}
 */
proto.v1.ClassroomStudentE.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentE.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 lastAccessTime = 8;
 * @return {number}
 */
proto.v1.ClassroomStudentE.prototype.getLastaccesstime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentE.prototype.setLastaccesstime = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional ClassroomStudentLessonDashboardE lessonDashboard = 9;
 * @return {?proto.v1.ClassroomStudentLessonDashboardE}
 */
proto.v1.ClassroomStudentE.prototype.getLessondashboard = function() {
  return /** @type{?proto.v1.ClassroomStudentLessonDashboardE} */ (
    jspb.Message.getWrapperField(this, proto.v1.ClassroomStudentLessonDashboardE, 9));
};


/** @param {?proto.v1.ClassroomStudentLessonDashboardE|undefined} value */
proto.v1.ClassroomStudentE.prototype.setLessondashboard = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ClassroomStudentE.prototype.clearLessondashboard = function() {
  this.setLessondashboard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ClassroomStudentE.prototype.hasLessondashboard = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 createdAt = 10;
 * @return {number}
 */
proto.v1.ClassroomStudentE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 updatedAt = 11;
 * @return {number}
 */
proto.v1.ClassroomStudentE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.ClassroomStudentLessonDashboardE.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomStudentLessonDashboardE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomStudentLessonDashboardE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomStudentLessonDashboardE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lessonname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lessonprogress: (f = msg.getLessonprogress()) && v1_base_pb.LessonProgressE.toObject(includeInstance, f),
    learningtime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    status: jspb.Message.getFieldWithDefault(msg, 9, ""),
    worksList: jspb.Message.toObjectList(msg.getWorksList(),
    proto.v1.ClassroomWorkE.toObject, includeInstance),
    createdat: jspb.Message.getFieldWithDefault(msg, 11, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomStudentLessonDashboardE}
 */
proto.v1.ClassroomStudentLessonDashboardE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomStudentLessonDashboardE;
  return proto.v1.ClassroomStudentLessonDashboardE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomStudentLessonDashboardE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomStudentLessonDashboardE}
 */
proto.v1.ClassroomStudentLessonDashboardE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLessonname(value);
      break;
    case 7:
      var value = new v1_base_pb.LessonProgressE;
      reader.readMessage(value,v1_base_pb.LessonProgressE.deserializeBinaryFromReader);
      msg.setLessonprogress(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLearningtime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 10:
      var value = new proto.v1.ClassroomWorkE;
      reader.readMessage(value,proto.v1.ClassroomWorkE.deserializeBinaryFromReader);
      msg.addWorks(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomStudentLessonDashboardE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomStudentLessonDashboardE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomStudentLessonDashboardE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getLessonname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLessonprogress();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      v1_base_pb.LessonProgressE.serializeBinaryToWriter
    );
  }
  f = message.getLearningtime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWorksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.v1.ClassroomWorkE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string userName = 2;
 * @return {string}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 userNo = 3;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 classroomNo = 4;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 lessonNo = 5;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string lessonName = 6;
 * @return {string}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getLessonname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setLessonname = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional LessonProgressE lessonProgress = 7;
 * @return {?proto.v1.LessonProgressE}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getLessonprogress = function() {
  return /** @type{?proto.v1.LessonProgressE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.LessonProgressE, 7));
};


/** @param {?proto.v1.LessonProgressE|undefined} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setLessonprogress = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.clearLessonprogress = function() {
  this.setLessonprogress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.hasLessonprogress = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 learningTime = 8;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getLearningtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setLearningtime = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated ClassroomWorkE works = 10;
 * @return {!Array<!proto.v1.ClassroomWorkE>}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getWorksList = function() {
  return /** @type{!Array<!proto.v1.ClassroomWorkE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.ClassroomWorkE, 10));
};


/** @param {!Array<!proto.v1.ClassroomWorkE>} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setWorksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.v1.ClassroomWorkE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.ClassroomWorkE}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.addWorks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.v1.ClassroomWorkE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.clearWorksList = function() {
  this.setWorksList([]);
};


/**
 * optional int64 createdAt = 11;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 updatedAt = 12;
 * @return {number}
 */
proto.v1.ClassroomStudentLessonDashboardE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.v1.ClassroomStudentLessonDashboardE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomLoginE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomLoginE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomLoginE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomLoginE.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    refreshtoken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classroomno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    expiretime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isupdatepassword: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    userid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomLoginE}
 */
proto.v1.ClassroomLoginE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomLoginE;
  return proto.v1.ClassroomLoginE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomLoginE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomLoginE}
 */
proto.v1.ClassroomLoginE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshtoken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiretime(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsupdatepassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomLoginE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomLoginE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomLoginE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomLoginE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRefreshtoken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getExpiretime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIsupdatepassword();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.v1.ClassroomLoginE.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.ClassroomLoginE.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string refreshToken = 2;
 * @return {string}
 */
proto.v1.ClassroomLoginE.prototype.getRefreshtoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.ClassroomLoginE.prototype.setRefreshtoken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 classroomNo = 3;
 * @return {number}
 */
proto.v1.ClassroomLoginE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ClassroomLoginE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 expireTime = 4;
 * @return {number}
 */
proto.v1.ClassroomLoginE.prototype.getExpiretime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.ClassroomLoginE.prototype.setExpiretime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool isUpdatePassword = 5;
 * @return {boolean}
 */
proto.v1.ClassroomLoginE.prototype.getIsupdatepassword = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.v1.ClassroomLoginE.prototype.setIsupdatepassword = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string userId = 6;
 * @return {string}
 */
proto.v1.ClassroomLoginE.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ClassroomLoginE.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.v1.ClassroomLoginE.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.ClassroomLoginE.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomLessonE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomLessonE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomLessonE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomLessonE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    starttype: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isstart: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    createdat: jspb.Message.getFieldWithDefault(msg, 8, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomLessonE}
 */
proto.v1.ClassroomLessonE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomLessonE;
  return proto.v1.ClassroomLessonE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomLessonE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomLessonE}
 */
proto.v1.ClassroomLessonE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttype(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsstart(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomLessonE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomLessonE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomLessonE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomLessonE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStarttype();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsstart();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomLessonE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomLessonE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 classroomNo = 2;
 * @return {number}
 */
proto.v1.ClassroomLessonE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomLessonE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonNo = 3;
 * @return {number}
 */
proto.v1.ClassroomLessonE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ClassroomLessonE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 startTime = 4;
 * @return {number}
 */
proto.v1.ClassroomLessonE.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.ClassroomLessonE.prototype.setStarttime = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string startType = 5;
 * @return {string}
 */
proto.v1.ClassroomLessonE.prototype.getStarttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.ClassroomLessonE.prototype.setStarttype = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool isStart = 6;
 * @return {boolean}
 */
proto.v1.ClassroomLessonE.prototype.getIsstart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.v1.ClassroomLessonE.prototype.setIsstart = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 createdAt = 8;
 * @return {number}
 */
proto.v1.ClassroomLessonE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.ClassroomLessonE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 updatedAt = 9;
 * @return {number}
 */
proto.v1.ClassroomLessonE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.v1.ClassroomLessonE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ClassroomWorkE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ClassroomWorkE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ClassroomWorkE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomWorkE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    classroomno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    lessoncontentno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userno: jspb.Message.getFieldWithDefault(msg, 6, 0),
    code: jspb.Message.getFieldWithDefault(msg, 7, ""),
    codingtemplate: (f = msg.getCodingtemplate()) && v1_lesson_pb.LessonPlanContentTemplateCodingE.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 9, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ClassroomWorkE}
 */
proto.v1.ClassroomWorkE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ClassroomWorkE;
  return proto.v1.ClassroomWorkE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ClassroomWorkE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ClassroomWorkE}
 */
proto.v1.ClassroomWorkE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClassroomno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessoncontentno(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 8:
      var value = new v1_lesson_pb.LessonPlanContentTemplateCodingE;
      reader.readMessage(value,v1_lesson_pb.LessonPlanContentTemplateCodingE.deserializeBinaryFromReader);
      msg.setCodingtemplate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ClassroomWorkE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ClassroomWorkE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ClassroomWorkE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ClassroomWorkE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClassroomno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getLessoncontentno();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCodingtemplate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      v1_lesson_pb.LessonPlanContentTemplateCodingE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 classroomNo = 2;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getClassroomno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setClassroomno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonNo = 3;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 lessonContentNo = 4;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getLessoncontentno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setLessoncontentno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string userName = 5;
 * @return {string}
 */
proto.v1.ClassroomWorkE.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.ClassroomWorkE.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 userNo = 6;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string code = 7;
 * @return {string}
 */
proto.v1.ClassroomWorkE.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.ClassroomWorkE.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional LessonPlanContentTemplateCodingE codingTemplate = 8;
 * @return {?proto.v1.LessonPlanContentTemplateCodingE}
 */
proto.v1.ClassroomWorkE.prototype.getCodingtemplate = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateCodingE} */ (
    jspb.Message.getWrapperField(this, v1_lesson_pb.LessonPlanContentTemplateCodingE, 8));
};


/** @param {?proto.v1.LessonPlanContentTemplateCodingE|undefined} value */
proto.v1.ClassroomWorkE.prototype.setCodingtemplate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ClassroomWorkE.prototype.clearCodingtemplate = function() {
  this.setCodingtemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ClassroomWorkE.prototype.hasCodingtemplate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 createdAt = 9;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 updatedAt = 10;
 * @return {number}
 */
proto.v1.ClassroomWorkE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.v1.ClassroomWorkE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


goog.object.extend(exports, proto.v1);
