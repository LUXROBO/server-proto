/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var v1_base_pb = require('../v1/base_pb.js');
goog.object.extend(proto, v1_base_pb);
var v1_enum_pb = require('../v1/enum_pb.js');
goog.object.extend(proto, v1_enum_pb);
var v1_lesson_pb = require('../v1/lesson_pb.js');
goog.object.extend(proto, v1_lesson_pb);
goog.exportSymbol('proto.v1.ProjectE', null, global);
goog.exportSymbol('proto.v1.ProjectWorkE', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ProjectE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ProjectE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ProjectE.displayName = 'proto.v1.ProjectE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.ProjectWorkE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.ProjectWorkE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.ProjectWorkE.displayName = 'proto.v1.ProjectWorkE';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ProjectE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ProjectE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ProjectE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ProjectE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codetype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    jsondata: jspb.Message.getFieldWithDefault(msg, 6, ""),
    thumb: (f = msg.getThumb()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 8, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ProjectE}
 */
proto.v1.ProjectE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ProjectE;
  return proto.v1.ProjectE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ProjectE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ProjectE}
 */
proto.v1.ProjectE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {!proto.v1.ProjectCodeType} */ (reader.readEnum());
      msg.setCodetype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsondata(value);
      break;
    case 7:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setThumb(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ProjectE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ProjectE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ProjectE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ProjectE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUserkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodetype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getJsondata();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getThumb();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ProjectE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ProjectE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string userKey = 2;
 * @return {string}
 */
proto.v1.ProjectE.prototype.getUserkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.ProjectE.prototype.setUserkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uuid = 3;
 * @return {string}
 */
proto.v1.ProjectE.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.ProjectE.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.v1.ProjectE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.ProjectE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ProjectCodeType codeType = 5;
 * @return {!proto.v1.ProjectCodeType}
 */
proto.v1.ProjectE.prototype.getCodetype = function() {
  return /** @type {!proto.v1.ProjectCodeType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.v1.ProjectCodeType} value */
proto.v1.ProjectE.prototype.setCodetype = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string jsonData = 6;
 * @return {string}
 */
proto.v1.ProjectE.prototype.getJsondata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ProjectE.prototype.setJsondata = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ImageInfoE thumb = 7;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.ProjectE.prototype.getThumb = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 7));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.ProjectE.prototype.setThumb = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ProjectE.prototype.clearThumb = function() {
  this.setThumb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ProjectE.prototype.hasThumb = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 createdAt = 8;
 * @return {number}
 */
proto.v1.ProjectE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.ProjectE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 updatedAt = 9;
 * @return {number}
 */
proto.v1.ProjectE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.v1.ProjectE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.ProjectWorkE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.ProjectWorkE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.ProjectWorkE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ProjectWorkE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessoncontentno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 6, ""),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    codetype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    jsondata: jspb.Message.getFieldWithDefault(msg, 9, ""),
    codingtemplate: (f = msg.getCodingtemplate()) && v1_lesson_pb.LessonPlanContentTemplateCodingE.toObject(includeInstance, f),
    thumb: (f = msg.getThumb()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 12, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.ProjectWorkE}
 */
proto.v1.ProjectWorkE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.ProjectWorkE;
  return proto.v1.ProjectWorkE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.ProjectWorkE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.ProjectWorkE}
 */
proto.v1.ProjectWorkE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessoncontentno(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {!proto.v1.ProjectCodeType} */ (reader.readEnum());
      msg.setCodetype(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsondata(value);
      break;
    case 10:
      var value = new v1_lesson_pb.LessonPlanContentTemplateCodingE;
      reader.readMessage(value,v1_lesson_pb.LessonPlanContentTemplateCodingE.deserializeBinaryFromReader);
      msg.setCodingtemplate(value);
      break;
    case 11:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setThumb(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.ProjectWorkE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.ProjectWorkE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.ProjectWorkE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.ProjectWorkE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessoncontentno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCodetype();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getJsondata();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCodingtemplate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      v1_lesson_pb.LessonPlanContentTemplateCodingE.serializeBinaryToWriter
    );
  }
  f = message.getThumb();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.ProjectWorkE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.ProjectWorkE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 lessonNo = 2;
 * @return {number}
 */
proto.v1.ProjectWorkE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.ProjectWorkE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonContentNo = 3;
 * @return {number}
 */
proto.v1.ProjectWorkE.prototype.getLessoncontentno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.ProjectWorkE.prototype.setLessoncontentno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 userNo = 4;
 * @return {number}
 */
proto.v1.ProjectWorkE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.ProjectWorkE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string userName = 5;
 * @return {string}
 */
proto.v1.ProjectWorkE.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.ProjectWorkE.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string provider = 6;
 * @return {string}
 */
proto.v1.ProjectWorkE.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.ProjectWorkE.prototype.setProvider = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.v1.ProjectWorkE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.ProjectWorkE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ProjectCodeType codeType = 8;
 * @return {!proto.v1.ProjectCodeType}
 */
proto.v1.ProjectWorkE.prototype.getCodetype = function() {
  return /** @type {!proto.v1.ProjectCodeType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.v1.ProjectCodeType} value */
proto.v1.ProjectWorkE.prototype.setCodetype = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string jsonData = 9;
 * @return {string}
 */
proto.v1.ProjectWorkE.prototype.getJsondata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.v1.ProjectWorkE.prototype.setJsondata = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional LessonPlanContentTemplateCodingE codingTemplate = 10;
 * @return {?proto.v1.LessonPlanContentTemplateCodingE}
 */
proto.v1.ProjectWorkE.prototype.getCodingtemplate = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateCodingE} */ (
    jspb.Message.getWrapperField(this, v1_lesson_pb.LessonPlanContentTemplateCodingE, 10));
};


/** @param {?proto.v1.LessonPlanContentTemplateCodingE|undefined} value */
proto.v1.ProjectWorkE.prototype.setCodingtemplate = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ProjectWorkE.prototype.clearCodingtemplate = function() {
  this.setCodingtemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ProjectWorkE.prototype.hasCodingtemplate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ImageInfoE thumb = 11;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.ProjectWorkE.prototype.getThumb = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 11));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.ProjectWorkE.prototype.setThumb = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.ProjectWorkE.prototype.clearThumb = function() {
  this.setThumb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.ProjectWorkE.prototype.hasThumb = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 createdAt = 12;
 * @return {number}
 */
proto.v1.ProjectWorkE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.v1.ProjectWorkE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 updatedAt = 13;
 * @return {number}
 */
proto.v1.ProjectWorkE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.v1.ProjectWorkE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


goog.object.extend(exports, proto.v1);
