/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var v1_base_pb = require('../v1/base_pb.js');
goog.object.extend(proto, v1_base_pb);
var v1_enum_pb = require('../v1/enum_pb.js');
goog.object.extend(proto, v1_enum_pb);
var v1_video_pb = require('../v1/video_pb.js');
goog.object.extend(proto, v1_video_pb);
goog.exportSymbol('proto.v1.LessonBookE', null, global);
goog.exportSymbol('proto.v1.LessonCurriculumE', null, global);
goog.exportSymbol('proto.v1.LessonE', null, global);
goog.exportSymbol('proto.v1.LessonGroupE', null, global);
goog.exportSymbol('proto.v1.LessonHardwareE', null, global);
goog.exportSymbol('proto.v1.LessonImageE', null, global);
goog.exportSymbol('proto.v1.LessonLanguageE', null, global);
goog.exportSymbol('proto.v1.LessonLevelE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentSubscribeE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentTemplateBaseE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentTemplateCodingE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentTemplateE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentTemplateImageE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentTemplateTextE', null, global);
goog.exportSymbol('proto.v1.LessonPlanContentTemplateVideoE', null, global);
goog.exportSymbol('proto.v1.LessonPlanE', null, global);
goog.exportSymbol('proto.v1.LessonPlanLayoutE', null, global);
goog.exportSymbol('proto.v1.LessonSummaryE', null, global);
goog.exportSymbol('proto.v1.LessonVideoE', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonE.displayName = 'proto.v1.LessonE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonLevelE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonLevelE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonLevelE.displayName = 'proto.v1.LessonLevelE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonGroupE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonGroupE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonGroupE.displayName = 'proto.v1.LessonGroupE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonBookE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonBookE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonBookE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonBookE.displayName = 'proto.v1.LessonBookE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonCurriculumE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonCurriculumE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonCurriculumE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonCurriculumE.displayName = 'proto.v1.LessonCurriculumE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonPlanE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonPlanE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanE.displayName = 'proto.v1.LessonPlanE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanLayoutE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanLayoutE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanLayoutE.displayName = 'proto.v1.LessonPlanLayoutE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonPlanContentE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonPlanContentE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentE.displayName = 'proto.v1.LessonPlanContentE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentSubscribeE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanContentSubscribeE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentSubscribeE.displayName = 'proto.v1.LessonPlanContentSubscribeE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentTemplateE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanContentTemplateE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentTemplateE.displayName = 'proto.v1.LessonPlanContentTemplateE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentTemplateBaseE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanContentTemplateBaseE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentTemplateBaseE.displayName = 'proto.v1.LessonPlanContentTemplateBaseE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentTemplateTextE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanContentTemplateTextE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentTemplateTextE.displayName = 'proto.v1.LessonPlanContentTemplateTextE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentTemplateImageE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanContentTemplateImageE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentTemplateImageE.displayName = 'proto.v1.LessonPlanContentTemplateImageE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentTemplateVideoE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonPlanContentTemplateVideoE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentTemplateVideoE.displayName = 'proto.v1.LessonPlanContentTemplateVideoE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonPlanContentTemplateCodingE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonPlanContentTemplateCodingE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonPlanContentTemplateCodingE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonPlanContentTemplateCodingE.displayName = 'proto.v1.LessonPlanContentTemplateCodingE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonImageE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonImageE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonImageE.displayName = 'proto.v1.LessonImageE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonVideoE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonVideoE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonVideoE.displayName = 'proto.v1.LessonVideoE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonSummaryE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.LessonSummaryE.repeatedFields_, null);
};
goog.inherits(proto.v1.LessonSummaryE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonSummaryE.displayName = 'proto.v1.LessonSummaryE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonHardwareE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonHardwareE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonHardwareE.displayName = 'proto.v1.LessonHardwareE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.LessonLanguageE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.LessonLanguageE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.LessonLanguageE.displayName = 'proto.v1.LessonLanguageE';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonE.repeatedFields_ = [11,22,23,25];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    describe: jspb.Message.getFieldWithDefault(msg, 5, ""),
    color: jspb.Message.getFieldWithDefault(msg, 6, ""),
    textcolor: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bgimg: (f = msg.getBgimg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    videourl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    videotype: jspb.Message.getFieldWithDefault(msg, 10, 0),
    mainimgsList: jspb.Message.toObjectList(msg.getMainimgsList(),
    v1_base_pb.ImageInfoE.toObject, includeInstance),
    classtime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    useractivity: (f = msg.getUseractivity()) && v1_base_pb.UserActivityE.toObject(includeInstance, f),
    leveltype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    grouptype: jspb.Message.getFieldWithDefault(msg, 15, ""),
    locktype: jspb.Message.getFieldWithDefault(msg, 16, ""),
    creationtype: jspb.Message.getFieldWithDefault(msg, 17, ""),
    servicetype: jspb.Message.getFieldWithDefault(msg, 18, ""),
    elementjson: jspb.Message.getFieldWithDefault(msg, 19, ""),
    summary: (f = msg.getSummary()) && proto.v1.LessonSummaryE.toObject(includeInstance, f),
    answercode: jspb.Message.getFieldWithDefault(msg, 21, ""),
    lessonplansList: jspb.Message.toObjectList(msg.getLessonplansList(),
    proto.v1.LessonPlanE.toObject, includeInstance),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
    opentype: jspb.Message.getFieldWithDefault(msg, 24, ""),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    v1_base_pb.FileInfoE.toObject, includeInstance),
    userno: jspb.Message.getFieldWithDefault(msg, 26, 0),
    ownerno: jspb.Message.getFieldWithDefault(msg, 27, 0),
    ownername: jspb.Message.getFieldWithDefault(msg, 28, ""),
    progressrate: jspb.Message.getFieldWithDefault(msg, 29, 0),
    progress: (f = msg.getProgress()) && v1_base_pb.LessonProgressE.toObject(includeInstance, f),
    isedit: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
    idx: jspb.Message.getFieldWithDefault(msg, 32, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 33, 0),
    starttype: jspb.Message.getFieldWithDefault(msg, 34, ""),
    isstart: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    epuburl: jspb.Message.getFieldWithDefault(msg, 36, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 37, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 38, 0),
    deletedat: jspb.Message.getFieldWithDefault(msg, 39, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonE}
 */
proto.v1.LessonE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonE;
  return proto.v1.LessonE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonE}
 */
proto.v1.LessonE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescribe(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextcolor(value);
      break;
    case 8:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setBgimg(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideourl(value);
      break;
    case 10:
      var value = /** @type {!proto.v1.VideoType} */ (reader.readEnum());
      msg.setVideotype(value);
      break;
    case 11:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.addMainimgs(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClasstime(value);
      break;
    case 13:
      var value = new v1_base_pb.UserActivityE;
      reader.readMessage(value,v1_base_pb.UserActivityE.deserializeBinaryFromReader);
      msg.setUseractivity(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeveltype(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrouptype(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocktype(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreationtype(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicetype(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementjson(value);
      break;
    case 20:
      var value = new proto.v1.LessonSummaryE;
      reader.readMessage(value,proto.v1.LessonSummaryE.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswercode(value);
      break;
    case 22:
      var value = new proto.v1.LessonPlanE;
      reader.readMessage(value,proto.v1.LessonPlanE.deserializeBinaryFromReader);
      msg.addLessonplans(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpentype(value);
      break;
    case 25:
      var value = new v1_base_pb.FileInfoE;
      reader.readMessage(value,v1_base_pb.FileInfoE.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOwnerno(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnername(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgressrate(value);
      break;
    case 30:
      var value = new v1_base_pb.LessonProgressE;
      reader.readMessage(value,v1_base_pb.LessonProgressE.deserializeBinaryFromReader);
      msg.setProgress(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsedit(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttime(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttype(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsstart(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpuburl(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescribe();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTextcolor();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBgimg();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getVideourl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getVideotype();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getMainimgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getClasstime();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getUseractivity();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      v1_base_pb.UserActivityE.serializeBinaryToWriter
    );
  }
  f = message.getLeveltype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getGrouptype();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLocktype();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCreationtype();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getServicetype();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getElementjson();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.v1.LessonSummaryE.serializeBinaryToWriter
    );
  }
  f = message.getAnswercode();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLessonplansList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.v1.LessonPlanE.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      23,
      f
    );
  }
  f = message.getOpentype();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      25,
      f,
      v1_base_pb.FileInfoE.serializeBinaryToWriter
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getOwnerno();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getOwnername();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getProgressrate();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getProgress();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      v1_base_pb.LessonProgressE.serializeBinaryToWriter
    );
  }
  f = message.getIsedit();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getStarttype();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getIsstart();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getEpuburl();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      37,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      38,
      f
    );
  }
  f = message.getDeletedat();
  if (f !== 0) {
    writer.writeInt64(
      39,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 lessonNo = 2;
 * @return {number}
 */
proto.v1.LessonE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.LessonE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string subTitle = 4;
 * @return {string}
 */
proto.v1.LessonE.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setSubtitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string describe = 5;
 * @return {string}
 */
proto.v1.LessonE.prototype.getDescribe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setDescribe = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string color = 6;
 * @return {string}
 */
proto.v1.LessonE.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setColor = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string textColor = 7;
 * @return {string}
 */
proto.v1.LessonE.prototype.getTextcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setTextcolor = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ImageInfoE bgImg = 8;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonE.prototype.getBgimg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 8));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonE.prototype.setBgimg = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonE.prototype.clearBgimg = function() {
  this.setBgimg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonE.prototype.hasBgimg = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string videoUrl = 9;
 * @return {string}
 */
proto.v1.LessonE.prototype.getVideourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setVideourl = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional VideoType videoType = 10;
 * @return {!proto.v1.VideoType}
 */
proto.v1.LessonE.prototype.getVideotype = function() {
  return /** @type {!proto.v1.VideoType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.v1.VideoType} value */
proto.v1.LessonE.prototype.setVideotype = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * repeated ImageInfoE mainImgs = 11;
 * @return {!Array<!proto.v1.ImageInfoE>}
 */
proto.v1.LessonE.prototype.getMainimgsList = function() {
  return /** @type{!Array<!proto.v1.ImageInfoE>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_base_pb.ImageInfoE, 11));
};


/** @param {!Array<!proto.v1.ImageInfoE>} value */
proto.v1.LessonE.prototype.setMainimgsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.v1.ImageInfoE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.ImageInfoE}
 */
proto.v1.LessonE.prototype.addMainimgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.v1.ImageInfoE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonE.prototype.clearMainimgsList = function() {
  this.setMainimgsList([]);
};


/**
 * optional int32 classTime = 12;
 * @return {number}
 */
proto.v1.LessonE.prototype.getClasstime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setClasstime = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional UserActivityE userActivity = 13;
 * @return {?proto.v1.UserActivityE}
 */
proto.v1.LessonE.prototype.getUseractivity = function() {
  return /** @type{?proto.v1.UserActivityE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.UserActivityE, 13));
};


/** @param {?proto.v1.UserActivityE|undefined} value */
proto.v1.LessonE.prototype.setUseractivity = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonE.prototype.clearUseractivity = function() {
  this.setUseractivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonE.prototype.hasUseractivity = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string levelType = 14;
 * @return {string}
 */
proto.v1.LessonE.prototype.getLeveltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setLeveltype = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string groupType = 15;
 * @return {string}
 */
proto.v1.LessonE.prototype.getGrouptype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setGrouptype = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string lockType = 16;
 * @return {string}
 */
proto.v1.LessonE.prototype.getLocktype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setLocktype = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string creationType = 17;
 * @return {string}
 */
proto.v1.LessonE.prototype.getCreationtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setCreationtype = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string serviceType = 18;
 * @return {string}
 */
proto.v1.LessonE.prototype.getServicetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setServicetype = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string elementJson = 19;
 * @return {string}
 */
proto.v1.LessonE.prototype.getElementjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setElementjson = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional LessonSummaryE summary = 20;
 * @return {?proto.v1.LessonSummaryE}
 */
proto.v1.LessonE.prototype.getSummary = function() {
  return /** @type{?proto.v1.LessonSummaryE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonSummaryE, 20));
};


/** @param {?proto.v1.LessonSummaryE|undefined} value */
proto.v1.LessonE.prototype.setSummary = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonE.prototype.clearSummary = function() {
  this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonE.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string AnswerCode = 21;
 * @return {string}
 */
proto.v1.LessonE.prototype.getAnswercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setAnswercode = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * repeated LessonPlanE lessonPlans = 22;
 * @return {!Array<!proto.v1.LessonPlanE>}
 */
proto.v1.LessonE.prototype.getLessonplansList = function() {
  return /** @type{!Array<!proto.v1.LessonPlanE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonPlanE, 22));
};


/** @param {!Array<!proto.v1.LessonPlanE>} value */
proto.v1.LessonE.prototype.setLessonplansList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.v1.LessonPlanE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonPlanE}
 */
proto.v1.LessonE.prototype.addLessonplans = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.v1.LessonPlanE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonE.prototype.clearLessonplansList = function() {
  this.setLessonplansList([]);
};


/**
 * repeated string tags = 23;
 * @return {!Array<string>}
 */
proto.v1.LessonE.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 23));
};


/** @param {!Array<string>} value */
proto.v1.LessonE.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonE.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonE.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional string openType = 24;
 * @return {string}
 */
proto.v1.LessonE.prototype.getOpentype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setOpentype = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * repeated FileInfoE files = 25;
 * @return {!Array<!proto.v1.FileInfoE>}
 */
proto.v1.LessonE.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.v1.FileInfoE>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_base_pb.FileInfoE, 25));
};


/** @param {!Array<!proto.v1.FileInfoE>} value */
proto.v1.LessonE.prototype.setFilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 25, value);
};


/**
 * @param {!proto.v1.FileInfoE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.FileInfoE}
 */
proto.v1.LessonE.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 25, opt_value, proto.v1.FileInfoE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonE.prototype.clearFilesList = function() {
  this.setFilesList([]);
};


/**
 * optional int64 userNo = 26;
 * @return {number}
 */
proto.v1.LessonE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 ownerNo = 27;
 * @return {number}
 */
proto.v1.LessonE.prototype.getOwnerno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setOwnerno = function(value) {
  jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional string ownerName = 28;
 * @return {string}
 */
proto.v1.LessonE.prototype.getOwnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setOwnername = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int32 progressRate = 29;
 * @return {number}
 */
proto.v1.LessonE.prototype.getProgressrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setProgressrate = function(value) {
  jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional LessonProgressE progress = 30;
 * @return {?proto.v1.LessonProgressE}
 */
proto.v1.LessonE.prototype.getProgress = function() {
  return /** @type{?proto.v1.LessonProgressE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.LessonProgressE, 30));
};


/** @param {?proto.v1.LessonProgressE|undefined} value */
proto.v1.LessonE.prototype.setProgress = function(value) {
  jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonE.prototype.clearProgress = function() {
  this.setProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonE.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional bool isEdit = 31;
 * @return {boolean}
 */
proto.v1.LessonE.prototype.getIsedit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/** @param {boolean} value */
proto.v1.LessonE.prototype.setIsedit = function(value) {
  jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional int32 idx = 32;
 * @return {number}
 */
proto.v1.LessonE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int64 startTime = 33;
 * @return {number}
 */
proto.v1.LessonE.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setStarttime = function(value) {
  jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional string startType = 34;
 * @return {string}
 */
proto.v1.LessonE.prototype.getStarttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setStarttype = function(value) {
  jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional bool isStart = 35;
 * @return {boolean}
 */
proto.v1.LessonE.prototype.getIsstart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/** @param {boolean} value */
proto.v1.LessonE.prototype.setIsstart = function(value) {
  jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * optional string epubUrl = 36;
 * @return {string}
 */
proto.v1.LessonE.prototype.getEpuburl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/** @param {string} value */
proto.v1.LessonE.prototype.setEpuburl = function(value) {
  jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional int64 createdAt = 37;
 * @return {number}
 */
proto.v1.LessonE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 37, value);
};


/**
 * optional int64 updatedAt = 38;
 * @return {number}
 */
proto.v1.LessonE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * optional int64 deletedAt = 39;
 * @return {number}
 */
proto.v1.LessonE.prototype.getDeletedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/** @param {number} value */
proto.v1.LessonE.prototype.setDeletedat = function(value) {
  jspb.Message.setProto3IntField(this, 39, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonLevelE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonLevelE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonLevelE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonLevelE.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonLevelE}
 */
proto.v1.LessonLevelE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonLevelE;
  return proto.v1.LessonLevelE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonLevelE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonLevelE}
 */
proto.v1.LessonLevelE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonLevelE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonLevelE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonLevelE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonLevelE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.v1.LessonLevelE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonLevelE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.v1.LessonLevelE.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonLevelE.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonGroupE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonGroupE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonGroupE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonGroupE.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonGroupE}
 */
proto.v1.LessonGroupE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonGroupE;
  return proto.v1.LessonGroupE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonGroupE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonGroupE}
 */
proto.v1.LessonGroupE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonGroupE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonGroupE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonGroupE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonGroupE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.v1.LessonGroupE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonGroupE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.v1.LessonGroupE.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonGroupE.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonBookE.repeatedFields_ = [10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonBookE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonBookE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonBookE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonBookE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bookno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    describe: jspb.Message.getFieldWithDefault(msg, 5, ""),
    color: jspb.Message.getFieldWithDefault(msg, 6, ""),
    textcolor: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bgimg: (f = msg.getBgimg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    servicetype: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mainimgsList: jspb.Message.toObjectList(msg.getMainimgsList(),
    v1_base_pb.ImageInfoE.toObject, includeInstance),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    lessoncurriculumsList: jspb.Message.toObjectList(msg.getLessoncurriculumsList(),
    proto.v1.LessonCurriculumE.toObject, includeInstance),
    idx: jspb.Message.getFieldWithDefault(msg, 13, 0),
    createdat: jspb.Message.getFieldWithDefault(msg, 14, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonBookE}
 */
proto.v1.LessonBookE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonBookE;
  return proto.v1.LessonBookE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonBookE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonBookE}
 */
proto.v1.LessonBookE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBookno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescribe(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextcolor(value);
      break;
    case 8:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setBgimg(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicetype(value);
      break;
    case 10:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.addMainimgs(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 12:
      var value = new proto.v1.LessonCurriculumE;
      reader.readMessage(value,proto.v1.LessonCurriculumE.deserializeBinaryFromReader);
      msg.addLessoncurriculums(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonBookE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonBookE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonBookE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonBookE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBookno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescribe();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTextcolor();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBgimg();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getServicetype();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMainimgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getLessoncurriculumsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.v1.LessonCurriculumE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonBookE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonBookE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 bookNo = 2;
 * @return {number}
 */
proto.v1.LessonBookE.prototype.getBookno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonBookE.prototype.setBookno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.LessonBookE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonBookE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string subTitle = 4;
 * @return {string}
 */
proto.v1.LessonBookE.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonBookE.prototype.setSubtitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string describe = 5;
 * @return {string}
 */
proto.v1.LessonBookE.prototype.getDescribe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.LessonBookE.prototype.setDescribe = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string color = 6;
 * @return {string}
 */
proto.v1.LessonBookE.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.LessonBookE.prototype.setColor = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string textColor = 7;
 * @return {string}
 */
proto.v1.LessonBookE.prototype.getTextcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.LessonBookE.prototype.setTextcolor = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ImageInfoE bgImg = 8;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonBookE.prototype.getBgimg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 8));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonBookE.prototype.setBgimg = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonBookE.prototype.clearBgimg = function() {
  this.setBgimg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonBookE.prototype.hasBgimg = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string serviceType = 9;
 * @return {string}
 */
proto.v1.LessonBookE.prototype.getServicetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.v1.LessonBookE.prototype.setServicetype = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated ImageInfoE mainImgs = 10;
 * @return {!Array<!proto.v1.ImageInfoE>}
 */
proto.v1.LessonBookE.prototype.getMainimgsList = function() {
  return /** @type{!Array<!proto.v1.ImageInfoE>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_base_pb.ImageInfoE, 10));
};


/** @param {!Array<!proto.v1.ImageInfoE>} value */
proto.v1.LessonBookE.prototype.setMainimgsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.v1.ImageInfoE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.ImageInfoE}
 */
proto.v1.LessonBookE.prototype.addMainimgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.v1.ImageInfoE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonBookE.prototype.clearMainimgsList = function() {
  this.setMainimgsList([]);
};


/**
 * repeated string tags = 11;
 * @return {!Array<string>}
 */
proto.v1.LessonBookE.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.v1.LessonBookE.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonBookE.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonBookE.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * repeated LessonCurriculumE lessonCurriculums = 12;
 * @return {!Array<!proto.v1.LessonCurriculumE>}
 */
proto.v1.LessonBookE.prototype.getLessoncurriculumsList = function() {
  return /** @type{!Array<!proto.v1.LessonCurriculumE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonCurriculumE, 12));
};


/** @param {!Array<!proto.v1.LessonCurriculumE>} value */
proto.v1.LessonBookE.prototype.setLessoncurriculumsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.v1.LessonCurriculumE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonCurriculumE}
 */
proto.v1.LessonBookE.prototype.addLessoncurriculums = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.v1.LessonCurriculumE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonBookE.prototype.clearLessoncurriculumsList = function() {
  this.setLessoncurriculumsList([]);
};


/**
 * optional int32 idx = 13;
 * @return {number}
 */
proto.v1.LessonBookE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.v1.LessonBookE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 createdAt = 14;
 * @return {number}
 */
proto.v1.LessonBookE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.v1.LessonBookE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 updatedAt = 15;
 * @return {number}
 */
proto.v1.LessonBookE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.v1.LessonBookE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonCurriculumE.repeatedFields_ = [13,15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonCurriculumE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonCurriculumE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonCurriculumE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonCurriculumE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    curriculumno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    labelcolor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 6, ""),
    describe: jspb.Message.getFieldWithDefault(msg, 7, ""),
    color: jspb.Message.getFieldWithDefault(msg, 8, ""),
    textcolor: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bgimg: (f = msg.getBgimg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    servicetype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    viewtype: jspb.Message.getFieldWithDefault(msg, 12, ""),
    mainimgsList: jspb.Message.toObjectList(msg.getMainimgsList(),
    v1_base_pb.ImageInfoE.toObject, includeInstance),
    useractivity: (f = msg.getUseractivity()) && v1_base_pb.UserActivityE.toObject(includeInstance, f),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    lessonsList: jspb.Message.toObjectList(msg.getLessonsList(),
    proto.v1.LessonE.toObject, includeInstance),
    userno: jspb.Message.getFieldWithDefault(msg, 17, 0),
    idx: jspb.Message.getFieldWithDefault(msg, 18, 0),
    opentype: jspb.Message.getFieldWithDefault(msg, 19, ""),
    leveltype: jspb.Message.getFieldWithDefault(msg, 20, ""),
    grouptype: jspb.Message.getFieldWithDefault(msg, 21, ""),
    ownerno: jspb.Message.getFieldWithDefault(msg, 22, 0),
    ownername: jspb.Message.getFieldWithDefault(msg, 23, ""),
    elementjson: jspb.Message.getFieldWithDefault(msg, 24, ""),
    summary: (f = msg.getSummary()) && proto.v1.LessonSummaryE.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 26, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 27, 0),
    deletedat: jspb.Message.getFieldWithDefault(msg, 28, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonCurriculumE}
 */
proto.v1.LessonCurriculumE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonCurriculumE;
  return proto.v1.LessonCurriculumE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonCurriculumE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonCurriculumE}
 */
proto.v1.LessonCurriculumE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurriculumno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelcolor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescribe(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextcolor(value);
      break;
    case 10:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setBgimg(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicetype(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewtype(value);
      break;
    case 13:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.addMainimgs(value);
      break;
    case 14:
      var value = new v1_base_pb.UserActivityE;
      reader.readMessage(value,v1_base_pb.UserActivityE.deserializeBinaryFromReader);
      msg.setUseractivity(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 16:
      var value = new proto.v1.LessonE;
      reader.readMessage(value,proto.v1.LessonE.deserializeBinaryFromReader);
      msg.addLessons(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserno(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpentype(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeveltype(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrouptype(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOwnerno(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnername(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementjson(value);
      break;
    case 25:
      var value = new proto.v1.LessonSummaryE;
      reader.readMessage(value,proto.v1.LessonSummaryE.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonCurriculumE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonCurriculumE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonCurriculumE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonCurriculumE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCurriculumno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLabelcolor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescribe();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTextcolor();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBgimg();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getServicetype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getViewtype();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMainimgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getUseractivity();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      v1_base_pb.UserActivityE.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getLessonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.v1.LessonE.serializeBinaryToWriter
    );
  }
  f = message.getUserno();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getOpentype();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getLeveltype();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getGrouptype();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getOwnerno();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getOwnername();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getElementjson();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.v1.LessonSummaryE.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getDeletedat();
  if (f !== 0) {
    writer.writeInt64(
      28,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 curriculumNo = 2;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getCurriculumno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setCurriculumno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string labelColor = 5;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getLabelcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setLabelcolor = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string subTitle = 6;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setSubtitle = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string describe = 7;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getDescribe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setDescribe = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string color = 8;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setColor = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string textColor = 9;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getTextcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setTextcolor = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional ImageInfoE bgImg = 10;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonCurriculumE.prototype.getBgimg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 10));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonCurriculumE.prototype.setBgimg = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonCurriculumE.prototype.clearBgimg = function() {
  this.setBgimg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonCurriculumE.prototype.hasBgimg = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string serviceType = 11;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getServicetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setServicetype = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string viewType = 12;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getViewtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setViewtype = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated ImageInfoE mainImgs = 13;
 * @return {!Array<!proto.v1.ImageInfoE>}
 */
proto.v1.LessonCurriculumE.prototype.getMainimgsList = function() {
  return /** @type{!Array<!proto.v1.ImageInfoE>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_base_pb.ImageInfoE, 13));
};


/** @param {!Array<!proto.v1.ImageInfoE>} value */
proto.v1.LessonCurriculumE.prototype.setMainimgsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.v1.ImageInfoE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.ImageInfoE}
 */
proto.v1.LessonCurriculumE.prototype.addMainimgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.v1.ImageInfoE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonCurriculumE.prototype.clearMainimgsList = function() {
  this.setMainimgsList([]);
};


/**
 * optional UserActivityE userActivity = 14;
 * @return {?proto.v1.UserActivityE}
 */
proto.v1.LessonCurriculumE.prototype.getUseractivity = function() {
  return /** @type{?proto.v1.UserActivityE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.UserActivityE, 14));
};


/** @param {?proto.v1.UserActivityE|undefined} value */
proto.v1.LessonCurriculumE.prototype.setUseractivity = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonCurriculumE.prototype.clearUseractivity = function() {
  this.setUseractivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonCurriculumE.prototype.hasUseractivity = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated string tags = 15;
 * @return {!Array<string>}
 */
proto.v1.LessonCurriculumE.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/** @param {!Array<string>} value */
proto.v1.LessonCurriculumE.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonCurriculumE.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonCurriculumE.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * repeated LessonE lessons = 16;
 * @return {!Array<!proto.v1.LessonE>}
 */
proto.v1.LessonCurriculumE.prototype.getLessonsList = function() {
  return /** @type{!Array<!proto.v1.LessonE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonE, 16));
};


/** @param {!Array<!proto.v1.LessonE>} value */
proto.v1.LessonCurriculumE.prototype.setLessonsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.v1.LessonE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonE}
 */
proto.v1.LessonCurriculumE.prototype.addLessons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.v1.LessonE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonCurriculumE.prototype.clearLessonsList = function() {
  this.setLessonsList([]);
};


/**
 * optional int64 userNo = 17;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getUserno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setUserno = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 idx = 18;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string openType = 19;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getOpentype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setOpentype = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string levelType = 20;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getLeveltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setLeveltype = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string groupType = 21;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getGrouptype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setGrouptype = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int64 ownerNo = 22;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getOwnerno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setOwnerno = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string ownerName = 23;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getOwnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setOwnername = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string elementJson = 24;
 * @return {string}
 */
proto.v1.LessonCurriculumE.prototype.getElementjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.v1.LessonCurriculumE.prototype.setElementjson = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional LessonSummaryE summary = 25;
 * @return {?proto.v1.LessonSummaryE}
 */
proto.v1.LessonCurriculumE.prototype.getSummary = function() {
  return /** @type{?proto.v1.LessonSummaryE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonSummaryE, 25));
};


/** @param {?proto.v1.LessonSummaryE|undefined} value */
proto.v1.LessonCurriculumE.prototype.setSummary = function(value) {
  jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonCurriculumE.prototype.clearSummary = function() {
  this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonCurriculumE.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int64 createdAt = 26;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 updatedAt = 27;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int64 deletedAt = 28;
 * @return {number}
 */
proto.v1.LessonCurriculumE.prototype.getDeletedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.v1.LessonCurriculumE.prototype.setDeletedat = function(value) {
  jspb.Message.setProto3IntField(this, 28, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonPlanE.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    planno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 5, ""),
    idx: jspb.Message.getFieldWithDefault(msg, 6, 0),
    contentsList: jspb.Message.toObjectList(msg.getContentsList(),
    proto.v1.LessonPlanContentE.toObject, includeInstance),
    viewtype: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 9, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanE}
 */
proto.v1.LessonPlanE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanE;
  return proto.v1.LessonPlanE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanE}
 */
proto.v1.LessonPlanE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlanno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 7:
      var value = new proto.v1.LessonPlanContentE;
      reader.readMessage(value,proto.v1.LessonPlanContentE.deserializeBinaryFromReader);
      msg.addContents(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewtype(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlanno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getContentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.v1.LessonPlanContentE.serializeBinaryToWriter
    );
  }
  f = message.getViewtype();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonPlanE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonPlanE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 planNo = 2;
 * @return {number}
 */
proto.v1.LessonPlanE.prototype.getPlanno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonPlanE.prototype.setPlanno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonNo = 3;
 * @return {number}
 */
proto.v1.LessonPlanE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.LessonPlanE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.v1.LessonPlanE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonPlanE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string subTitle = 5;
 * @return {string}
 */
proto.v1.LessonPlanE.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.LessonPlanE.prototype.setSubtitle = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 idx = 6;
 * @return {number}
 */
proto.v1.LessonPlanE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.v1.LessonPlanE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated LessonPlanContentE contents = 7;
 * @return {!Array<!proto.v1.LessonPlanContentE>}
 */
proto.v1.LessonPlanE.prototype.getContentsList = function() {
  return /** @type{!Array<!proto.v1.LessonPlanContentE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonPlanContentE, 7));
};


/** @param {!Array<!proto.v1.LessonPlanContentE>} value */
proto.v1.LessonPlanE.prototype.setContentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.v1.LessonPlanContentE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonPlanContentE}
 */
proto.v1.LessonPlanE.prototype.addContents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.v1.LessonPlanContentE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonPlanE.prototype.clearContentsList = function() {
  this.setContentsList([]);
};


/**
 * optional string viewType = 8;
 * @return {string}
 */
proto.v1.LessonPlanE.prototype.getViewtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.v1.LessonPlanE.prototype.setViewtype = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 createdAt = 9;
 * @return {number}
 */
proto.v1.LessonPlanE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.v1.LessonPlanE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 updatedAt = 10;
 * @return {number}
 */
proto.v1.LessonPlanE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.v1.LessonPlanE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanLayoutE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanLayoutE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanLayoutE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanLayoutE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    idx: jspb.Message.getFieldWithDefault(msg, 3, 0),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    image: (f = msg.getImage()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanLayoutE}
 */
proto.v1.LessonPlanLayoutE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanLayoutE;
  return proto.v1.LessonPlanLayoutE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanLayoutE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanLayoutE}
 */
proto.v1.LessonPlanLayoutE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanLayoutE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanLayoutE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanLayoutE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanLayoutE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonPlanLayoutE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonPlanLayoutE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.v1.LessonPlanLayoutE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonPlanLayoutE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 idx = 3;
 * @return {number}
 */
proto.v1.LessonPlanLayoutE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.LessonPlanLayoutE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.v1.LessonPlanLayoutE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonPlanLayoutE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ImageInfoE image = 5;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonPlanLayoutE.prototype.getImage = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 5));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonPlanLayoutE.prototype.setImage = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanLayoutE.prototype.clearImage = function() {
  this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanLayoutE.prototype.hasImage = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonPlanContentE.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessonplanno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    viewtype: jspb.Message.getFieldWithDefault(msg, 6, ""),
    templatesList: jspb.Message.toObjectList(msg.getTemplatesList(),
    proto.v1.LessonPlanContentTemplateE.toObject, includeInstance),
    base: (f = msg.getBase()) && proto.v1.LessonPlanContentTemplateBaseE.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto.v1.LessonPlanContentTemplateTextE.toObject(includeInstance, f),
    image: (f = msg.getImage()) && proto.v1.LessonPlanContentTemplateImageE.toObject(includeInstance, f),
    video: (f = msg.getVideo()) && proto.v1.LessonPlanContentTemplateVideoE.toObject(includeInstance, f),
    coding: (f = msg.getCoding()) && proto.v1.LessonPlanContentTemplateCodingE.toObject(includeInstance, f),
    idx: jspb.Message.getFieldWithDefault(msg, 13, 0),
    isdone: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    donedate: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentE}
 */
proto.v1.LessonPlanContentE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentE;
  return proto.v1.LessonPlanContentE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentE}
 */
proto.v1.LessonPlanContentE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonplanno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewtype(value);
      break;
    case 7:
      var value = new proto.v1.LessonPlanContentTemplateE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateE.deserializeBinaryFromReader);
      msg.addTemplates(value);
      break;
    case 8:
      var value = new proto.v1.LessonPlanContentTemplateBaseE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateBaseE.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    case 9:
      var value = new proto.v1.LessonPlanContentTemplateTextE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateTextE.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 10:
      var value = new proto.v1.LessonPlanContentTemplateImageE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateImageE.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 11:
      var value = new proto.v1.LessonPlanContentTemplateVideoE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateVideoE.deserializeBinaryFromReader);
      msg.setVideo(value);
      break;
    case 12:
      var value = new proto.v1.LessonPlanContentTemplateCodingE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateCodingE.deserializeBinaryFromReader);
      msg.setCoding(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdone(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDonedate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessonplanno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getViewtype();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.v1.LessonPlanContentTemplateE.serializeBinaryToWriter
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.v1.LessonPlanContentTemplateBaseE.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.v1.LessonPlanContentTemplateTextE.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.v1.LessonPlanContentTemplateImageE.serializeBinaryToWriter
    );
  }
  f = message.getVideo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.v1.LessonPlanContentTemplateVideoE.serializeBinaryToWriter
    );
  }
  f = message.getCoding();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.v1.LessonPlanContentTemplateCodingE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getIsdone();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDonedate();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonPlanContentE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 lessonNo = 2;
 * @return {number}
 */
proto.v1.LessonPlanContentE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonPlanNo = 3;
 * @return {number}
 */
proto.v1.LessonPlanContentE.prototype.getLessonplanno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentE.prototype.setLessonplanno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.v1.LessonPlanContentE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.v1.LessonPlanContentE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string viewType = 6;
 * @return {string}
 */
proto.v1.LessonPlanContentE.prototype.getViewtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentE.prototype.setViewtype = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated LessonPlanContentTemplateE templates = 7;
 * @return {!Array<!proto.v1.LessonPlanContentTemplateE>}
 */
proto.v1.LessonPlanContentE.prototype.getTemplatesList = function() {
  return /** @type{!Array<!proto.v1.LessonPlanContentTemplateE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonPlanContentTemplateE, 7));
};


/** @param {!Array<!proto.v1.LessonPlanContentTemplateE>} value */
proto.v1.LessonPlanContentE.prototype.setTemplatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.v1.LessonPlanContentTemplateE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonPlanContentTemplateE}
 */
proto.v1.LessonPlanContentE.prototype.addTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.v1.LessonPlanContentTemplateE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonPlanContentE.prototype.clearTemplatesList = function() {
  this.setTemplatesList([]);
};


/**
 * optional LessonPlanContentTemplateBaseE base = 8;
 * @return {?proto.v1.LessonPlanContentTemplateBaseE}
 */
proto.v1.LessonPlanContentE.prototype.getBase = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateBaseE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateBaseE, 8));
};


/** @param {?proto.v1.LessonPlanContentTemplateBaseE|undefined} value */
proto.v1.LessonPlanContentE.prototype.setBase = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentE.prototype.clearBase = function() {
  this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentE.prototype.hasBase = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional LessonPlanContentTemplateTextE text = 9;
 * @return {?proto.v1.LessonPlanContentTemplateTextE}
 */
proto.v1.LessonPlanContentE.prototype.getText = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateTextE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateTextE, 9));
};


/** @param {?proto.v1.LessonPlanContentTemplateTextE|undefined} value */
proto.v1.LessonPlanContentE.prototype.setText = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentE.prototype.clearText = function() {
  this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentE.prototype.hasText = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional LessonPlanContentTemplateImageE image = 10;
 * @return {?proto.v1.LessonPlanContentTemplateImageE}
 */
proto.v1.LessonPlanContentE.prototype.getImage = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateImageE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateImageE, 10));
};


/** @param {?proto.v1.LessonPlanContentTemplateImageE|undefined} value */
proto.v1.LessonPlanContentE.prototype.setImage = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentE.prototype.clearImage = function() {
  this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentE.prototype.hasImage = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional LessonPlanContentTemplateVideoE video = 11;
 * @return {?proto.v1.LessonPlanContentTemplateVideoE}
 */
proto.v1.LessonPlanContentE.prototype.getVideo = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateVideoE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateVideoE, 11));
};


/** @param {?proto.v1.LessonPlanContentTemplateVideoE|undefined} value */
proto.v1.LessonPlanContentE.prototype.setVideo = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentE.prototype.clearVideo = function() {
  this.setVideo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentE.prototype.hasVideo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional LessonPlanContentTemplateCodingE coding = 12;
 * @return {?proto.v1.LessonPlanContentTemplateCodingE}
 */
proto.v1.LessonPlanContentE.prototype.getCoding = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateCodingE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateCodingE, 12));
};


/** @param {?proto.v1.LessonPlanContentTemplateCodingE|undefined} value */
proto.v1.LessonPlanContentE.prototype.setCoding = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentE.prototype.clearCoding = function() {
  this.setCoding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentE.prototype.hasCoding = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 idx = 13;
 * @return {number}
 */
proto.v1.LessonPlanContentE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool isDone = 14;
 * @return {boolean}
 */
proto.v1.LessonPlanContentE.prototype.getIsdone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.v1.LessonPlanContentE.prototype.setIsdone = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string doneDate = 15;
 * @return {string}
 */
proto.v1.LessonPlanContentE.prototype.getDonedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentE.prototype.setDonedate = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentSubscribeE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentSubscribeE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentSubscribeE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lessonno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lessonplanno: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isdone: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    donedate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    progress: (f = msg.getProgress()) && v1_base_pb.LessonProgressE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentSubscribeE}
 */
proto.v1.LessonPlanContentSubscribeE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentSubscribeE;
  return proto.v1.LessonPlanContentSubscribeE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentSubscribeE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentSubscribeE}
 */
proto.v1.LessonPlanContentSubscribeE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLessonplanno(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDonedate(value);
      break;
    case 6:
      var value = new v1_base_pb.LessonProgressE;
      reader.readMessage(value,v1_base_pb.LessonProgressE.deserializeBinaryFromReader);
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentSubscribeE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentSubscribeE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentSubscribeE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLessonno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLessonplanno();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getIsdone();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDonedate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProgress();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      v1_base_pb.LessonProgressE.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentSubscribeE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 lessonNo = 2;
 * @return {number}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.getLessonno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentSubscribeE.prototype.setLessonno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lessonPlanNo = 3;
 * @return {number}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.getLessonplanno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentSubscribeE.prototype.setLessonplanno = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool isDone = 4;
 * @return {boolean}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.getIsdone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.v1.LessonPlanContentSubscribeE.prototype.setIsdone = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string doneDate = 5;
 * @return {string}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.getDonedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentSubscribeE.prototype.setDonedate = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional LessonProgressE progress = 6;
 * @return {?proto.v1.LessonProgressE}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.getProgress = function() {
  return /** @type{?proto.v1.LessonProgressE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.LessonProgressE, 6));
};


/** @param {?proto.v1.LessonProgressE|undefined} value */
proto.v1.LessonPlanContentSubscribeE.prototype.setProgress = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentSubscribeE.prototype.clearProgress = function() {
  this.setProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentSubscribeE.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentTemplateE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentTemplateE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentTemplateE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateE.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && proto.v1.LessonPlanContentTemplateBaseE.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto.v1.LessonPlanContentTemplateTextE.toObject(includeInstance, f),
    image: (f = msg.getImage()) && proto.v1.LessonPlanContentTemplateImageE.toObject(includeInstance, f),
    video: (f = msg.getVideo()) && proto.v1.LessonPlanContentTemplateVideoE.toObject(includeInstance, f),
    coding: (f = msg.getCoding()) && proto.v1.LessonPlanContentTemplateCodingE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentTemplateE}
 */
proto.v1.LessonPlanContentTemplateE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentTemplateE;
  return proto.v1.LessonPlanContentTemplateE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentTemplateE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentTemplateE}
 */
proto.v1.LessonPlanContentTemplateE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.LessonPlanContentTemplateBaseE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateBaseE.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    case 2:
      var value = new proto.v1.LessonPlanContentTemplateTextE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateTextE.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 3:
      var value = new proto.v1.LessonPlanContentTemplateImageE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateImageE.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 4:
      var value = new proto.v1.LessonPlanContentTemplateVideoE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateVideoE.deserializeBinaryFromReader);
      msg.setVideo(value);
      break;
    case 5:
      var value = new proto.v1.LessonPlanContentTemplateCodingE;
      reader.readMessage(value,proto.v1.LessonPlanContentTemplateCodingE.deserializeBinaryFromReader);
      msg.setCoding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentTemplateE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentTemplateE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentTemplateE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.v1.LessonPlanContentTemplateBaseE.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.v1.LessonPlanContentTemplateTextE.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.v1.LessonPlanContentTemplateImageE.serializeBinaryToWriter
    );
  }
  f = message.getVideo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.v1.LessonPlanContentTemplateVideoE.serializeBinaryToWriter
    );
  }
  f = message.getCoding();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.v1.LessonPlanContentTemplateCodingE.serializeBinaryToWriter
    );
  }
};


/**
 * optional LessonPlanContentTemplateBaseE base = 1;
 * @return {?proto.v1.LessonPlanContentTemplateBaseE}
 */
proto.v1.LessonPlanContentTemplateE.prototype.getBase = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateBaseE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateBaseE, 1));
};


/** @param {?proto.v1.LessonPlanContentTemplateBaseE|undefined} value */
proto.v1.LessonPlanContentTemplateE.prototype.setBase = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateE.prototype.clearBase = function() {
  this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateE.prototype.hasBase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LessonPlanContentTemplateTextE text = 2;
 * @return {?proto.v1.LessonPlanContentTemplateTextE}
 */
proto.v1.LessonPlanContentTemplateE.prototype.getText = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateTextE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateTextE, 2));
};


/** @param {?proto.v1.LessonPlanContentTemplateTextE|undefined} value */
proto.v1.LessonPlanContentTemplateE.prototype.setText = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateE.prototype.clearText = function() {
  this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateE.prototype.hasText = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LessonPlanContentTemplateImageE image = 3;
 * @return {?proto.v1.LessonPlanContentTemplateImageE}
 */
proto.v1.LessonPlanContentTemplateE.prototype.getImage = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateImageE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateImageE, 3));
};


/** @param {?proto.v1.LessonPlanContentTemplateImageE|undefined} value */
proto.v1.LessonPlanContentTemplateE.prototype.setImage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateE.prototype.clearImage = function() {
  this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateE.prototype.hasImage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LessonPlanContentTemplateVideoE video = 4;
 * @return {?proto.v1.LessonPlanContentTemplateVideoE}
 */
proto.v1.LessonPlanContentTemplateE.prototype.getVideo = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateVideoE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateVideoE, 4));
};


/** @param {?proto.v1.LessonPlanContentTemplateVideoE|undefined} value */
proto.v1.LessonPlanContentTemplateE.prototype.setVideo = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateE.prototype.clearVideo = function() {
  this.setVideo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateE.prototype.hasVideo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LessonPlanContentTemplateCodingE coding = 5;
 * @return {?proto.v1.LessonPlanContentTemplateCodingE}
 */
proto.v1.LessonPlanContentTemplateE.prototype.getCoding = function() {
  return /** @type{?proto.v1.LessonPlanContentTemplateCodingE} */ (
    jspb.Message.getWrapperField(this, proto.v1.LessonPlanContentTemplateCodingE, 5));
};


/** @param {?proto.v1.LessonPlanContentTemplateCodingE|undefined} value */
proto.v1.LessonPlanContentTemplateE.prototype.setCoding = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateE.prototype.clearCoding = function() {
  this.setCoding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateE.prototype.hasCoding = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentTemplateBaseE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentTemplateBaseE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateBaseE.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    img: (f = msg.getImg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    idx: jspb.Message.getFieldWithDefault(msg, 5, 0),
    coordinate: (f = msg.getCoordinate()) && v1_base_pb.CoordinateE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentTemplateBaseE}
 */
proto.v1.LessonPlanContentTemplateBaseE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentTemplateBaseE;
  return proto.v1.LessonPlanContentTemplateBaseE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentTemplateBaseE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentTemplateBaseE}
 */
proto.v1.LessonPlanContentTemplateBaseE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setImg(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 6:
      var value = new v1_base_pb.CoordinateE;
      reader.readMessage(value,v1_base_pb.CoordinateE.deserializeBinaryFromReader);
      msg.setCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentTemplateBaseE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentTemplateBaseE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateBaseE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImg();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCoordinate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      v1_base_pb.CoordinateE.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateBaseE.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateBaseE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ImageInfoE img = 3;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.getImg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 3));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonPlanContentTemplateBaseE.prototype.setImg = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.clearImg = function() {
  this.setImg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.hasImg = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateBaseE.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 idx = 5;
 * @return {number}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentTemplateBaseE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional CoordinateE coordinate = 6;
 * @return {?proto.v1.CoordinateE}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.getCoordinate = function() {
  return /** @type{?proto.v1.CoordinateE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.CoordinateE, 6));
};


/** @param {?proto.v1.CoordinateE|undefined} value */
proto.v1.LessonPlanContentTemplateBaseE.prototype.setCoordinate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.clearCoordinate = function() {
  this.setCoordinate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateBaseE.prototype.hasCoordinate = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentTemplateTextE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentTemplateTextE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateTextE.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    idx: jspb.Message.getFieldWithDefault(msg, 4, 0),
    coordinate: (f = msg.getCoordinate()) && v1_base_pb.CoordinateE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentTemplateTextE}
 */
proto.v1.LessonPlanContentTemplateTextE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentTemplateTextE;
  return proto.v1.LessonPlanContentTemplateTextE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentTemplateTextE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentTemplateTextE}
 */
proto.v1.LessonPlanContentTemplateTextE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 5:
      var value = new v1_base_pb.CoordinateE;
      reader.readMessage(value,v1_base_pb.CoordinateE.deserializeBinaryFromReader);
      msg.setCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentTemplateTextE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentTemplateTextE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateTextE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCoordinate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_base_pb.CoordinateE.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateTextE.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateTextE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateTextE.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 idx = 4;
 * @return {number}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentTemplateTextE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional CoordinateE coordinate = 5;
 * @return {?proto.v1.CoordinateE}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.getCoordinate = function() {
  return /** @type{?proto.v1.CoordinateE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.CoordinateE, 5));
};


/** @param {?proto.v1.CoordinateE|undefined} value */
proto.v1.LessonPlanContentTemplateTextE.prototype.setCoordinate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.clearCoordinate = function() {
  this.setCoordinate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateTextE.prototype.hasCoordinate = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentTemplateImageE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentTemplateImageE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateImageE.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    img: (f = msg.getImg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    idx: jspb.Message.getFieldWithDefault(msg, 4, 0),
    coordinate: (f = msg.getCoordinate()) && v1_base_pb.CoordinateE.toObject(includeInstance, f),
    isreverse: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentTemplateImageE}
 */
proto.v1.LessonPlanContentTemplateImageE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentTemplateImageE;
  return proto.v1.LessonPlanContentTemplateImageE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentTemplateImageE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentTemplateImageE}
 */
proto.v1.LessonPlanContentTemplateImageE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setImg(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 5:
      var value = new v1_base_pb.CoordinateE;
      reader.readMessage(value,v1_base_pb.CoordinateE.deserializeBinaryFromReader);
      msg.setCoordinate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsreverse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentTemplateImageE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentTemplateImageE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateImageE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImg();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCoordinate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_base_pb.CoordinateE.serializeBinaryToWriter
    );
  }
  f = message.getIsreverse();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateImageE.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateImageE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ImageInfoE img = 3;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.getImg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 3));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonPlanContentTemplateImageE.prototype.setImg = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.clearImg = function() {
  this.setImg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.hasImg = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 idx = 4;
 * @return {number}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentTemplateImageE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional CoordinateE coordinate = 5;
 * @return {?proto.v1.CoordinateE}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.getCoordinate = function() {
  return /** @type{?proto.v1.CoordinateE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.CoordinateE, 5));
};


/** @param {?proto.v1.CoordinateE|undefined} value */
proto.v1.LessonPlanContentTemplateImageE.prototype.setCoordinate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.clearCoordinate = function() {
  this.setCoordinate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.hasCoordinate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool isReverse = 6;
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateImageE.prototype.getIsreverse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.v1.LessonPlanContentTemplateImageE.prototype.setIsreverse = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentTemplateVideoE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentTemplateVideoE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateVideoE.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    videono: jspb.Message.getFieldWithDefault(msg, 2, 0),
    videourl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    videotype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    thumbimg: (f = msg.getThumbimg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, ""),
    idx: jspb.Message.getFieldWithDefault(msg, 7, 0),
    coordinate: (f = msg.getCoordinate()) && v1_base_pb.CoordinateE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentTemplateVideoE}
 */
proto.v1.LessonPlanContentTemplateVideoE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentTemplateVideoE;
  return proto.v1.LessonPlanContentTemplateVideoE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentTemplateVideoE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentTemplateVideoE}
 */
proto.v1.LessonPlanContentTemplateVideoE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVideono(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideourl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideotype(value);
      break;
    case 5:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setThumbimg(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 8:
      var value = new v1_base_pb.CoordinateE;
      reader.readMessage(value,v1_base_pb.CoordinateE.deserializeBinaryFromReader);
      msg.setCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentTemplateVideoE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentTemplateVideoE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateVideoE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVideono();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getVideourl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVideotype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getThumbimg();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCoordinate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      v1_base_pb.CoordinateE.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 videoNo = 2;
 * @return {number}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getVideono = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setVideono = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string videoUrl = 3;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getVideourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setVideourl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string videoType = 4;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getVideotype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setVideotype = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ImageInfoE thumbImg = 5;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getThumbimg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 5));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setThumbimg = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.clearThumbimg = function() {
  this.setThumbimg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.hasThumbimg = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string type = 6;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 idx = 7;
 * @return {number}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional CoordinateE coordinate = 8;
 * @return {?proto.v1.CoordinateE}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.getCoordinate = function() {
  return /** @type{?proto.v1.CoordinateE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.CoordinateE, 8));
};


/** @param {?proto.v1.CoordinateE|undefined} value */
proto.v1.LessonPlanContentTemplateVideoE.prototype.setCoordinate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.clearCoordinate = function() {
  this.setCoordinate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateVideoE.prototype.hasCoordinate = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonPlanContentTemplateCodingE.repeatedFields_ = [5,7,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonPlanContentTemplateCodingE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonPlanContentTemplateCodingE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateCodingE.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    codingtype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answercode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    answerimgsList: jspb.Message.toObjectList(msg.getAnswerimgsList(),
    v1_base_pb.ImageInfoE.toObject, includeInstance),
    initcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    questionsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    purpose: jspb.Message.getFieldWithDefault(msg, 8, ""),
    idx: jspb.Message.getFieldWithDefault(msg, 9, 0),
    creationtype: jspb.Message.getFieldWithDefault(msg, 10, ""),
    hardwaretypesList: jspb.Message.toObjectList(msg.getHardwaretypesList(),
    proto.v1.LessonHardwareE.toObject, includeInstance),
    coordinate: (f = msg.getCoordinate()) && v1_base_pb.CoordinateE.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonPlanContentTemplateCodingE}
 */
proto.v1.LessonPlanContentTemplateCodingE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonPlanContentTemplateCodingE;
  return proto.v1.LessonPlanContentTemplateCodingE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonPlanContentTemplateCodingE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonPlanContentTemplateCodingE}
 */
proto.v1.LessonPlanContentTemplateCodingE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodingtype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswercode(value);
      break;
    case 5:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.addAnswerimgs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addQuestions(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurpose(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreationtype(value);
      break;
    case 11:
      var value = new proto.v1.LessonHardwareE;
      reader.readMessage(value,proto.v1.LessonHardwareE.deserializeBinaryFromReader);
      msg.addHardwaretypes(value);
      break;
    case 12:
      var value = new v1_base_pb.CoordinateE;
      reader.readMessage(value,v1_base_pb.CoordinateE.deserializeBinaryFromReader);
      msg.setCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonPlanContentTemplateCodingE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonPlanContentTemplateCodingE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonPlanContentTemplateCodingE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCodingtype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswercode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAnswerimgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getInitcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getPurpose();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCreationtype();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getHardwaretypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.v1.LessonHardwareE.serializeBinaryToWriter
    );
  }
  f = message.getCoordinate();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      v1_base_pb.CoordinateE.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string codingType = 3;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getCodingtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setCodingtype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string answerCode = 4;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getAnswercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setAnswercode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated ImageInfoE answerImgs = 5;
 * @return {!Array<!proto.v1.ImageInfoE>}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getAnswerimgsList = function() {
  return /** @type{!Array<!proto.v1.ImageInfoE>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_base_pb.ImageInfoE, 5));
};


/** @param {!Array<!proto.v1.ImageInfoE>} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setAnswerimgsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.v1.ImageInfoE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.ImageInfoE}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.addAnswerimgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.v1.ImageInfoE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.clearAnswerimgsList = function() {
  this.setAnswerimgsList([]);
};


/**
 * optional string initCode = 6;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getInitcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setInitcode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string questions = 7;
 * @return {!Array<string>}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getQuestionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setQuestionsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.addQuestions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.clearQuestionsList = function() {
  this.setQuestionsList([]);
};


/**
 * optional string purpose = 8;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getPurpose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setPurpose = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 idx = 9;
 * @return {number}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string creationType = 10;
 * @return {string}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getCreationtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setCreationtype = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated LessonHardwareE hardwareTypes = 11;
 * @return {!Array<!proto.v1.LessonHardwareE>}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getHardwaretypesList = function() {
  return /** @type{!Array<!proto.v1.LessonHardwareE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonHardwareE, 11));
};


/** @param {!Array<!proto.v1.LessonHardwareE>} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setHardwaretypesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.v1.LessonHardwareE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonHardwareE}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.addHardwaretypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.v1.LessonHardwareE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.clearHardwaretypesList = function() {
  this.setHardwaretypesList([]);
};


/**
 * optional CoordinateE coordinate = 12;
 * @return {?proto.v1.CoordinateE}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.getCoordinate = function() {
  return /** @type{?proto.v1.CoordinateE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.CoordinateE, 12));
};


/** @param {?proto.v1.CoordinateE|undefined} value */
proto.v1.LessonPlanContentTemplateCodingE.prototype.setCoordinate = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.clearCoordinate = function() {
  this.setCoordinate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonPlanContentTemplateCodingE.prototype.hasCoordinate = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonImageE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonImageE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonImageE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonImageE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    serviceno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    servicetype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imagekey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    image: (f = msg.getImage()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    idx: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonImageE}
 */
proto.v1.LessonImageE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonImageE;
  return proto.v1.LessonImageE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonImageE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonImageE}
 */
proto.v1.LessonImageE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServiceno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicetype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagekey(value);
      break;
    case 5:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonImageE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonImageE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonImageE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonImageE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getServiceno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getServicetype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImagekey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonImageE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonImageE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 serviceNo = 2;
 * @return {number}
 */
proto.v1.LessonImageE.prototype.getServiceno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonImageE.prototype.setServiceno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string serviceType = 3;
 * @return {string}
 */
proto.v1.LessonImageE.prototype.getServicetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonImageE.prototype.setServicetype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string imageKey = 4;
 * @return {string}
 */
proto.v1.LessonImageE.prototype.getImagekey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonImageE.prototype.setImagekey = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ImageInfoE image = 5;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonImageE.prototype.getImage = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 5));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonImageE.prototype.setImage = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonImageE.prototype.clearImage = function() {
  this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonImageE.prototype.hasImage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 idx = 6;
 * @return {number}
 */
proto.v1.LessonImageE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.v1.LessonImageE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 createdAt = 7;
 * @return {number}
 */
proto.v1.LessonImageE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.v1.LessonImageE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 updatedAt = 8;
 * @return {number}
 */
proto.v1.LessonImageE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.LessonImageE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonVideoE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonVideoE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonVideoE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonVideoE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    serviceno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    servicetype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lang: jspb.Message.getFieldWithDefault(msg, 4, ""),
    video: (f = msg.getVideo()) && v1_video_pb.VideoInfoE.toObject(includeInstance, f),
    idx: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonVideoE}
 */
proto.v1.LessonVideoE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonVideoE;
  return proto.v1.LessonVideoE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonVideoE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonVideoE}
 */
proto.v1.LessonVideoE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServiceno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicetype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 5:
      var value = new v1_video_pb.VideoInfoE;
      reader.readMessage(value,v1_video_pb.VideoInfoE.deserializeBinaryFromReader);
      msg.setVideo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonVideoE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonVideoE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonVideoE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonVideoE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getServiceno();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getServicetype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLang();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVideo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_video_pb.VideoInfoE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonVideoE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonVideoE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 serviceNo = 2;
 * @return {number}
 */
proto.v1.LessonVideoE.prototype.getServiceno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.v1.LessonVideoE.prototype.setServiceno = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string serviceType = 3;
 * @return {string}
 */
proto.v1.LessonVideoE.prototype.getServicetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonVideoE.prototype.setServicetype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lang = 4;
 * @return {string}
 */
proto.v1.LessonVideoE.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonVideoE.prototype.setLang = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional VideoInfoE video = 5;
 * @return {?proto.v1.VideoInfoE}
 */
proto.v1.LessonVideoE.prototype.getVideo = function() {
  return /** @type{?proto.v1.VideoInfoE} */ (
    jspb.Message.getWrapperField(this, v1_video_pb.VideoInfoE, 5));
};


/** @param {?proto.v1.VideoInfoE|undefined} value */
proto.v1.LessonVideoE.prototype.setVideo = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonVideoE.prototype.clearVideo = function() {
  this.setVideo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonVideoE.prototype.hasVideo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 idx = 6;
 * @return {number}
 */
proto.v1.LessonVideoE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.v1.LessonVideoE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 createdAt = 7;
 * @return {number}
 */
proto.v1.LessonVideoE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.v1.LessonVideoE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 updatedAt = 8;
 * @return {number}
 */
proto.v1.LessonVideoE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.LessonVideoE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.LessonSummaryE.repeatedFields_ = [2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonSummaryE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonSummaryE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonSummaryE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonSummaryE.toObject = function(includeInstance, msg) {
  var f, obj = {
    intro: jspb.Message.getFieldWithDefault(msg, 1, ""),
    goalsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    outputsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    elementsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    hardwaretypesList: jspb.Message.toObjectList(msg.getHardwaretypesList(),
    proto.v1.LessonHardwareE.toObject, includeInstance),
    codingtypesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonSummaryE}
 */
proto.v1.LessonSummaryE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonSummaryE;
  return proto.v1.LessonSummaryE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonSummaryE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonSummaryE}
 */
proto.v1.LessonSummaryE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntro(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addGoals(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addOutputs(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addElements(value);
      break;
    case 5:
      var value = new proto.v1.LessonHardwareE;
      reader.readMessage(value,proto.v1.LessonHardwareE.deserializeBinaryFromReader);
      msg.addHardwaretypes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addCodingtypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonSummaryE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonSummaryE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonSummaryE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonSummaryE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntro();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getHardwaretypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.v1.LessonHardwareE.serializeBinaryToWriter
    );
  }
  f = message.getCodingtypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string intro = 1;
 * @return {string}
 */
proto.v1.LessonSummaryE.prototype.getIntro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonSummaryE.prototype.setIntro = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string goals = 2;
 * @return {!Array<string>}
 */
proto.v1.LessonSummaryE.prototype.getGoalsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.v1.LessonSummaryE.prototype.setGoalsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonSummaryE.prototype.addGoals = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonSummaryE.prototype.clearGoalsList = function() {
  this.setGoalsList([]);
};


/**
 * repeated string outputs = 3;
 * @return {!Array<string>}
 */
proto.v1.LessonSummaryE.prototype.getOutputsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.v1.LessonSummaryE.prototype.setOutputsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonSummaryE.prototype.addOutputs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonSummaryE.prototype.clearOutputsList = function() {
  this.setOutputsList([]);
};


/**
 * repeated string elements = 4;
 * @return {!Array<string>}
 */
proto.v1.LessonSummaryE.prototype.getElementsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.v1.LessonSummaryE.prototype.setElementsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonSummaryE.prototype.addElements = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonSummaryE.prototype.clearElementsList = function() {
  this.setElementsList([]);
};


/**
 * repeated LessonHardwareE hardwareTypes = 5;
 * @return {!Array<!proto.v1.LessonHardwareE>}
 */
proto.v1.LessonSummaryE.prototype.getHardwaretypesList = function() {
  return /** @type{!Array<!proto.v1.LessonHardwareE>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.LessonHardwareE, 5));
};


/** @param {!Array<!proto.v1.LessonHardwareE>} value */
proto.v1.LessonSummaryE.prototype.setHardwaretypesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.v1.LessonHardwareE=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.LessonHardwareE}
 */
proto.v1.LessonSummaryE.prototype.addHardwaretypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.v1.LessonHardwareE, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonSummaryE.prototype.clearHardwaretypesList = function() {
  this.setHardwaretypesList([]);
};


/**
 * repeated string codingTypes = 6;
 * @return {!Array<string>}
 */
proto.v1.LessonSummaryE.prototype.getCodingtypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.v1.LessonSummaryE.prototype.setCodingtypesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.v1.LessonSummaryE.prototype.addCodingtypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.v1.LessonSummaryE.prototype.clearCodingtypesList = function() {
  this.setCodingtypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonHardwareE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonHardwareE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonHardwareE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonHardwareE.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hardwaretype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mainimg: (f = msg.getMainimg()) && v1_base_pb.ImageInfoE.toObject(includeInstance, f),
    idx: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonHardwareE}
 */
proto.v1.LessonHardwareE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonHardwareE;
  return proto.v1.LessonHardwareE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonHardwareE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonHardwareE}
 */
proto.v1.LessonHardwareE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwaretype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 5:
      var value = new v1_base_pb.ImageInfoE;
      reader.readMessage(value,v1_base_pb.ImageInfoE.deserializeBinaryFromReader);
      msg.setMainimg(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonHardwareE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonHardwareE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonHardwareE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonHardwareE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getHardwaretype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMainimg();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      v1_base_pb.ImageInfoE.serializeBinaryToWriter
    );
  }
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int64 no = 1;
 * @return {number}
 */
proto.v1.LessonHardwareE.prototype.getNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.v1.LessonHardwareE.prototype.setNo = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string hardwareType = 2;
 * @return {string}
 */
proto.v1.LessonHardwareE.prototype.getHardwaretype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonHardwareE.prototype.setHardwaretype = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.LessonHardwareE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonHardwareE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string subTitle = 4;
 * @return {string}
 */
proto.v1.LessonHardwareE.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonHardwareE.prototype.setSubtitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ImageInfoE mainImg = 5;
 * @return {?proto.v1.ImageInfoE}
 */
proto.v1.LessonHardwareE.prototype.getMainimg = function() {
  return /** @type{?proto.v1.ImageInfoE} */ (
    jspb.Message.getWrapperField(this, v1_base_pb.ImageInfoE, 5));
};


/** @param {?proto.v1.ImageInfoE|undefined} value */
proto.v1.LessonHardwareE.prototype.setMainimg = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.v1.LessonHardwareE.prototype.clearMainimg = function() {
  this.setMainimg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.LessonHardwareE.prototype.hasMainimg = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 idx = 6;
 * @return {number}
 */
proto.v1.LessonHardwareE.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.v1.LessonHardwareE.prototype.setIdx = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 createdAt = 7;
 * @return {number}
 */
proto.v1.LessonHardwareE.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.v1.LessonHardwareE.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 updatedAt = 8;
 * @return {number}
 */
proto.v1.LessonHardwareE.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.v1.LessonHardwareE.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.LessonLanguageE.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.LessonLanguageE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.LessonLanguageE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonLanguageE.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    describe: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.LessonLanguageE}
 */
proto.v1.LessonLanguageE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.LessonLanguageE;
  return proto.v1.LessonLanguageE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.LessonLanguageE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.LessonLanguageE}
 */
proto.v1.LessonLanguageE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescribe(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.LessonLanguageE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.LessonLanguageE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.LessonLanguageE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.LessonLanguageE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescribe();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.v1.LessonLanguageE.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.v1.LessonLanguageE.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.v1.LessonLanguageE.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.v1.LessonLanguageE.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subTitle = 3;
 * @return {string}
 */
proto.v1.LessonLanguageE.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.v1.LessonLanguageE.prototype.setSubtitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string describe = 4;
 * @return {string}
 */
proto.v1.LessonLanguageE.prototype.getDescribe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.v1.LessonLanguageE.prototype.setDescribe = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.v1);
